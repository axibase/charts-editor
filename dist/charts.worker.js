(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "dist";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./monaco/charts.worker.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./monaco/charts.worker.ts":
/*!*********************************!*\
  !*** ./monaco/charts.worker.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! monaco-editor-core/esm/vs/editor/editor.worker */ \"./node_modules/monaco-editor-core/esm/vs/editor/editor.worker.js\"), __webpack_require__(/*! ./chartsWorker */ \"./monaco/chartsWorker.ts\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, worker, chartsWorker_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    self.onmessage = function () {\n        // ignore the first message\n        worker.initialize(function (ctx, createData) {\n            return new chartsWorker_1.chartsWorker(ctx, createData);\n        });\n    };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./monaco/charts.worker.ts?");

/***/ }),

/***/ "./monaco/chartsWorker.ts":
/*!********************************!*\
  !*** ./monaco/chartsWorker.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! axibasecharts-syntax/server/axibase-server-web */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/completionProvider.js\"), __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/vscode-languageserver-types/lib/esm/main.js\"), __webpack_require__(/*! axibasecharts-syntax/server/axibase-server-web */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/completionProvider.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, axibase_server_web_1, ls) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var chartsWorker = /** @class */ (function () {\n        function chartsWorker(ctx, createData) {\n            this._ctx = ctx;\n            this._languageId = createData.languageId;\n        }\n        chartsWorker.prototype.doComplete = function (uri, position) {\n            var document = this._getTextDocument(uri);\n            var completions = new axibase_server_web_1.CompletionProvider(document, position).getCompletionItems();\n            return Promise.resolve(ls.CompletionList.create(completions));\n        };\n        chartsWorker.prototype._getTextDocument = function (uri) {\n            var e_1, _a;\n            var models = this._ctx.getMirrorModels();\n            try {\n                for (var models_1 = __values(models), models_1_1 = models_1.next(); !models_1_1.done; models_1_1 = models_1.next()) {\n                    var model = models_1_1.value;\n                    if (model.uri.toString() === uri) {\n                        return ls.TextDocument.create(uri, this._languageId, model.version, model.getValue());\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (models_1_1 && !models_1_1.done && (_a = models_1.return)) _a.call(models_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return null;\n        };\n        return chartsWorker;\n    }());\n    exports.chartsWorker = chartsWorker;\n    function create(ctx, createData) {\n        return new chartsWorker(ctx, createData);\n    }\n    exports.create = create;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./monaco/chartsWorker.ts?");

/***/ }),

/***/ "./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/descriptions.md":
/*!*************************************************************************************************!*\
  !*** ./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/descriptions.md ***!
  \*************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"## addmeta  \\n  \\n## aheadtimespan  \\n  \\nShow an amount of time ahead of the last series value.  \\nDefine in percent.  \\n  \\n## alertexpression  \\n  \\nApply separate alert rules to several series with one `alert-style` in `[widget]` settings.  \\n  \\n## alertrowstyle  \\n  \\n## alertstyle  \\n  \\nVertex style upon breach of `alert-expression` condition.  \\n  \\n## alias  \\n  \\nCreate a unique series designation to pass data to other series.  \\n  \\n## align  \\n  \\nDetermine a uniform start time for all periods.  \\nPossible values: `START_TIME`, `END_TIME`, `CALENDAR`(default), `FIRST_VALUE_TIME`.  \\n  \\n## arcs  \\n  \\n## arrowlength  \\n  \\nLength of the gauge arrow, measured as `%` of radius.  \\n  \\n## arrows  \\n  \\nArrows on the directed edges.  \\n  \\n## attribute  \\n  \\nUse as an alternative to `metric` setting.  \\nIf both `table` and `attribute` are defined, `metric = table,attribute`.  \\n  \\n## audioalert  \\n  \\nPlay an audio file when `alert-expression` evaluates to `true`.  \\nStore audio files in the `opt/atsd/atsd/conf/portal` directory of your ATSD installation.  \\nSet the following path in the `audio-alert` setting: `/portal/resource/alarm.oog`.  \\nFiles in this directory must always be references with the `/resource/` before the file name.  \\nAudio is only played on `true` to `false` changes or vise versa.  \\nAudio is played once, on initial alert occurrence.  \\nSupported audio alert formats: `.mp3`, `.oog`, `.wav`.  \\n  \\n## audioonload  \\n  \\nPlay audio alert on initial widget load if `audio-alert` setting contains path to audio file and `audio-onload = true`.  \\n  \\n## author  \\n  \\n## autoheight  \\n  \\nCalculate row height automatically based on vertical space allocated to the widget and the number of rows.  \\n  \\n## autopadding  \\n  \\nAdd padding if labels overflow container.  \\n  \\n## autoperiod  \\n  \\nAutomatically define the aggregation period for the series based on the chosen time interval.  \\n  \\n## autoscale  \\n  \\nAutomatically scale the visible portion of the graph.  \\n  \\n## axis  \\n  \\nAssign series axis.  \\n  \\n## axistitle  \\n  \\nLabel axes.  \\n  \\n## axistitleleft  \\n  \\nLabel left axis.  \\n  \\n## axistitleright  \\n  \\nLabel right axis.  \\n  \\n## barcount  \\n  \\nNumber of bars or distributions.  \\nAlternatively control bar count from mouseover menu in the upper right corner of the widget.  \\n  \\n## batchsize  \\n  \\nMaximum number of series in one batch request to the server.  \\nIf `0` is specified, the limit is not set.  \\nApplies when `batch-update = true`.  \\n  \\n## batchupdate  \\n  \\nSending data queries to the server in batches with size specified in `batch-size` setting.  \\nIf enabled, series for which the request has failed are requested separately from successfully updated series.  \\n  \\n## borderwidth  \\n  \\nOffset between gauge ring and parent container,measured as `%` of radius.  \\n  \\n## bottomaxis  \\n  \\nValues displayed on the bottom axis.  \\n  \\n## bundle  \\n  \\nHierarchical contraction of edges ([Danny Holten](https://www.researchgate.net/publication/6715561_Hierarchical_Edge_Bundles_Visualization_of_Adjacency_Relations_in_Hierarchical_Data) algorithm).  \\n  \\n## bundled  \\n  \\nHierarchical contraction of edges ([Danny Holten](https://www.researchgate.net/publication/6715561_Hierarchical_Edge_Bundles_Visualization_of_Adjacency_Relations_in_Hierarchical_Data) algorithm).  \\n  \\n## buttons  \\n  \\nAdd buttons to the widget header. The buttons are visible on mouse-over.  \\n`update` stops/resumes the loading of new data into the widget.  \\n`reset` is supported only in the table widget. The parameter resets column sorting to the initial order.  \\n  \\n## cache  \\n  \\nRetrieve the most recent value from the HBase **Last Insert** table.  \\nThis setting is useful for widget which only display one value: Gauge, Bar, Text, Treemap, etc.  \\n  \\n## capitalize  \\n  \\nCapitalize column names. Default: `true`.  \\n  \\n## caption  \\n  \\nText displayed on top of the gauge.  \\nCaption can be split into multiple lines.  \\nHTML markup is supported.  \\n  \\n## captionstyle  \\n  \\nCSS style applied to caption.  \\n  \\n## case  \\n  \\nDefine case for column headers.  \\n  \\n## centralizecolumns  \\n  \\nPosition columns between ticks instead of directly above ticks.  \\n  \\n## centralizeticks  \\n  \\nPosition time and date markers between instead of under ticks.  \\n  \\n## changefield  \\n  \\nWidget setting changed upon drop-down list selection. To update the widget subsection setting, use `{section-name}.{setting-name}` syntax. For example, `series.entity` or `keys.mq_manager_name`.  \\n  \\n## circle  \\n  \\nDisplays background circle.  \\n  \\n## class  \\n  \\nApply Unix style with black background.  \\n  \\n## collapsible  \\n\\n## columnalertexpression  \\n  \\nBoolean expression to apply conditional style to bars. The CSS style must be specified in the `column-alert-style` setting.\\nThe `value` field contains the total of all series in the given bar.  \\n  \\n## columnalertstyle  \\n  \\nCSS style applied to the bar rectangle if `column-alert-expression` is `true`.  \\n  \\n## columnlabelformat  \\n  \\nColumn label pattern containing text and placeholders.\\nSupported placeholders: `entity`, `metric`, `tagName`, `tagValue`, `tags.{tag-name}`, `statistics`, `period`.  \\n  \\n## columnentity  \\n  \\nChange the name of column `entity` in the [Table](../streaming-table/README.md), [Property](../property-table/README.md), and [Console](../alert-console/README.md) widgets.\\nHide `column-entity` with `column-entity = null`.  \\n  \\n## columnmetric  \\n  \\nChange the name of column `metric` in the [Table](../streaming-table/README.md), [Property](../property-table/README.md), and [Console](../alert-console/README.md) widgets.\\nHide `column-metric` with `column-metric = null`.  \\n  \\n## columntime  \\n  \\nChange the name of column `time` in the [Table](../streaming-table/README.md), [Property](../property-table/README.md), and [Console](../alert-console/README.md) widgets.\\nHide `column-time` with `column-time = null`.  \\n  \\n## columnvalue  \\n  \\nChange the name of column `value` in the [Table](../streaming-table/README.md), [Property](../property-table/README.md), and [Console](../alert-console/README.md) widgets.\\nHide `column-value` with `column-value = null`.  \\n  \\n## color  \\n  \\nAssign a color to the series.  \\n  \\n## colorrange  \\n  \\nColor palette automatically assigned to threshold ranges.  \\n  \\n## colors  \\n  \\nRedefine default palette.  \\nTable, Console, Property, Text, and Page widgets do not support this setting.  \\nDefault palette is defined by the array `window.defaultColors`.  \\n  \\n## contextheight  \\n  \\nDefine the height of the context graph. Used to adjust the displayed timespan.  \\n`0` by default for the widget in the main window.  \\n`70` by default for the widget in the dialog window.  \\n  \\n## contextpath  \\n  \\nContext path. Default value is `api/v1`.  \\n  \\n## counter  \\n  \\n## counterposition  \\n  \\nCounter position.  \\n  \\n## currentperiodstyle  \\n  \\nApply CSS styles to values of the current period, such as the most recent hour, day, or week, in `column` and `column-stack` mode.  \\n  \\n## data  \\n  \\nInformation about the last time series value next to the image of the corresponding vertex.  \\n  \\n## datalabels  \\n  \\nDisplay values inside colored rectangles formatted according to [format](https://axibase.com/docs/charts/widgets/shared/#format) setting.  \\n  \\n## datatype  \\n  \\nDefine current series data type.  \\n  \\n## dayformat  \\n  \\nFormat `x` axis timestamps using Format Syntax.  \\n  \\n## defaultcolor  \\n  \\n## defaultsize  \\n  \\n## depth  \\n  \\nDepth of the displayed vertex hierarchy from `1` to the maximum depth of the vertex hierarchy plus `1`  \\nFinal level corresponds to edges  \\nMaximum depth of the hierarchy is default.  \\n  \\n## description  \\n  \\n## dialogmaximize  \\n  \\nIf enabled, the dialog window is expanded to the entire portal page.  \\nDialog window can be opened by clicking on the widget header.  \\n  \\n## disablealert  \\n  \\nCancel alerts raised by the loaded page.  \\n  \\n## disconnectcount  \\n  \\nDefine average distance between time values in the series  \\nIf the gap between data is greater than the defined value,a break is displayed.  \\nIf `disconnect-count = 1`, the disconnect interval is equal to the mean interval.  \\nSee Disconnect Count Behavior for more information.  \\n  \\n## disconnectednodedisplay  \\n  \\nShow vertices without edge.  \\n  \\n## disconnectinterval  \\n  \\nDefines maximum time gap between data during which points of the series line are connected.  \\nIf the gap between data is greater than the specified interval, a break is displayed.  \\n  \\n## disconnectvalue  \\n  \\nApply disconnect value in tandem with disconnect interval or count.  \\nDefine the value to be applied to disconnected areas.  \\nUse this setting when ATSD is not collecting `null` values or those below a minimum threshold.  \\nAdditionally, toggle display of disconnect value with **Connect Values** on left axis mouseover menu.  \\n  \\n## display  \\n  \\nDefine a rule to display series.  \\nFilter series based on metric values for widgets containing many series.  \\n  \\n## displaydate  \\n  \\nDisplay the time period captured by the Time Chart.  \\n  \\n## displayinlegend  \\n  \\n## displaylabels  \\n  \\n## displayother  \\n  \\n## displaypanels  \\n  \\nDisplay control panels in the top left or right corners in Time and Bar charts.  \\n  \\n## displaytags  \\n  \\nDisplay a separate column for each tag in the underlying series.  \\n  \\n## displayticks  \\n  \\nDisplay ticks on the axis.  \\n  \\n## displaytip  \\n  \\nDisplay last value marker.  \\n  \\n## displaytotal  \\n  \\nDisplays the sum of rectangle sizes such as `size` setting for series.  \\n  \\n## displayvalues  \\n  \\nShow or hide bar total values.  \\n  \\n## downsample  \\n  \\nEnable [downsampling](https://axibase.com/docs/atsd/api/data/series/downsample.html#downsampling) for the current chart configuration.  \\n  \\n## downsamplealgorithm  \\n  \\nDefine [downsample algorithm](https://axibase.com/docs/atsd/api/data/series/downsample.html#algorithm) used for calculation.  \\n  \\n## downsampledifference  \\n  \\nDefine deviation between consecutive values which the database considers equivalent.  \\nUse this setting to include minor deviations in downsampling.  \\n  \\n## downsampleratio  \\n  \\nDefine downsample [ratio](https://axibase.com/docs/atsd/api/data/series/downsample.html#ratio-check).  \\n  \\n## downsamplegap  \\n  \\nControl the occurrence of repeated values by defining the gap using time interval.  \\nA larger gap value decreases the occurrence of repeated values.  \\n  \\n## downsampleorder  \\n  \\n## duration  \\n  \\nThe duration of a transaction when changing the geometry of the graph in milliseconds.  \\n  \\n## effects  \\n  \\nAnimation when changing the geometry of the graph.  \\n  \\n## emptyrefreshinterval  \\n  \\n## emptythreshold  \\n  \\n## enabled  \\n  \\nHide series in the widget legend based on expression or boolean statement.  \\n  \\n## endtime  \\n  \\nSpecifies the date and time in local or [ISO format](https://axibase.com/docs/atsd/shared/date-format.html) until which the values for the series are loaded.  \\nThe setting can be overridden by each widget separately.  \\nNote that `start-time` is **inclusive** and `end-time` is **exclusive**.  \\nThis means that `start-time = 2017-09-14 10:00:00` includes data points that occurred exactly at `10:00:00` and later whereas `end-time = 2017-09-14 11:00:00` includes data points that occurred up to `10:59:59`, excluding points that occurred at `11:00:00`.  \\nThe setting supports [calendar](https://axibase.com/docs/atsd/shared/calendar.html) keywords.  \\n  \\n## endworkingminutes  \\n  \\n## entities  \\n  \\nDefine multiple entities with one setting.  \\nIf both `entity` and `entities` are specified, the former takes precedence.  \\nSupport `?` and `*` [wildcards](https://axibase.com/docs/charts/syntax/wildcards.html)|  \\n  \\n## entity  \\n  \\nDefine the Entity.  \\nSupports `?` and `*` [wildcards](https://axibase.com/docs/charts/syntax/wildcards.html)  \\n  \\n## entityexpression  \\n  \\nApply server-side filter to all series based on entity names, tags, and fields.  \\n  \\n## entitygroup  \\n  \\nDefine an Entity Group.  \\n  \\n## entitylabel  \\n  \\nOverride grouped series legend when `group=entity`.  \\n  \\n## errorrefreshinterval  \\n  \\nDefine the wait period after ATSD handles a server processing error before refreshing data.  \\n  \\n## exactmatch  \\n  \\nIgnore series with tags, other than those specified in the series configuration.  \\n  \\n## expand  \\n  \\nExpand all segments or an individual segment.  \\nDouble-click modifies `expand` setting interactively.  \\n  \\n## expandpanels  \\n  \\nDisplay control panels in the top left or right corners in Time chart.  \\n  \\n## expandtags  \\n  \\nShow response tags as columns.  \\nUseful when exact tags are not known in advance.  \\n  \\n## expiretimespan  \\n  \\n## fillvalue  \\n  \\nInterpolates a missing value for the given timestamp when merging multiple series with different timestamps.\\nPossible values: `false`, `true`.  \\n  \\n## filterrange  \\n  \\n## fitsvg  \\n  \\n## fontscale  \\n  \\nRatio of font height to row height when `auto-height = true`.  \\nMinimum row height is `10px`, maximum row height is `64px`.  \\n  \\n## fontsize  \\n  \\nFont size settings as a whole number.  \\n  \\n## forecastarimaauto  \\n  \\nGenerate an ARIMA forecast using optimal settings.\\nIf `true`, ARIMA parameters `p` and `d` are selected automatically based on scoring.\\nIf set to `false`, parameters `p`, `d` are required.\\n  \\n## forecastarimaautoregressioninterval  \\n  \\nAlternative parameter for `p` where `p` is calculated as `auto-regression-interval / interval`.\\nSpecified as the number of [time units](https://axibase.com/docs/atsd/api/data/series/time-unit.html).\\nFormat: `count time_unit`.  \\n  \\n## forecastarimad  \\n  \\nIntegration parameter `d`, a number of `0` or `1`.  \\n  \\n## forecastarimap  \\n  \\nAuto-regression parameter `p`.  \\n  \\n## forecasthorizoninterval  \\n  \\nGenerate a forecast for the specified interval into the future starting with last sample of the loaded series.\\nThe interval is specified as the number of [time units](https://axibase.com/docs/atsd/api/data/series/time-unit.html).  \\n  \\n## forecasthorizonlength  \\n  \\nGenerate a forecast for the specified number of samples into the future.  \\n  \\n## forecasthorizonendtime  \\n  \\nGenerate a forecast starting with last sample of the loaded series and until the specified date in the future.  \\n  \\n## forecasthorizonstarttime  \\n  \\nGenerate a forecast for the specified interval into the future starting with specified date instead of the last sample of the loaded series.  \\n  \\n## forecasthwauto  \\n  \\nGenerate a Holt-Winters forecast using optimal settings.\\nIf `true` Holt-Winters parameters `alpha`, `beta`, `gamma` are selected automatically based on scoring.\\nIf set to `false`, parameters `alpha`, `beta`, `gamma` are required.  \\n  \\n## forecasthwalpha  \\n  \\nHolt-Winters `alpha` (data) parameter.\\nPossible values: `[0, 1]`.  \\n  \\n## forecasthwbeta  \\n  \\nHolt-Winters `beta` (trend) parameter.\\nPossible values: `[0, 1]`.  \\n  \\n## forecasthwgamma  \\n  \\nHolt-Winters `gamma` (seasonality) parameter.\\nPossible values: `[0, 1]`.  \\n  \\n## forecasthwperiod  \\n  \\nSeries period (seasonality) parameter.\\nThe interval is specified as the number of [time units](https://axibase.com/docs/atsd/api/data/series/time-unit.html).\\nFormat: `count time_unit`.\\n  \\n## forecastinclude  \\n  \\nInclude input series, forecast or reconstructed series into response.  \\n  \\n## forecastname  \\n  \\n[Forecast name](https://axibase.com/docs/atsd/api/data/series/query.html#forecast-filter) when `data-type` setting is set to  `forecast`, `forecast_deviation`, `lower_confidence`, `upper_confidence`.\\nIf no forecast name is specified, the [default series forecast](https://axibase.com/docs/atsd/forecasting/#persistence-settings) is loaded.  \\n\\n## forecastscoreinterval  \\n  \\nInterval for scoring the produced forecasts ending with the last sample of the input series.\\nThe interval is specified as the number of [time units](https://axibase.com/docs/atsd/api/data/series/time-unit.html).\\nFormat: `count time_unit`.\\nFor SSA, the default value is the minimum of `forecast-horizon-interval` and `1/3` of the loaded series duration.\\nFor ARIMA and Holt-Winters the default value is `1/4` of the loaded series duration.  \\n  \\n## forecastssa  \\n  \\nGenerate an SSA (singular spectrum analysis) forecast.  \\n  \\n## forecastssadecomposeeigentriplelimit  \\n  \\nMaximum number of eigenvectors extracted from the trajectory matrix during the singular value decomposition (SVD).\\nPossible values: between `0` and `500`.\\nIf set to `0`, the count is determined automatically.  \\n  \\n## forecastssadecomposemethod  \\n  \\nThe algorithm applied in singular value decomposition (SVD) of the trajectory matrix to extract eigenvectors.\\nPossible values: `FULL`, `TRUNCATED`, `AUTO`.  \\n  \\n## forecastssadecomposesingularvaluethreshold  \\n  \\nThreshold, specified in percent, to discard small eigenvectors. Eigenvector with eigenvalue λ is discarded if √λ is less than the specified % of √ sum of all eigenvalues.\\nDiscard if `√λ ÷ √ (∑ λi) < threshold ÷ 100`.\\nIf threshold is `0`, no vectors are discarded.\\nPossible values: `[0, 100)`.  \\n  \\n## forecastssadecomposewindowlength  \\n  \\nHeight (row count) of the trajectory matrix, specified as the % of the sample count in the input series.\\nPossible values: `(0, 50]`.  \\n  \\n## forecastssaforecastbase  \\n  \\nInput series to which the recurrent formula is applied when calculating the forecast.\\nPossible values: `RECONSTRUCTED`, `ORIGINAL`.  \\n  \\n## forecastssaforecastmethod  \\n  \\nForecast calculation method.\\nPossible values: `RECURRENT`, `VECTOR`.  \\n  \\n## forecastssagroupautocount  \\n  \\nMaximum number of eigenvector groups. The eigenvectors are placed into groups by the clustering method in Auto mode, or using by enumerating eigenvector indexes in Manual mode. The groups are sorted by maximum eigenvalue in descending order and are named with letters `A`, `B`, `C` etc.\\nIf set to `0`, only one group is returned.  \\n  \\n## forecastssagroupautoclusteringmethod  \\n  \\nAlgorithm used to place eigenvectors into groups.\\nPossible values: `HIERARCHICAL`, `XMEANS`, or `NOVOSIBIRSK`.  \\n  \\n## forecastssagroupautoclusteringparams  \\n  \\nDictionary (map) of parameters required by given clustering method.  \\n  \\n## forecastssagroupautostack  \\n  \\nBuild groups recursively, starting with the group `A` with maximum eigenvalue, to view the cumulative result of incrementally added eigenvectors. In enabled, group `A` contains its own eigenvectors. Group `B` contains its own eigenvectors as well as eigenvectors from group `A`. Group `C` includes its own eigenvectors as well as eigenvectors from group `A` and `B`, and etc.  \\n  \\n## forecastssagroupautounion  \\n  \\nJoin eigenvectors from automatically created groups into custom groups. Multiple custom groups are separated using comma. Groups within the custom group are enumerated using semi-colon as a separator or hyphen for range. For example, custom group `A;B;D` contains eigenvectors from automatic groups `A`, `B` and `D`. Custom group `A;C-E` contains eigenvectors from automatic groups `A`,`C`,`D`,`E`.  \\n  \\n## forecastssagroupmanualgroups  \\n  \\nJoin eigenvectors using their index into custom groups. Multiple custom groups are separated using comma. Eigenvectors within the same group are enumerated using semi-colon as a separator or hyphen for range. For example, custom group `1;3-6` contains eigenvectors with indexes `1`, `3`, `4`, `5` and `6`.  \\n  \\n## forecastssareconstructaveragingfunction  \\n  \\nAveraging function to calculate anti-diagonal elements of the reconstructed matrix.\\nPossible values: `AVG`, `MEDIAN`.  \\n  \\n## forecastssareconstructfourier  \\n  \\nUse Fourier transform in the reconstruction stage and in SVD (singular value decomposition).  \\n  \\n## forecaststyle  \\n  \\nCSS styles applied to forecasts in `column` and `column-stack` modes.  \\n  \\n## format  \\n  \\nDisplay series with the appropriate unit of measurement.  \\nSee [Format Settings](https://axibase.com/docs/charts/syntax/format-settings.html) for complete syntax.  \\n  \\n## formataxis  \\n  \\nValue axis format.  \\n  \\n## formatcounter  \\n  \\nCounter format.  \\n  \\n## formatheaders  \\n  \\nDisable column name formatting.  \\n  \\n## parsenumbers  \\n  \\nIf `true`, column values are processed as numbers.\\n  \\n## formatsize  \\n  \\nFormat size setting values.  \\n  \\n## formattip  \\n  \\nLast value format.  \\n  \\n## frequency  \\n  \\n## gradientcount  \\n  \\nSpecify the number of gradient colors between each color in Color Range.  \\n  \\n## gradientintensity  \\n  \\nColor intensity of the first and the last sector in each range.  \\n  \\n## groupfirst  \\n  \\nControl the sequence of aggregation and grouping. If set to `true`, grouping is performed before aggregation.  \\n  \\n## groupinterpolate  \\n  \\nInterpolate grouped values.  \\n  \\n## groupinterpolateextend  \\n  \\nFill missing leading and trailing periods with `NEXT` and `PREVIOUS` values.  \\n  \\n## groupkeys  \\n  \\nCount messages by period with a comma-separated list of keys including `entity`, `type`, `source`, and custom tags.  \\nSupported in server aggregation mode only: `server-aggregate = true`.  \\n  \\n## grouplabel  \\n  \\n## groupperiod  \\n  \\nAssign a group period to a series for computing [group](https://axibase.com/docs/atsd/api/data/series/group.html#group-processor) statistics.  \\n  \\n## groupstatistic  \\n  \\nAssign a group statistic function to the series.  \\nSee [Aggregators](https://axibase.com/docs/charts/configuration/aggregators.html) for more information.  \\n  \\n## headerstyle  \\n  \\nCustomize widget header style.  \\nGroup diverse portals visually.  \\n`background-color`: Replace color, retain pattern.  \\n`background`: Replace both color and pattern.  \\n`display: none`: Hide header.  \\n`header-style = return 'background: white;';`: Remove all styles.  \\n  \\n## heightunits  \\n  \\nFunctionality depends on section:\\n\\n* `[configuration]` - number of rows in the portal. Default value: 4.\\n\\n* `[widget]` - number of rows the widget occupies. Default value: 1.  \\n  \\n## hidden  \\n  \\n## hidecolumn  \\n  \\nExpression based setting.  \\nHide particular columns if all cell values in a column satisfy the condition or if column name matches the pattern.  \\n  \\n## hideemptycolumns  \\n  \\nShow or hide columns with no data.  \\n  \\n## hideemptyseries  \\n  \\nHide series for which no data exists or data whose validity is expired.  \\n  \\n## hideifempty  \\n  \\n## horizontal  \\n  \\nDisplay bars horizontally.  \\n  \\n## horizontalgrid  \\n  \\nHide horizontal grid.  \\n  \\n## hourformat  \\n  \\n## icon  \\n  \\nName of the icon displayed in the cell.  \\n  \\n## iconalertexpression  \\n  \\nApply alert rules to the icon.  \\n  \\n## iconalertstyle  \\n  \\nAlert styles applied to the icon when the `alert-expression` is satisfied.  \\n  \\n## iconcolor  \\n  \\nColor of the icon.  \\n  \\n## iconposition  \\n  \\nPosition of the icon relative to the series value.  \\n  \\n## iconsize  \\n  \\nAutomatically resize icons to occupy all available space except the area used by the value and label.  \\nIf `icon-size` is not set, icon is scaled proportionally to the font height which can be controlled using the `min-font-size` and `max-font-size` settings.  \\n  \\n## id  \\n  \\nUnique name of the vertex.  \\n  \\n## interpolate  \\n  \\nInterpolate missing aggregation periods.  \\n  \\n## interpolateboundary  \\n  \\nDefine [interpolation behavior](https://axibase.com/docs/atsd/api/data/series/interpolate.html#boundary) for leading and trailing values.  \\n  \\n## interpolateextend  \\n  \\nInterpolate leading and trailing periods with `NEXT` or `PREVIOUS` values, respectively.  \\n  \\n## interpolatefill  \\n  \\nInterpolate values outside of the selection interval.  \\n  \\n## interpolatefunction  \\n  \\nDefine interpolation function for entire series, instead of only missing values.  \\n  \\n## interpolateperiod  \\n  \\nDefine the period for interpolated values.  \\n  \\n## intervalformat  \\n  \\n## join  \\n  \\nPerforms join by `entity` and `type`.  \\n`join = entity` performs join by `entity` only.  \\n  \\n## key  \\n  \\nKey name.  \\nIf set configuration of column can be sorted by name.  \\nIf the name of the key is the property received from the server object, the value of the cell by default is the value of the property.  \\n  \\n## keytagexpression  \\n  \\nExpression for matching properties with specified keys and tags.  \\nKeys are accessed with `keys.{key-name}` and tags with `tags.{tag-name}`.  \\n  \\n## label  \\n  \\nText on label.  \\n`element-id` by default.  \\n  \\n## labelformat  \\n  \\nLabel series using text and placeholders.  \\nSee [Label Formating](https://axibase.com/docs/charts/syntax/label-formatting.html#label-formatting).  \\n  \\n## last  \\n  \\nReturn only records with the update time equal to the maximum update time of matched records.  \\n  \\n## lastmarker  \\n  \\nHide most recent series value marker.  \\n  \\n## lastvaluelabel  \\n  \\n## layout  \\n  \\nForm of the widget in `non-hierarchy` mode.  \\n  \\n## leftaxis  \\n  \\nValues displayed on the left-axis.  \\n`density`: Scales the height of the bars such that the sum of their areas equals `1`.  \\n`fractions`: Scales the height of the bars such that the sum of their heights equals `1`.  \\n`frequency`: Scales the height of the bars such that each bar height is equal to the number of observations in the series. Thus, the sum of the heights is equal to the total number of observations  \\n  \\n## leftunits  \\n  \\nSet absolute offset from the left, in units.  \\n  \\n## legendlastvalue  \\n  \\n## legendposition  \\n  \\nModify legend locations for widgets which contain a legend.  \\nBy default, legend position is `hidden` in Time Chart.  \\nLegend position is set to `top` on Dialog Chart.  \\nCombine values to define corners: `legend-position = bottomright`  \\n  \\n## legendticks  \\n  \\n## legendvalue  \\n  \\n## limit  \\n  \\nMaximum number of returned records.  \\n  \\n## linearzoom  \\n  \\n## linkalertexpression  \\n  \\n## linkalertstyle  \\n  \\nStyle of edges in the event of an `alert-expression` being triggered and tied to the time series.  \\n  \\n## linkanimate  \\n  \\nAnimation of directed vertices.  \\n  \\n## linkcolorrange  \\n  \\nColor scheme for `link-threshold`.  \\n  \\n## linkcolors  \\n  \\nColor to indicate the threshold of time series.  \\nAttached to the edges and separated by commas.  \\n  \\n## linkdata  \\n  \\nSeries last value next to the `link-label`.  \\n  \\n## linklabels  \\n  \\nDisplay edge labels.  \\n  \\n## linklabelzoomthreshold  \\n  \\nParameter value is a value of scale when labels appear based on edge threshold.  \\n`value < 1`: Labels disappear on zoom out.  \\n`value > 1`: Labels appear on zoom in.  \\n  \\n## links  \\n  \\nList of edges associated with this series is defined by an ID or edge ID of the corresponding vertices with a hyphen.  \\nWhen edge ID contains a hyphen, it must be shielded with `\\\"\\\"` double quotes.  \\n  \\n## linkthresholds  \\n  \\nThreshold for time series attached to the edges.  \\nSupports both JavaScript and `percentile` functions.  \\n  \\n## linkvalue  \\n  \\n## linkwidthorder  \\n  \\nSort links according to their width.  \\n  \\n## linkwidths  \\n  \\nWidth to indicate the thresholds of the time series tied to the edges and separated by commas or spaces.  \\n  \\n## loadfuturedata  \\n  \\nLoad future series values.  \\nImport forecasts generated by third-party tools such as R language.  \\n  \\n## markerformat  \\n  \\n## markers  \\n  \\nHide series marker values.  \\n  \\n## maxfontsize  \\n  \\nMaximum caption font size.  \\nFont size cannot scale above set size.  \\n  \\n## maximum  \\n  \\n## maxrange  \\n  \\nDefine maximum range displayed on the left axis.  \\nActual range can differ based on loaded data samples.  \\n  \\n## maxrangeforce  \\n  \\nApply a forced range to the left axis, regardless of loaded data.  \\n  \\n## maxrangeright  \\n  \\nDefine maximum range displayed on the right axis.  \\nActual range can differ based on loaded data samples.  \\n  \\n## maxrangerightforce  \\n  \\nApply a forced range to the right axis, regardless of loaded data.  \\n  \\n## maxringwidth  \\n  \\nThe maximum allowed width of the vertex ring from the current minimal value of the ring width.  \\n  \\n## maxthreshold  \\n  \\n## menu  \\n  \\n## mergecolumns  \\n  \\nKey by which columns are grouped into rows.  \\n  \\n## mergefields  \\n  \\nCombine series into series grouped based on field. Applies only in `multiple-series` mode. Series which use [wildcard](https://axibase.com/docs/charts/syntax/wildcards.html), `entities`, `entityGroup` settings or comma-separated tag values are treated as multiple series by default.  \\nPossible values:  \\n`entity`: All series with the same entity are combined.  \\n`{tag-name}`: All series with the same value of tag `{tag-name}` are combined.  \\n  \\n## methodpath  \\n  \\nData API method path. Default value is specific for each data type: `/series/query`, `/properties/query`, `/messages/query`, `/alerts/query`.  \\n  \\n## metric  \\n  \\nDefine the Metric.  \\n  \\n## metriclabel  \\n  \\nOverride grouped series legend when `group=metric`.  \\n  \\n## mincaptionsize  \\n  \\n## minfontsize  \\n  \\nMinimum caption font size.  \\nFont size cannot scale below set size.  \\n  \\n## minimum  \\n  \\n## minorticks  \\n  \\nNumber of minor ticks between major ticks.  \\n  \\n## minrange  \\n  \\nDefine minimum range displayed on the left axis.  \\nActual range can differ based on loaded data samples.  \\n  \\n## minrangeforce  \\n  \\nDefine strict minimum value of the left or right axis. If the value of a series does not fall within the set boundaries set by these value gaps, the series is not displayed.  \\n  \\n## minrangeright  \\n  \\nDefine minimum range displayed on the right axis.  \\nActual range can differ based on loaded data samples.  \\n  \\n## minrangerightforce  \\n  \\nApply a forced range to the right axis, regardless of loaded data.  \\n  \\n## minringwidth  \\n  \\nThe minimum allowed width of the vertex ring.  \\nThe value is from `0` to a maximum permissible value of the ring width.  \\n  \\n## minseverity  \\n  \\n## minthreshold  \\n  \\n## mode  \\n  \\nApply mode setting to both or either `[widget]` and `[series]` settings.  \\n  \\n## movingaverage  \\n  \\nEnable moving average to set aggregation period based on a sliding window ending with the current time.  \\nDisable moving average to set aggregation period based on calendar.  \\n  \\n## multiplecolumn  \\n  \\nApplies to [wildcard](https://axibase.com/docs/charts/syntax/wildcards.html#wildcards) series.  \\nDefault value: `false`.  \\nIf `true`, series with the same entity and tags are grouped in the same column.  \\nThis applies to derived series which are placed in the same column alongside the underlying series.  \\n  \\n## multipleseries  \\n  \\n## negativestyle  \\n  \\nApply CSS styles to negative values of a series in `column` or `column-stack` mode.  \\n  \\n## nodealertexpression  \\n  \\n## nodealertstyle  \\n  \\nStyle of vertices, in the event of an `alert-expression` being triggered tied to the time series.  \\n  \\n## nodecollapse  \\n  \\nCollapse vertex sectors when clicked.  \\n  \\n## nodecolors  \\n  \\nColor to indicate the threshold of time series that are bound to vertices and separated by commas.  \\n  \\n## nodeconnect  \\n  \\nConnect vertices on the perimeter.  \\n  \\n## nodedata  \\n  \\n## nodelabels  \\n  \\nDisplay vertex labels.  \\n  \\n## nodelabelzoomthreshold  \\n  \\nParameter value is a value of scale when labels appear based on vertex threshold  \\n`value < 1`: Labels disappear on zoom out.  \\n`value > 1`: Labels appear on zoom in.  \\n  \\n## noderadius  \\n  \\nRadius of the vertex in pixels.  \\nNot valid in `hierarchy` mode.  \\n  \\n## noderadiuses  \\n  \\nRadii of the lighting for the display of the time series `thresholds` linked to the vertices and separated by commas or spaces.  \\n  \\n## nodes  \\n  \\nList of vertices associated with this series.  \\nWhen the vertex id contains a hyphen, it must be shielded with `\\\"\\\"` double quotes.  \\n  \\n## nodethresholds  \\n  \\nThreshold for time series tied to vertices.  \\nSupports JavaScript, `percentile` functions, or can be set as an array.  \\n  \\n## nodevalue  \\n  \\n## offset  \\n  \\nDifference, in milliseconds, between maximum update time of matched records and update time of the current record.  \\nIf the difference exceeds `offset`, the record is excluded from results.  \\n  \\n## offsetbottom  \\n  \\n## offsetleft  \\n  \\n## offsetright  \\n  \\n## offsettop  \\n  \\n## onchange  \\n  \\nIf specified, field is evaluated instead of default `onchange` behavior. Either `onchange`, or `change-field` is required for any drop-down list.  \\n  \\n## onclick  \\n  \\nSet interaction behavior for user click.  \\nFilter the tables based on the clicked values of a specific column.  \\n  \\n## onseriesclick  \\n  \\nSpecifies an action to be performed when the user selects a series. For a Calendar widget, it is a row of summarization periods.  \\n  \\n## onseriesdoubleclick  \\n  \\nDisable [double click functionality](https://axibase.com/docs/charts/widgets/pie-chart/#on-series-double-click) in the widget.  \\n  \\n## options  \\n  \\nComma-separated list of option values.  \\n  \\n## padding  \\n  \\nOffset from the edge of the container in pixels.  \\n  \\n## paletteticks  \\n  \\nDisplay legend labels.  \\n  \\n## parent  \\n  \\nID of parent vertex.  \\n  \\n## path  \\n  \\n## percentilemarkers  \\n  \\nPercentiles marker position.  \\n  \\n## percentiles  \\n  \\nPercentiles displayed when `top-axis = percentiles`.  \\nMultiple percentiles must be separated with commas.  \\n  \\n## period  \\n  \\nDefine period for [aggregator](https://axibase.com/docs/atsd/api/data/series/aggregate.html#aggregate-processor) functions which require one.  \\n  \\n## periods  \\n  \\n## pinradius  \\n  \\nRadius of the inner circle holding the arrow, measured as `%` of radius.  \\n  \\n## pointerposition  \\n  \\nDefine the location of the final value pointer.  \\n  \\n## position  \\n  \\nPosition of the column relative to other columns in the table.  \\n  \\n## primarykey  \\n  \\n## principal  \\n  \\n## rangemerge  \\n  \\nIf threshold is not defined, different set of ranges is computed for each series based on observed min and max values within the loaded timespan.  \\n`range-merge` computes a single set of ranges for all series in the widget by using `min` and `max` for all loaded series.  \\n  \\n## rangeoffset  \\n  \\nAdds an offset to the left and right of the dataset, set in pixels.  \\nInactive by default.  \\n  \\n## rangeselectend  \\n  \\n## rangeselectstart  \\n  \\n## rate  \\n  \\nCompute the difference between consecutive sample per unit of time, or [rate period](https://axibase.com/docs/atsd/api/data/series/rate.html#rate-period).  \\nCompute the underlying rate of change when a metric measures a continuously incrementing counter.  \\n  \\n## ratecounter  \\n  \\nCompute the difference between consecutive samples per unit of time.  \\n  \\n## ratio  \\n  \\n## refreshinterval  \\n  \\nDefine the period in seconds that ATSD waits before refreshing data with new samples.  \\n  \\n## replaceunderscore  \\n  \\nReplace underscores with whitespace in column names.  \\n  \\n## replacevalue  \\n  \\nModify or filter series values.  \\nThe example expression filters all values less than `50` from the series.  \\nAggregators are not supported.  \\n  \\n## responsive  \\n  \\nAdjust font size based on widget dimensions.  \\nFont size is reduced proportionally to widget size.  \\n  \\n## retaintimespan  \\n  \\n## retryrefreshinterval  \\n  \\nDefine the wait period after ATSD receives an empty sample to retry data refresh.  \\n  \\n## rightaxis  \\n  \\nValues displayed on the right-axis.  \\n  \\n## ringwidth  \\n  \\nWidth of the colored ring area, measured as `%` of radius.  \\n  \\n## rotatelegendticks  \\n  \\n## rotatepaletteticks  \\n  \\nRotate legend labels.  \\n  \\n## rotateticks  \\n  \\nRotate `x` axis labels.  \\nSet in degrees.  \\n`true` rotates by `90` degrees.  \\n  \\n## rowalertstyle  \\n  \\nStyles assigned to the whole row.  \\nCan be specified as JavaScript code.  \\n  \\n## rowstyle  \\n  \\nStyle assigned to the entire row specified as JavaScript code.  \\nIn the syntax example all alerts with severity less than `7` are hidden.  \\nFilter data prior display in the widget.  \\n  \\n## rule  \\n  \\nName of rule for which alerts are filtered.  \\n  \\n## scale  \\n  \\nScales the width and height of the target page.  \\nValue is the factor by which the page scales.  \\n  \\n## scalex  \\n  \\nScale a widget or axis.  \\nNot supported in all browsers.  \\n  \\n## scaley  \\n  \\n## script  \\n  \\n## selectormode  \\n  \\nControls how pie segments react to click interaction. Possible Settings: highlight, expand. Highlight – double click highlights the selected pie segment, other segments are greyed out. Expand – double click expands the selected pie segment.  \\n\\n## series\\n  \\n## serieslabels  \\n  \\nDisplay values for each pie slice (series) as a tick.  \\nSet to an expression that changes the label type depending on series value.  \\n  \\n## serieslimit  \\n  \\nDefine the maximum number of series retrieved from the database, to prevent the client or server from processing excessive series.  \\n  \\n## seriestype  \\n  \\nUse this setting in `stack` mode as a grouping parameter.  \\nSeries of like types are grouped together or summed.  \\nSet a unique series type to achieve fill effect without applying `stack` mode.  \\n  \\n## seriesvalue  \\n  \\n## serveraggregate  \\n  \\n## severity  \\n  \\nSeverity rating of alerts displayed in the console:  \\nUndefined: `0`  \\nUnknown: `1`  \\nNormal: `2`  \\nWarning: `3`  \\nMinor: `4`  \\nCritical: `6`  \\nFatal: `7`.  \\n  \\n## severitystyle  \\n  \\nControl alert behavior. Highlight a single column or entire row.  \\n  \\n## showtagnames  \\n  \\nDisplay all entity tags.  \\nOnly valid for tables with `tag` column.  \\n  \\n## size  \\n  \\nThe relative size of the series rectangle.  \\n`1` by default.  \\nSet to a series value by referring to `alias`.  \\nSet to the current value of the series using `value`.  \\n  \\n## sizename  \\n  \\nTitle for for `display-total`.  \\nDisplayed after `Total`.  \\nFor example: `Total sum`.  \\n  \\n## smooth  \\n  \\nWeighted [averaging](https://axibase.com/docs/atsd/api/data/series/smooth.html) function applied to window samples.  \\n  \\n## smoothcount  \\n  \\nNumber of samples in the window.  \\n  \\n## smoothfactor  \\n  \\nWeighting parameter used by `EMA` function. If specified, must be `>0 and <1`.  \\n  \\n## smoothincompletevalue  \\n  \\nSample value returned if the window is not full.  \\n  \\n## smoothinterval  \\n  \\nWindow duration interval.  \\n  \\n## smoothminimumcount  \\n  \\nMinimum number of samples in the window.  \\n  \\n## smoothrange  \\n  \\nWeighting parameter used by `EMA` function.  \\n  \\n## sort  \\n  \\nSort console based on one or more columns.  \\nAdditional ascending `ASC` or descending `DESC` parameter is accepted.  \\n  \\n## source  \\n  \\nSpecify the source of records.  \\n  \\n## stack  \\n  \\nDisable series grouping to display each series in a separate column.  \\n  \\n## starttime  \\n  \\nSpecifies the date and time in local or [ISO format](https://axibase.com/docs/atsd/shared/date-format.html) from which the values for the series are loaded.  \\nThe setting can be overridden by each widget separately.  \\nNote that `start-time` is **inclusive** and `end-time` is **exclusive**.  \\nThis means that `start-time = 2017-09-14 10:00:00` includes data points that occurred exactly at `10:00:00` and later whereas `end-time = 2017-09-14 11:00:00` includes data points that occurred up to `10:59:59`, excluding points that occurred at `11:00:00`.  \\nThe setting supports [calendar](https://axibase.com/docs/atsd/shared/calendar.html) keywords.  \\n  \\n## startworkingminutes  \\n  \\n## statistic  \\n  \\nApply aggregation statistical functions.  \\nSee [Aggregators](https://axibase.com/docs/charts/configuration/aggregators.html) for more information.  \\n  \\n## statistics  \\n  \\n## stepline  \\n  \\nConnect neighboring samples using a step line instead of one which is linearly interpolated.  \\nToggle step line mode by changing `y` axis controls displayed on mouseover.  \\n  \\n## style  \\n  \\nRender forecast as a solid line instead of dashed line.  \\n  \\n## summarizeperiod  \\n  \\nPeriod by which loaded time series data is split.  \\n  \\n## summarizestatistic  \\n  \\nStatistical function applied to values within each period.  \\n  \\n## table  \\n  \\nUse as an alternative to `metric` setting.  \\nIf both `table` and `attribute` are defined, `metric = table,attribute`.  \\n  \\n## tableheaderstyle  \\n  \\nCustom CSS style applied to table header, including a style to hide the header.  \\n  \\n## tagexpression  \\n  \\nApply server-side filtering based on [series tags](https://axibase.com/docs/atsd/api/meta/metric/series-tags.html).  \\n  \\n## tagoffset  \\n  \\nDifference, in milliseconds, between update time of the current record and update time of the tag field.  \\nIf the difference exceeds `tag-offset`, the tag field is excluded from tags object.  \\n  \\n## tagsdropdowns  \\n  \\n## tagsdropdownsstyle  \\n  \\n## tension  \\n  \\nThe degree curvature of edges.  \\nCorresponds to the parameter `C` in the formula for the cardinal spline.  \\nVaries from `0` to `1`, `0` corresponds to straight edges.  \\n  \\n## thresholds  \\n  \\nDefines the threshold values.  \\nBy default the mean value all metrics for the whole time-span is chosen as the threshold.  \\nSet to the rate of change (`delta`) of series contained in the widget by referring to `alias`.  \\n  \\n## ticks  \\n  \\nNumber of major ticks on gauge axis.  \\n  \\n## ticksright  \\n  \\nControl the number of tick marks on the right axis.  \\n  \\n## tickstime  \\n  \\nControl the number of tick marks on the time (`x`) axis.  \\n  \\n## timeoffset  \\n  \\nOffset time series day into either the past or future based on sign.  \\nCompare day from today to the same data from some ago.  \\n`time-offset > 0`: Offset into the past.  \\n`time-offset < 0`: Offset into the future.  \\nUse on either `[widget]` or `[series]` level settings.  \\n  \\n## timespan  \\n  \\nDefine data load interval.  \\n  \\n## timezone  \\n  \\nSet the time zone for the data being loaded into the portal. Only the `UTC` option is supported.  \\nIf `UTC` is not set, the portal displays dates in the local time zone.  \\nIf `UTC` is set, `start-time` and `end-time` settings specified in local format are evaluated based on the UTC time zone.  \\n  \\n## title  \\n  \\n## tooltip  \\n  \\nTooltip for the `[other]` section displayed upon mouseover.  \\n  \\n## topaxis  \\n  \\nValues displayed on the top axis.  \\n  \\n## topunits  \\n  \\nSet absolute offset from the top, in units.  \\n  \\n## totalsize  \\n  \\nMaximum size of all rectangles combined  \\n  \\n## totalvalue  \\n  \\nDefine the total value explicitly, otherwise it is computed as the sum of all series values.  \\n`total-value` can be calculated by referencing other series similar to computed series.  \\n  \\n## transformationorder  \\n  \\n[`transformation-order`](https://axibase.com/docs/atsd/api/data/series/query.html#transformations) controls the sequence of data modification procedures.\\nDefault sequence: `interpolate`, `group`, `rate`, `aggregate`, `smooth`, `downsample`, `forecast`, `none`.\\nIf set to `none`, the default sequence is used.\\nIf specified, the `server-aggregate` setting is set to `true` by default.  \\n  \\n## transpose  \\n  \\nTranspose rows and columns for a layout optimized for columnar presentation.  \\n  \\n## type  \\n  \\nDefine widget type.  \\n  \\n## unscale  \\n  \\n`CSS Selector` to determine unscaled elements in a user-loaded `svg` file.  \\n  \\n## updateinterval  \\n  \\nPolling interval at which new incremental data is requested from the server by widgets on the portal.  \\nFor example `update-interval = 5 minute`.  \\nThe default value is 1 minute.  \\nThe setting can be overridden by each widget separately.  \\nChart updates are disabled if the `endtime` parameter for the portal or the widget is set to a fixed date, for example: `endtime = 2016-06-27T00:00:00Z`.  \\n  \\n## url  \\n  \\nURL of the ATSD server. The setting is necessary if the data is loaded from an ATSD server running on a different host.  \\n  \\n## urlparameters  \\n  \\nOptional request parameters included in data API requests.  \\nParameter names and values must be URL-encoded if necessary and separated by ampersand. `?` at the start of the query string is optional.  \\n  \\n## value  \\n  \\nDefine series value.  \\nRetrieve the value of the underlying series identified by alias.  \\n  \\n## verticalgrid  \\n  \\nDisplay a vertical line corresponding to each percentile on the top axis.  \\n  \\n## widgetsperrow  \\n  \\nUse the `widgets-per-row` setting under `[group]` level to control the number of widgets displayed on each row.  \\n  \\n## width  \\n  \\nMaximum and minimum allowed width of the vertex ring is the percent from the radius of the circle.  \\nBy default, minimum `30%`, maximum `50%`.  \\n  \\n## widthunits  \\n  \\nFunctionality depends on section:\\n\\n* `[configuration]` - number of columns in the portal. Default value: 6.\\n\\n* `[widget]` - number of columns the widget occupies. Default value: 1.  \\n  \\n## zoomsvg  \\n  \\nZoom the user-loaded `svg` file.  \\n\");\n\n//# sourceURL=webpack:///./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/descriptions.md?");

/***/ }),

/***/ "./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/dictionary.json":
/*!*************************************************************************************************!*\
  !*** ./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/dictionary.json ***!
  \*************************************************************************************************/
/*! exports provided: $schema, settings, default */
/***/ (function(module) {

eval("module.exports = {\"$schema\":\"./dictionary.schema.json\",\"settings\":[{\"displayName\":\"add-meta\",\"type\":\"boolean\",\"section\":\"series\",\"example\":true,\"defaultValue\":false},{\"displayName\":\"ahead-time-span\",\"type\":\"string\",\"section\":\"widget\",\"widget\":\"chart\",\"example\":\"80%\"},{\"displayName\":\"alert-expression\",\"type\":\"string\",\"section\":[\"column\",\"widget\"],\"example\":\"value > 5\",\"script\":{\"returnValue\":\"boolean\",\"fields\":[{\"name\":\"metric\",\"type\":\"string\"},{\"name\":\"entity\",\"type\":\"string\"},{\"name\":\"tags\",\"type\":\"object\"},{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"previous\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"movavg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"count\",\"type\":\"number\",\"required\":true},{\"name\":\"minCount\",\"type\":\"number\"}]},{\"name\":\"detail\",\"type\":\"function\"},{\"name\":\"forecast\",\"type\":\"function\"},{\"name\":\"forecast_deviation\",\"type\":\"function\"},{\"name\":\"lower_confidence\",\"type\":\"function\"},{\"name\":\"upper_confidence\",\"type\":\"function\"},{\"name\":\"percentile\",\"type\":\"function\",\"args\":[{\"name\":\"percentage\",\"type\":\"number\",\"required\":true}]},{\"name\":\"max\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"maximum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"min\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"minimum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"avg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"average\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"sum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"delta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"counter\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"last\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"first\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"min_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"max_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"count\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"threshold_count\",\"type\":\"function\"},{\"name\":\"threshold_percent\",\"type\":\"function\"},{\"name\":\"threshold_duration\",\"type\":\"function\"},{\"name\":\"time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"bottom\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"top\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"meta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"entityTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"metricTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"median\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"series\",\"type\":\"array\"}]}},{\"displayName\":\"alert-row-style\",\"multiLine\":true,\"type\":\"string\",\"example\":\"background-color: red\"},{\"displayName\":\"alert-style\",\"multiLine\":true,\"type\":\"string\",\"section\":\"series\",\"example\":\"stroke: red; stroke-width: 2\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"alert\",\"type\":\"number\"}]}},{\"displayName\":\"alias\",\"type\":\"string\",\"section\":\"series\",\"example\":\"s1\"},{\"displayName\":\"align\",\"type\":\"enum\",\"section\":\"widget\",\"example\":\"END_TIME\",\"defaultValue\":\"CALENDAR\",\"enum\":[\"END_TIME\",\"START_TIME\",\"CALENDAR\",\"FIRST_VALUE_TIME\"]},{\"displayName\":\"arcs\",\"type\":\"boolean\",\"section\":\"widget\",\"widget\":\"graph\",\"defaultValue\":true,\"example\":false},{\"displayName\":\"arrow-length\",\"type\":\"number\",\"section\":\"widget\",\"widget\":\"gauge\",\"example\":\"0.3, 30%\",\"maxValue\":1,\"minValue\":0},{\"displayName\":\"arrows\",\"type\":\"boolean\",\"section\":\"widget\",\"widget\":\"graph\",\"defaultValue\":false,\"example\":true},{\"displayName\":\"attribute\",\"section\":\"series\",\"type\":\"string\",\"example\":\"my_attribute\",\"excludes\":[\"metric\"]},{\"displayName\":\"audio-alert\",\"type\":\"string\",\"section\":\"series\",\"example\":\"(alert > 0.5) ? '/portal/resource/alarm.ogg' : '/portal/resource/klaxon.ogg'\",\"script\":{\"fields\":[{\"name\":\"alert\",\"type\":\"number\"}],\"returnValue\":\"string\"}},{\"displayName\":\"audio-onload\",\"type\":\"boolean\",\"section\":\"widget\",\"defaultValue\":false,\"example\":true},{\"displayName\":\"author\",\"type\":\"string\",\"example\":\"my_name\"},{\"displayName\":\"auto-height\",\"type\":\"boolean\",\"section\":\"widget\",\"defaultValue\":false,\"example\":true},{\"displayName\":\"auto-padding\",\"type\":\"boolean\",\"section\":\"widget\",\"widget\":\"graph\",\"defaultValue\":true,\"example\":false},{\"displayName\":\"auto-period\",\"type\":\"boolean\",\"section\":\"widget\",\"widget\":\"chart\",\"defaultValue\":true,\"example\":false},{\"displayName\":\"auto-scale\",\"type\":\"boolean\",\"section\":\"widget\",\"widget\":\"chart\",\"defaultValue\":false,\"example\":true},{\"displayName\":\"axis\",\"type\":\"enum\",\"defaultValue\":\"left\",\"section\":\"series\",\"example\":\"right\",\"enum\":[\"right\",\"left\"]},{\"displayName\":\"axis-title\",\"type\":\"string\",\"section\":\"widget\",\"example\":\"CPU Utilization in %\"},{\"displayName\":\"axis-title-left\",\"type\":\"string\",\"section\":\"widget\",\"example\":\"CPU Utilization in %\"},{\"displayName\":\"axis-title-right\",\"type\":\"string\",\"section\":\"widget\",\"example\":\"CPU Utilization in %\"},{\"displayName\":\"bar-count\",\"type\":\"integer\",\"section\":\"widget\",\"widget\":\"histogram\",\"example\":20},{\"displayName\":\"batch-size\",\"type\":\"integer\",\"section\":\"widget\",\"example\":1,\"defaultValue\":8},{\"displayName\":\"batch-update\",\"type\":\"boolean\",\"example\":true,\"section\":\"widget\",\"defaultValue\":false},{\"displayName\":\"border-width\",\"type\":\"number\",\"example\":0.3,\"section\":\"widget\",\"widget\":\"gauge\"},{\"displayName\":\"bottom-axis\",\"type\":\"enum\",\"defaultValue\":\"values\",\"section\":\"widget\",\"widget\":\"histogram\",\"example\":\"none\",\"enum\":[\"none\",\"percentiles\",\"values\"]},{\"displayName\":\"bundle\",\"section\":\"widget\",\"widget\":\"graph\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true},{\"displayName\":\"bundled\",\"section\":\"widget\",\"widget\":\"graph\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true},{\"displayName\":\"buttons\",\"type\":\"enum\",\"section\":\"widget\",\"example\":\"menu\",\"enum\":[\"menu\",\"update\"]},{\"displayName\":\"cache\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"section\":\"widget\"},{\"displayName\":\"capitalize\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"section\":\"widget\"},{\"displayName\":\"caption\",\"type\":\"string\",\"example\":\"KPI\",\"section\":\"widget\"},{\"displayName\":\"caption-style\",\"multiLine\":true,\"type\":\"string\",\"example\":\"color: silver\",\"section\":\"widget\"},{\"displayName\":\"case\",\"type\":\"enum\",\"enum\":[\"upper\",\"lower\"],\"example\":\"upper\",\"section\":\"widget\",\"widget\":\"property\"},{\"displayName\":\"centralize-columns\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"section\":\"widget\"},{\"displayName\":\"centralize-ticks\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"section\":\"widget\"},{\"displayName\":\"change-field\",\"type\":\"string\",\"example\":\"series.entity\",\"section\":\"dropdown\"},{\"displayName\":\"circle\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"section\":\"widget\",\"widget\":\"text\"},{\"displayName\":\"class\",\"type\":\"enum\",\"example\":\"terminal\",\"enum\":[\"terminal\",\"metro\"],\"section\":\"widget\",\"override\":{\"[widget == 'console' || widget == 'property']\":{\"enum\":[\"terminal\"]},\"[widget == 'box']\":{\"enum\":[\"metro\"]}}},{\"displayName\":\"collapsible\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"section\":\"widget\"},{\"displayName\":\"color\",\"type\":\"string\",\"example\":\"orange\",\"section\":\"series\",\"excludes\":[\"colors\",\"color-range\"]},{\"displayName\":\"color-range\",\"type\":\"string\",\"example\":\"black, blue\",\"excludes\":[\"colors\",\"color\"],\"possibleValues\":[{\"value\":\"blue\"},{\"value\":\"red\"},{\"value\":\"black\"},{\"value\":\"green\"},{\"value\":\"yellow\"},{\"value\":\"silver\"}]},{\"displayName\":\"colors\",\"type\":\"string\",\"example\":\"green\",\"section\":\"widget\",\"excludes\":[\"color-range\",\"color\"]},{\"displayName\":\"column-alert-expression\",\"type\":\"string\",\"example\":\"value > 10\",\"section\":\"column\"},{\"displayName\":\"column-alert-style\",\"type\":\"string\",\"example\":\"fill: red; stroke: red\",\"section\":\"column\"},{\"displayName\":\"column-entity\",\"type\":\"string\",\"example\":\"Entity\",\"section\":\"widget\"},{\"displayName\":\"column-metric\",\"type\":\"string\",\"example\":\"Temperature\",\"section\":\"widget\"},{\"displayName\":\"column-time\",\"type\":\"string\",\"example\":\"Time in seconds\",\"section\":\"widget\"},{\"displayName\":\"column-value\",\"type\":\"string\",\"example\":\"CPU Usage\",\"section\":\"widget\"},{\"displayName\":\"column-label-format\",\"type\":\"string\",\"example\":\"tags.mount_point\",\"section\":\"column\",\"defaultValue\":\"entity: metric: tagName=tagValue: statistics - period\",\"possibleValues\":[{\"value\":\"entity\"},{\"value\":\"metric\"},{\"value\":\"tagName\"},{\"value\":\"tagValue\"},{\"value\":\"tags.{tag-name}\"},{\"value\":\"statistics\"},{\"value\":\"period\"}]},{\"displayName\":\"context-height\",\"type\":\"integer\",\"example\":50,\"defaultValue\":0},{\"displayName\":\"context-path\",\"type\":\"string\",\"example\":\"/hbs\",\"defaultValue\":\"/api/v1\",\"section\":\"configuration\"},{\"displayName\":\"counter\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"section\":\"series\"},{\"displayName\":\"counter-position\",\"type\":\"enum\",\"example\":\"none\",\"section\":\"widget\",\"widget\":\"gauge\",\"enum\":[\"none\",\"top\",\"bottom\"]},{\"displayName\":\"current-period-style\",\"multiLine\":true,\"type\":\"string\",\"example\":\"fill-opacity: 0; stroke-width: 2; stroke-dasharray: 5, 2, 1, 2\",\"section\":\"widget\",\"widget\":\"chart\"},{\"displayName\":\"data\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"section\":\"widget\",\"widget\":\"graph\"},{\"displayName\":\"data-labels\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"section\":\"widget\",\"widget\":\"calendar\"},{\"displayName\":\"data-type\",\"type\":\"enum\",\"example\":\"forecast\",\"enum\":[\"history\",\"forecast\",\"forecast_deviation\",\"lower_confidence\",\"upper_confidence\"],\"section\":\"series\"},{\"displayName\":\"day-format\",\"type\":\"string\",\"example\":\"%y/%m/%d\",\"possibleValues\":[{\"value\":\"%a\",\"detail\":\"Three-letter abbreviated day name, for example: Sun, Mon, Tue, Wed, Thu, Fri, Sat.\"},{\"value\":\"%aa\",\"detail\":\"Two-letter abbreviated day name, for example: Su, Mo, Tu, We, Th, Fr, Sa.\"},{\"value\":\"%A\",\"detail\":\"Full day name.\"},{\"value\":\"%b\",\"detail\":\"Abbreviated month name.\"},{\"value\":\"%B\",\"detail\":\"Full month name.\"},{\"value\":\"%d\",\"detail\":\"Zero-padded day of the month as a decimal number [01,31].\"},{\"value\":\"%e\",\"detail\":\"Space-padded day of the month as a decimal number [ 1,31]. Equivalent to %_d.\"},{\"value\":\"%j\",\"detail\":\"Day of the year as a decimal number [001,366].\"},{\"value\":\"%m\",\"detail\":\"Month as a decimal number [01,12].\"},{\"value\":\"%U\",\"detail\":\"Week number of the year as a decimal number [00,53]. Sunday is the first day of the week.\"},{\"value\":\"%w\",\"detail\":\"Weekday as a decimal number [0(Sunday),6].\"},{\"value\":\"%W\",\"detail\":\"Week number of the year as a decimal number [00,53]. Monday is the first day of the week.\"},{\"value\":\"%x\",\"detail\":\"Date, as %m/%d/%Y.\"},{\"value\":\"%y\",\"detail\":\"Year without century as a decimal number [00,99].\"},{\"value\":\"%Y\",\"detail\":\"Year with century as a decimal number.\"}],\"section\":\"widget\"},{\"displayName\":\"default-color\",\"type\":\"string\",\"example\":\"magenta\",\"section\":\"series\"},{\"displayName\":\"default-size\",\"type\":\"number\",\"example\":2,\"defaultValue\":1,\"section\":\"widget\",\"widget\":\"treemap\"},{\"displayName\":\"depth\",\"type\":\"integer\",\"example\":3,\"section\":\"widget\",\"widget\":\"graph\"},{\"displayName\":\"description\",\"type\":\"string\",\"example\":\"My configuration\"},{\"displayName\":\"dialog-maximize\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"section\":\"widget\"},{\"displayName\":\"disable-alert\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"section\":\"widget\",\"widget\":\"page\"},{\"displayName\":\"disconnect-count\",\"type\":\"integer\",\"example\":50,\"section\":\"widget\",\"widget\":\"chart\"},{\"displayName\":\"disconnected-node-display\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"section\":\"widget\",\"widget\":\"graph\"},{\"displayName\":\"disconnect-interval\",\"type\":\"interval\",\"example\":\"1 minute\",\"section\":\"widget\",\"widget\":\"chart\"},{\"displayName\":\"disconnect-value\",\"type\":\"integer\",\"example\":0,\"section\":\"widget\",\"widget\":\"chart\"},{\"displayName\":\"display\",\"type\":\"string\",\"example\":\"value > top(3)\",\"section\":\"series\",\"script\":{\"returnValue\":\"boolean\",\"fields\":[{\"name\":\"metric\",\"type\":\"string\"},{\"name\":\"entity\",\"type\":\"string\"},{\"name\":\"tags\",\"type\":\"object\"},{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"previous\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"movavg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"count\",\"type\":\"number\",\"required\":true},{\"name\":\"minCount\",\"type\":\"number\"}]},{\"name\":\"detail\",\"type\":\"function\"},{\"name\":\"forecast\",\"type\":\"function\"},{\"name\":\"forecast_deviation\",\"type\":\"function\"},{\"name\":\"lower_confidence\",\"type\":\"function\"},{\"name\":\"upper_confidence\",\"type\":\"function\"},{\"name\":\"percentile\",\"type\":\"function\",\"args\":[{\"name\":\"percentage\",\"type\":\"number\",\"required\":true}]},{\"name\":\"max\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"maximum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"min\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"minimum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"avg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"average\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"sum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"delta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"counter\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"last\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"first\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"min_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"max_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"count\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"threshold_count\",\"type\":\"function\"},{\"name\":\"threshold_percent\",\"type\":\"function\"},{\"name\":\"threshold_duration\",\"type\":\"function\"},{\"name\":\"time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"bottom\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"top\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"meta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"entityTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"metricTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"median\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"series\",\"type\":\"array\"}]}},{\"displayName\":\"display-date\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"section\":\"widget\",\"widget\":\"chart\"},{\"displayName\":\"display-in-legend\",\"type\":\"boolean\",\"example\":false,\"section\":\"series\"},{\"displayName\":\"display-labels\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"section\":\"widget\",\"widget\":\"treemap\"},{\"displayName\":\"display-other\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"section\":\"widget\",\"widget\":\"pie\"},{\"displayName\":\"display-panels\",\"type\":\"enum\",\"example\":\"true\",\"defaultValue\":\"hover\",\"section\":\"widget\",\"enum\":[\"true\",\"false\",\"hover\"]},{\"displayName\":\"display-tags\",\"type\":\"string\",\"example\":\"mount_point\",\"defaultValue\":false,\"section\":\"widget\"},{\"displayName\":\"display-ticks\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"widget\":\"gauge\",\"section\":\"widget\"},{\"displayName\":\"display-tip\",\"type\":\"boolean\",\"example\":true,\"widget\":\"gauge\",\"section\":\"widget\"},{\"displayName\":\"display-total\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"widget\":\"treemap\",\"section\":\"widget\"},{\"displayName\":\"display-values\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"section\":\"widget\",\"widget\":\"bar\"},{\"displayName\":\"downsample\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"section\":\"widget\"},{\"displayName\":\"downsample-algorithm\",\"type\":\"enum\",\"example\":\"DETAIL\",\"section\":\"widget\",\"enum\":[\"DETAIL\",\"INTERPOLATE\"]},{\"displayName\":\"downsample-difference\",\"type\":\"number\",\"example\":4,\"minValue\":0,\"section\":\"widget\",\"excludes\":[\"downsample-ratio\"]},{\"displayName\":\"downsample-ratio\",\"type\":\"number\",\"example\":2,\"minValue\":1,\"section\":\"widget\",\"excludes\":[\"downsample-difference\"]},{\"displayName\":\"downsample-gap\",\"type\":\"interval\",\"example\":\"10 minute\",\"section\":\"widget\"},{\"displayName\":\"downsample-order\",\"type\":\"integer\",\"example\":5,\"minValue\":0,\"section\":\"widget\"},{\"displayName\":\"duration\",\"type\":\"integer\",\"example\":2000,\"defaultValue\":1000,\"widget\":\"graph\",\"section\":\"widget\"},{\"displayName\":\"effects\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"widget\":\"graph\",\"section\":\"widget\"},{\"displayName\":\"empty-refresh-interval\",\"type\":\"interval\",\"example\":\"5 minute\",\"section\":\"series\"},{\"displayName\":\"empty-threshold\",\"type\":\"interval\",\"example\":\"5 minute\",\"section\":\"series\"},{\"displayName\":\"enabled\",\"type\":\"string\",\"example\":false,\"section\":\"series\",\"script\":{\"returnValue\":\"boolean\",\"fields\":[{\"name\":\"metric\",\"type\":\"string\"},{\"name\":\"entity\",\"type\":\"string\"},{\"name\":\"tags\",\"type\":\"object\"},{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"previous\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"movavg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"count\",\"type\":\"number\",\"required\":true},{\"name\":\"minCount\",\"type\":\"number\"}]},{\"name\":\"detail\",\"type\":\"function\"},{\"name\":\"forecast\",\"type\":\"function\"},{\"name\":\"forecast_deviation\",\"type\":\"function\"},{\"name\":\"lower_confidence\",\"type\":\"function\"},{\"name\":\"upper_confidence\",\"type\":\"function\"},{\"name\":\"percentile\",\"type\":\"function\",\"args\":[{\"name\":\"percentage\",\"type\":\"number\",\"required\":true}]},{\"name\":\"max\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"maximum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"min\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"minimum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"avg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"average\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"sum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"delta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"counter\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"last\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"first\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"min_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"max_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"count\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"threshold_count\",\"type\":\"function\"},{\"name\":\"threshold_percent\",\"type\":\"function\"},{\"name\":\"threshold_duration\",\"type\":\"function\"},{\"name\":\"time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"bottom\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"top\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"meta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"entityTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"metricTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"median\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"series\",\"type\":\"array\"}]}},{\"displayName\":\"end-time\",\"type\":\"date\",\"example\":\"previous_working_day\",\"section\":\"widget\"},{\"displayName\":\"end-working-minutes\",\"type\":\"integer\",\"example\":60,\"defaultValue\":1440,\"section\":\"series\",\"minValue\":0},{\"displayName\":\"entities\",\"type\":\"string\",\"example\":\"nurswgvml111, nurswgvml00*\",\"section\":\"series\",\"excludes\":[\"entity\",\"entity-expression\",\"entity-group\",\"entity-label\"]},{\"displayName\":\"entity\",\"type\":\"string\",\"example\":\"nurswgvml*\",\"section\":\"series\",\"excludes\":[\"entities\",\"entity-expression\",\"entity-group\"]},{\"displayName\":\"entity-expression\",\"type\":\"string\",\"example\":\"tags.app = 'ATSD'\",\"section\":\"series\",\"excludes\":[\"entities\",\"entity\",\"entity-group\"]},{\"displayName\":\"entity-group\",\"type\":\"string\",\"example\":\"nmob-sub-group\",\"section\":\"series\",\"excludes\":[\"entities\",\"entity\",\"entity-expression\"]},{\"displayName\":\"entity-label\",\"type\":\"string\",\"example\":\"srv007\",\"section\":\"widget\"},{\"displayName\":\"error-refresh-interval\",\"type\":\"interval\",\"example\":\"30 minute\",\"section\":\"series\"},{\"displayName\":\"exact-match\",\"type\":\"boolean\",\"example\":true,\"section\":\"series\"},{\"displayName\":\"expand\",\"type\":\"boolean\",\"example\":true,\"section\":\"series\",\"widget\":\"pie\"},{\"displayName\":\"expand-panels\",\"type\":\"enum\",\"example\":\"all\",\"defaultValue\":\"compact\",\"enum\":[],\"section\":\"widget\",\"override\":{\"[widget == 'chart']\":{\"enum\":[\"true\",\"all\",\"default\",\"auto\",\"compact\",\"false\",\"none\"]},\"[section == 'configuration']\":{\"enum\":[\"true\",\"all\",\"default\",\"auto\",\"compact\",\"false\",\"none\"]}}},{\"displayName\":\"expand-tags\",\"type\":\"boolean\",\"example\":true,\"section\":\"widget\",\"widget\":\"property\"},{\"displayName\":\"expire-time-span\",\"type\":\"interval\",\"example\":\"10 day\",\"section\":\"widget\",\"widget\":\"table\"},{\"displayName\":\"fill-value\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"section\":\"series\",\"widget\":\"chart\"},{\"displayName\":\"filter\",\"type\":\"string\",\"example\":\"value > 1\",\"section\":\"series\"},{\"displayName\":\"filter-range\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"section\":\"series\"},{\"displayName\":\"fit-svg\",\"type\":\"boolean\",\"example\":true,\"section\":\"widget\",\"widget\":\"page\"},{\"displayName\":\"font-scale\",\"type\":\"number\",\"example\":0.7,\"defaultValue\":0.5,\"minValue\":0,\"maxValue\":1,\"section\":\"widget\"},{\"displayName\":\"font-size\",\"type\":\"integer\",\"example\":42,\"section\":\"widget\",\"widget\":\"treemap\"},{\"displayName\":\"forecast-arima-auto\",\"type\":\"boolean\",\"example\":\"true\",\"section\":\"series\",\"widget\":\"chart\"},{\"displayName\":\"forecast-arima-auto-regression-interval\",\"type\":\"interval\",\"example\":\"1 week\",\"section\":\"series\",\"widget\":\"chart\",\"excludes\":[\"forecast-arima-p\"]},{\"displayName\":\"forecast-arima-d\",\"type\":\"number\",\"example\":\"5\",\"section\":\"series\",\"widget\":\"chart\"},{\"displayName\":\"forecast-arima-p\",\"type\":\"enum\",\"example\":\"1\",\"section\":\"series\",\"widget\":\"chart\",\"enum\":[\"0\",\"1\"],\"excludes\":[\"forecast-arima-auto-regression-interval\"]},{\"displayName\":\"forecast-horizon-interval\",\"type\":\"interval\",\"example\":\"3 day\",\"section\":\"series\",\"widget\":\"chart\",\"excludes\":[\"forecast-horizon-length\",\"forecast-horizon-end-time\"]},{\"displayName\":\"forecast-horizon-length\",\"type\":\"integer\",\"example\":\"100\",\"section\":\"series\",\"widget\":\"chart\",\"minValue\":0,\"excludes\":[\"forecast-horizon-interval\",\"forecast-horizon-end-time\"]},{\"displayName\":\"forecast-horizon-start-time\",\"type\":\"date\",\"example\":\"2019-02-05T00:00:00Z\",\"section\":\"series\",\"widget\":\"chart\"},{\"displayName\":\"forecast-horizon-end-time\",\"type\":\"date\",\"example\":\"2019-02-06T00:00:00Z\",\"section\":\"series\",\"widget\":\"chart\",\"excludes\":[\"forecast-horizon-interval\",\"forecast-horizon-length\"]},{\"displayName\":\"forecast-hw-auto\",\"type\":\"boolean\",\"example\":\"true\",\"section\":\"series\",\"widget\":\"chart\"},{\"displayName\":\"forecast-hw-period\",\"type\":\"interval\",\"example\":\"1 year\",\"section\":\"series\",\"widget\":\"chart\"},{\"displayName\":\"forecast-hw-alpha\",\"type\":\"number\",\"example\":\"0.6\",\"section\":\"series\",\"widget\":\"chart\"},{\"displayName\":\"forecast-hw-beta\",\"type\":\"number\",\"example\":\"0.1\",\"section\":\"series\",\"widget\":\"chart\"},{\"displayName\":\"forecast-hw-gamma\",\"type\":\"number\",\"example\":\"0.1\",\"section\":\"series\",\"widget\":\"chart\"},{\"displayName\":\"forecast-include\",\"type\":\"string\",\"example\":\"HISTORY, FORECAST\",\"section\":\"series\",\"defaultValue\":\"FORECAST\",\"enum\":[\"FORECAST\",\"HISTORY\",\"RECONSTRUCTED\"],\"widget\":\"chart\"},{\"displayName\":\"forecast-name\",\"type\":\"string\",\"example\":\"hw5\",\"section\":\"series\",\"widget\":\"chart\"},{\"displayName\":\"forecast-score-interval\",\"type\":\"interval\",\"example\":\"1 day\",\"section\":\"series\",\"widget\":\"chart\"},{\"displayName\":\"forecast-ssa\",\"type\":\"boolean\",\"example\":\"true\",\"section\":\"series\",\"widget\":\"chart\"},{\"displayName\":\"forecast-ssa-decompose-eigentriple-limit\",\"type\":\"number\",\"example\":0,\"section\":\"series\",\"widget\":\"chart\",\"defaultValue\":0,\"minValue\":0},{\"displayName\":\"forecast-ssa-decompose-method\",\"type\":\"enum\",\"example\":\"TRUNCATED\",\"section\":\"series\",\"widget\":\"chart\",\"defaultValue\":\"AUTO\",\"enum\":[\"FULL\",\"TRUNCATED\",\"AUTO\"]},{\"displayName\":\"forecast-ssa-decompose-singular-value-threshold\",\"type\":\"integer\",\"example\":1,\"section\":\"series\",\"widget\":\"chart\",\"minValue\":0,\"maxValue\":{\"value\":100,\"excluded\":true}},{\"displayName\":\"forecast-ssa-decompose-window-length\",\"type\":\"number\",\"example\":\"50\",\"section\":\"series\",\"widget\":\"chart\",\"minValue\":{\"value\":0,\"excluded\":true},\"maxValue\":50},{\"displayName\":\"forecast-ssa-forecast-base\",\"type\":\"enum\",\"example\":\"RECONSTRUCTED\",\"section\":\"series\",\"widget\":\"chart\",\"enum\":[\"RECONSTRUCTED\",\"ORIGINAL\"]},{\"displayName\":\"forecast-ssa-forecast-method\",\"type\":\"enum\",\"example\":\"RECURRENT\",\"section\":\"series\",\"widget\":\"chart\",\"defaultValue\":\"RECURRENT\",\"enum\":[\"RECURRENT\",\"VECTOR\"]},{\"displayName\":\"forecast-ssa-group-auto-count\",\"type\":\"integer\",\"example\":\"5\",\"section\":\"series\",\"widget\":\"chart\",\"minValue\":0},{\"displayName\":\"forecast-ssa-group-auto-clustering-method\",\"type\":\"enum\",\"example\":\"NOVOSIBIRSK\",\"section\":\"series\",\"defaultValue\":\"HIERARCHICAL\",\"widget\":\"chart\",\"enum\":[\"HIERARCHICAL\",\"XMEANS\",\"NOVOSIBIRSK\"],\"excludes\":[\"forecast-ssa-group-manual-groups\"]},{\"displayName\":\"forecast-ssa-group-auto-clustering-params\",\"type\":\"object\",\"example\":\"{ \\\"v\\\": 0.5, \\\"c\\\": 0.45 }\",\"section\":\"series\",\"widget\":\"chart\",\"excludes\":[\"forecast-ssa-group-manual-groups\"]},{\"displayName\":\"forecast-ssa-group-auto-stack\",\"type\":\"boolean\",\"example\":\"true\",\"section\":\"series\",\"widget\":\"chart\",\"excludes\":[\"forecast-ssa-group-manual-groups\",\"forecast-ssa-group-auto-union\"]},{\"displayName\":\"forecast-ssa-group-auto-union\",\"type\":\"string\",\"example\":\"A;C-E , B;F-\",\"section\":\"series\",\"widget\":\"chart\",\"excludes\":[\"forecast-ssa-group-manual-groups\",\"forecast-ssa-group-auto-stack\"]},{\"displayName\":\"forecast-ssa-group-manual-groups\",\"type\":\"string\",\"example\":\"1;3-6 , 2;7-\",\"section\":\"series\",\"widget\":\"chart\",\"excludes\":[\"forecast-ssa-group-auto-clustering-method\",\"forecast-ssa-group-auto-clustering-params\",\"forecast-ssa-group-auto-stack\",\"forecast-ssa-group-auto-union\"]},{\"displayName\":\"forecast-ssa-reconstruct-averaging-function\",\"type\":\"enum\",\"example\":\"AVG\",\"defaultValue\":\"MEDIAN\",\"section\":\"series\",\"widget\":\"chart\",\"enum\":[\"AVG\",\"MEDIAN\"]},{\"displayName\":\"forecast-ssa-reconstruct-fourier\",\"type\":\"boolean\",\"example\":\"true\",\"section\":\"series\",\"widget\":\"chart\"},{\"displayName\":\"forecast-style\",\"multiLine\":true,\"type\":\"string\",\"example\":\"stroke: magenta;\",\"section\":\"widget\",\"widget\":\"chart\"},{\"displayName\":\"format\",\"type\":\"string\",\"example\":\"kilobytes\",\"possibleValues\":[{\"value\":\"bytes\"},{\"value\":\"kilobytes\"},{\"value\":\"megawatt\"},{\"value\":\"kilowatthour\"},{\"value\":\"hertz\"},{\"value\":\"kilojoule\"},{\"value\":\"million watt\"},{\"value\":\"thousands\"}],\"section\":\"series\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"numeric\",\"type\":\"function\"},{\"name\":\"decimal\",\"type\":\"function\"},{\"name\":\"round\",\"type\":\"function\"},{\"name\":\"fixed\",\"type\":\"function\"},{\"name\":\"binary\",\"type\":\"function\"},{\"name\":\"currency\",\"type\":\"function\"},{\"name\":\"percent\",\"type\":\"function\"},{\"name\":\"fraction\",\"type\":\"function\"},{\"name\":\"iso\",\"type\":\"function\"},{\"name\":\"json\",\"type\":\"function\"},{\"name\":\"precise\",\"type\":\"function\",\"args\":[{\"name\":\"n\",\"type\":\"number\"}]}]}},{\"displayName\":\"format-axis\",\"type\":\"string\",\"example\":\"Math.round(value * 10)/10 + \\\"%\\\"\",\"section\":\"widget\",\"widget\":\"gauge\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"numeric\",\"type\":\"function\"},{\"name\":\"decimal\",\"type\":\"function\"},{\"name\":\"round\",\"type\":\"function\"},{\"name\":\"fixed\",\"type\":\"function\"},{\"name\":\"binary\",\"type\":\"function\"},{\"name\":\"currency\",\"type\":\"function\"},{\"name\":\"percent\",\"type\":\"function\"},{\"name\":\"fraction\",\"type\":\"function\"},{\"name\":\"iso\",\"type\":\"function\"},{\"name\":\"json\",\"type\":\"function\"}]}},{\"displayName\":\"format-counter\",\"type\":\"string\",\"example\":\"d3.format(\\\"0.3f\\\")\",\"section\":\"widget\",\"widget\":\"gauge\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"numeric\",\"type\":\"function\"},{\"name\":\"decimal\",\"type\":\"function\"},{\"name\":\"round\",\"type\":\"function\"},{\"name\":\"fixed\",\"type\":\"function\"},{\"name\":\"binary\",\"type\":\"function\"},{\"name\":\"currency\",\"type\":\"function\"},{\"name\":\"percent\",\"type\":\"function\"},{\"name\":\"fraction\",\"type\":\"function\"},{\"name\":\"iso\",\"type\":\"function\"},{\"name\":\"json\",\"type\":\"function\"}]}},{\"displayName\":\"format-headers\",\"type\":\"boolean\",\"example\":true,\"section\":\"column\",\"widget\":\"property\"},{\"displayName\":\"format-size\",\"type\":\"string\",\"example\":\"kilobytes\",\"section\":\"widget\",\"widget\":\"treemap\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"numeric\",\"type\":\"function\"},{\"name\":\"decimal\",\"type\":\"function\"},{\"name\":\"round\",\"type\":\"function\"},{\"name\":\"fixed\",\"type\":\"function\"},{\"name\":\"binary\",\"type\":\"function\"},{\"name\":\"currency\",\"type\":\"function\"},{\"name\":\"percent\",\"type\":\"function\"},{\"name\":\"fraction\",\"type\":\"function\"},{\"name\":\"iso\",\"type\":\"function\"},{\"name\":\"json\",\"type\":\"function\"}]}},{\"displayName\":\"format-tip\",\"type\":\"string\",\"example\":\"d3.format(\\\"0.1f\\\")\",\"section\":\"widget\",\"widget\":\"gauge\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"numeric\",\"type\":\"function\"},{\"name\":\"decimal\",\"type\":\"function\"},{\"name\":\"round\",\"type\":\"function\"},{\"name\":\"fixed\",\"type\":\"function\"},{\"name\":\"binary\",\"type\":\"function\"},{\"name\":\"currency\",\"type\":\"function\"},{\"name\":\"percent\",\"type\":\"function\"},{\"name\":\"fraction\",\"type\":\"function\"},{\"name\":\"iso\",\"type\":\"function\"},{\"name\":\"json\",\"type\":\"function\"}]}},{\"displayName\":\"frequency\",\"type\":\"interval\",\"example\":\"30 minute\",\"section\":\"series\"},{\"displayName\":\"gradient-count\",\"type\":\"string\",\"example\":\"5\",\"minValue\":1,\"section\":\"widget\",\"widget\":[\"gauge\",\"treemap\",\"calendar\"]},{\"displayName\":\"gradient-intensity\",\"type\":\"string\",\"example\":\"-25%/75%\",\"section\":\"widget\",\"widget\":\"gauge\"},{\"displayName\":\"group\",\"section\":\"widget\",\"widget\":\"bar\",\"type\":\"string\",\"example\":\"region\",\"defaultValue\":\"metric\"},{\"displayName\":\"group-first\",\"type\":\"boolean\",\"example\":false,\"section\":\"series\"},{\"displayName\":\"group-interpolate\",\"type\":\"enum\",\"section\":\"series\",\"example\":\"LINEAR\",\"defaultValue\":\"NONE\",\"enum\":[\"LINEAR\",\"PREVIOUS\",\"NONE\",\"NEXT\",\"VALUE\\\\(\\\\d+\\\\)\"]},{\"displayName\":\"group-interpolate-extend\",\"type\":\"boolean\",\"example\":true,\"section\":\"series\"},{\"displayName\":\"group-keys\",\"type\":\"string\",\"example\":\"entity, type\",\"section\":\"series\"},{\"displayName\":\"group-label\",\"type\":\"string\",\"example\":\"Tables\",\"widget\":\"bar\",\"section\":\"series\"},{\"displayName\":\"group-period\",\"type\":\"interval\",\"section\":\"series\",\"example\":\"1 month\",\"enum\":[\"auto\"]},{\"displayName\":\"group-statistic\",\"type\":\"enum\",\"example\":\"sum\",\"section\":\"series\",\"enum\":[\"count\",\"min\",\"max\",\"sum\",\"avg\",\"percentile\\\\((\\\\d{1,2}(\\\\.\\\\d)?|100)\\\\)\",\"median\",\"standard_deviation\",\"first\",\"last\",\"delta\",\"counter\",\"wtavg\",\"wavg\",\"min_value_time\",\"max_value_time\",\"threshold_count\",\"threshold_duration\",\"threshold_percent\"]},{\"displayName\":\"header-style\",\"multiLine\":true,\"type\":\"string\",\"example\":\"background-color: steelblue\",\"section\":\"widget\"},{\"displayName\":\"height-units\",\"type\":\"number\",\"minValue\":0,\"example\":2,\"section\":\"widget\"},{\"displayName\":\"hidden\",\"type\":\"boolean\",\"example\":true,\"section\":\"series\",\"defaultValue\":false},{\"displayName\":\"hide-column\",\"type\":\"string\",\"example\":\"value <= 0 \\\\| column.key.indexOf('paging') == 0\",\"multiLine\":true,\"section\":\"column\",\"widget\":\"property\",\"script\":{\"returnValue\":\"boolean\",\"fields\":[{\"name\":\"value\",\"type\":\"number\"},{\"name\":\"alert\",\"type\":\"number\"},{\"name\":\"row\",\"type\":\"object\"},{\"name\":\"column\",\"type\":\"object\"},{\"name\":\"widget\",\"type\":\"object\"},{\"name\":\"el\",\"type\":\"array\"},{\"name\":\"rowEl\",\"type\":\"array\"},{\"name\":\"td\",\"type\":\"boolean\"},{\"name\":\"filter\",\"type\":\"function\",\"args\":[{\"name\":\"filter\",\"type\":\"function\"}]},{\"name\":\"dialog\",\"type\":\"function\",\"args\":[{\"name\":\"request\",\"type\":\"object\"}]},{\"name\":\"series\",\"type\":\"function\",\"args\":[{\"name\":\"request\",\"type\":\"object\"}]}]}},{\"displayName\":\"hide-empty-columns\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"widget\":\"bar\",\"section\":\"widget\"},{\"displayName\":\"hide-empty-series\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"widget\":\"table\",\"section\":\"widget\"},{\"displayName\":\"hide-if-empty\",\"type\":\"boolean\",\"example\":true,\"widget\":\"table\",\"section\":\"series\"},{\"displayName\":\"horizontal\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"widget\":\"bar\",\"section\":\"widget\"},{\"displayName\":\"horizontal-grid\",\"type\":\"enum\",\"example\":false,\"enum\":[],\"section\":\"widget\",\"override\":{\"[widget == 'chart']\":{\"enum\":[\"true\",\"false\"]},\"[widget == 'histogram']\":{\"enum\":[\"none\",\"density\",\"fractions\",\"frequency\",\"false\"]}}},{\"displayName\":\"hour-format\",\"type\":\"string\",\"example\":\"%I %p\"},{\"displayName\":\"icon\",\"type\":\"string\",\"example\":\"value > 1 ? 'exclamation-sign' : 'ok'\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"value\",\"type\":\"number\"}]}},{\"displayName\":\"icon-alert-expression\",\"type\":\"string\",\"example\":\"value('s1') > 10\",\"widget\":\"pie\",\"section\":\"series\",\"script\":{\"returnValue\":\"boolean\",\"fields\":[{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"required\":true,\"type\":\"string\"}]}]}},{\"displayName\":\"icon-alert-style\",\"multiLine\":true,\"type\":\"string\",\"example\":\"return alert > 12000 ? 'fill: red' : 'fill:green';\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"alert\",\"type\":\"number\"}]}},{\"displayName\":\"icon-color\",\"type\":\"string\",\"example\":\"green\",\"section\":\"series\",\"widget\":\"text\"},{\"displayName\":\"icon-position\",\"type\":\"enum\",\"example\":\"bottom\",\"section\":\"widget\",\"widget\":\"text\",\"enum\":[\"bottom\",\"right\",\"left\",\"top\"]},{\"displayName\":\"icon-size\",\"type\":\"enum\",\"example\":\"auto\",\"section\":\"widget\",\"widget\":\"text\",\"enum\":[\"auto\"]},{\"displayName\":\"id\",\"type\":\"string\",\"example\":\"queue_1\",\"widget\":\"graph\"},{\"displayName\":\"interpolate\",\"type\":\"enum\",\"example\":\"LINEAR\",\"defaultValue\":\"NONE\",\"section\":\"series\",\"enum\":[\"LINEAR\",\"PREVIOUS\",\"NONE\",\"NEXT\",\"VALUE\\\\(\\\\d+\\\\)\"]},{\"displayName\":\"interpolate-boundary\",\"type\":\"enum\",\"section\":\"series\",\"example\":\"INNER\",\"enum\":[\"INNER\",\"OUTER\"]},{\"displayName\":\"interpolate-extend\",\"type\":\"boolean\",\"example\":true,\"section\":\"series\"},{\"displayName\":\"interpolate-fill\",\"type\":\"enum\",\"example\":\"true\",\"section\":\"series\",\"enum\":[\"true\",\"false\",\"\\\\d+\"]},{\"displayName\":\"interpolate-function\",\"type\":\"enum\",\"example\":\"LINEAR\",\"section\":\"series\",\"enum\":[\"LINEAR\",\"AUTO\",\"PREVIOS\"]},{\"displayName\":\"interpolate-period\",\"type\":\"interval\",\"example\":\"1 minute\",\"section\":\"series\"},{\"displayName\":\"interval-format\",\"type\":\"string\",\"example\":\"%H:%M\"},{\"displayName\":\"join\",\"type\":\"string\",\"section\":\"widget\",\"widget\":\"property\",\"example\":\"true\"},{\"displayName\":\"key\",\"type\":\"string\",\"example\":\"%cpu\",\"section\":\"column\"},{\"displayName\":\"key-tag-expression\",\"type\":\"string\",\"example\":\"tags.docker-host = 'nurswghbs001'\",\"section\":\"property\",\"widget\":\"property\"},{\"displayName\":\"label\",\"type\":\"string\",\"multiLine\":true,\"example\":\"CPU Busy - nurswgvml007\",\"section\":\"series\"},{\"displayName\":\"label-format\",\"type\":\"string\",\"example\":\"tagName\",\"section\":\"series\"},{\"displayName\":\"last\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"section\":\"property\",\"widget\":\"property\"},{\"displayName\":\"last-marker\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"widget\":\"chart\",\"section\":\"widget\"},{\"displayName\":\"last-value-label\",\"type\":\"string\",\"example\":\"none\",\"defaultValue\":\"right\",\"widget\":\"chart\",\"section\":\"widget\"},{\"displayName\":\"layout\",\"type\":\"enum\",\"example\":\"rectangle\",\"section\":\"widget\",\"widget\":\"graph\",\"defaultValue\":\"circle\",\"enum\":[\"rectangle\",\"circle\"]},{\"displayName\":\"left-axis\",\"type\":\"enum\",\"example\":\"fraction\",\"defaultValue\":\"frequency\",\"widget\":\"histogram\",\"section\":\"widget\",\"enum\":[\"none\",\"density\",\"fraction\",\"frequency\"]},{\"displayName\":\"left-units\",\"type\":\"number\",\"example\":1,\"section\":\"widget\",\"minValue\":0},{\"displayName\":\"legend-last-value\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"widget\":\"chart\",\"section\":\"widget\"},{\"displayName\":\"legend-position\",\"type\":\"string\",\"example\":\"left\",\"section\":\"widget\"},{\"displayName\":\"legend-ticks\",\"type\":\"boolean\",\"example\":true,\"section\":\"widget\"},{\"displayName\":\"legend-value\",\"type\":\"boolean\",\"example\":true,\"section\":\"widget\"},{\"displayName\":\"limit\",\"type\":\"integer\",\"example\":1000,\"section\":\"widget\"},{\"displayName\":\"linear-zoom\",\"widget\":\"graph\",\"section\":\"widget\",\"type\":\"boolean\",\"example\":true},{\"displayName\":\"link-alert-expression\",\"widget\":\"graph\",\"type\":\"string\",\"section\":\"series\",\"example\":\"value('s1') > 10\",\"script\":{\"returnValue\":\"boolean\",\"fields\":[{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"required\":true,\"type\":\"string\"}]}]}},{\"displayName\":\"link-alert-style\",\"multiLine\":true,\"section\":\"series\",\"type\":\"string\",\"widget\":\"graph\",\"example\":\"if (alert > 99) return 'stroke-width:3px';\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"alert\",\"type\":\"number\"}]}},{\"displayName\":\"link-animate\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"widget\":\"graph\",\"section\":\"widget\"},{\"displayName\":\"link-color-range\",\"type\":\"string\",\"example\":\"silver, steelblue, orange\",\"widget\":\"graph\",\"section\":\"widget\"},{\"displayName\":\"link-colors\",\"type\":\"string\",\"example\":\"blue, green, orange, red\",\"widget\":\"graph\",\"section\":\"widget\"},{\"displayName\":\"link-data\",\"widget\":\"graph\",\"section\":\"widget\",\"type\":\"boolean\",\"example\":true},{\"displayName\":\"link-labels\",\"type\":\"boolean\",\"example\":true,\"widget\":\"graph\",\"section\":\"widget\"},{\"displayName\":\"link-label-zoom-threshold\",\"type\":\"number\",\"example\":1,\"defaultValue\":0,\"widget\":\"graph\",\"section\":\"widget\"},{\"displayName\":\"links\",\"widget\":\"graph\",\"section\":\"series\",\"type\":\"string\",\"example\":\"alpha.queue - beta.queue\"},{\"displayName\":\"link-thresholds\",\"type\":\"string\",\"example\":\"Math.max(0.1, percentile(50)), percentile(95)\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"percentile\",\"type\":\"function\"},{\"name\":\"max\",\"type\":\"function\"},{\"name\":\"min\",\"type\":\"function\"},{\"name\":\"avg\",\"type\":\"function\"},{\"name\":\"sum\",\"type\":\"function\"}]}},{\"displayName\":\"link-value\",\"widget\":\"graph\",\"section\":\"series\",\"type\":\"string\",\"example\":\"Math.max(0, value('alias'))\",\"script\":{\"returnValue\":\"number\",\"fields\":[{\"name\":\"metric\",\"type\":\"string\"},{\"name\":\"entity\",\"type\":\"string\"},{\"name\":\"tags\",\"type\":\"object\"},{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"previous\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"movavg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"count\",\"type\":\"number\",\"required\":true},{\"name\":\"minCount\",\"type\":\"number\"}]},{\"name\":\"detail\",\"type\":\"function\"},{\"name\":\"forecast\",\"type\":\"function\"},{\"name\":\"forecast_deviation\",\"type\":\"function\"},{\"name\":\"lower_confidence\",\"type\":\"function\"},{\"name\":\"upper_confidence\",\"type\":\"function\"},{\"name\":\"percentile\",\"type\":\"function\",\"args\":[{\"name\":\"percentage\",\"type\":\"number\",\"required\":true}]},{\"name\":\"max\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"maximum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"min\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"minimum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"avg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"average\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"sum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"delta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"counter\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"last\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"first\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"min_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"max_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"count\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"threshold_count\",\"type\":\"function\"},{\"name\":\"threshold_percent\",\"type\":\"function\"},{\"name\":\"threshold_duration\",\"type\":\"function\"},{\"name\":\"time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"bottom\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"top\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"meta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"entityTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"metricTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"median\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"series\",\"type\":\"array\"}]}},{\"displayName\":\"link-width-order\",\"type\":\"enum\",\"example\":\"top\",\"widget\":\"graph\",\"section\":\"widget\",\"defaultValue\":\"undefined\",\"enum\":[\"top\",\"bottom\",\"undefined\"]},{\"displayName\":\"link-widths\",\"widget\":\"graph\",\"section\":\"widget\",\"type\":\"string\",\"example\":\"1, 1, 2, 3\"},{\"displayName\":\"load-future-data\",\"type\":\"boolean\",\"example\":true,\"widget\":\"chart\",\"section\":\"series\"},{\"displayName\":\"marker-format\",\"type\":\"string\",\"example\":\"metric:entity\",\"widget\":\"pie\",\"section\":\"series\"},{\"displayName\":\"markers\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true,\"section\":\"series\"},{\"displayName\":\"max-font-size\",\"type\":\"integer\",\"example\":14,\"defaultValue\":100},{\"displayName\":\"maximum\",\"type\":\"number\",\"example\":42,\"section\":\"series\"},{\"displayName\":\"max-range\",\"type\":\"number\",\"example\":40,\"section\":\"widget\"},{\"displayName\":\"max-range-force\",\"type\":\"number\",\"example\":100,\"section\":\"widget\"},{\"displayName\":\"max-range-right\",\"type\":\"number\",\"example\":500000,\"section\":\"widget\"},{\"displayName\":\"max-range-right-force\",\"type\":\"number\",\"example\":100,\"section\":\"widget\"},{\"displayName\":\"max-ring-width\",\"widget\":\"graph\",\"section\":\"widget\",\"type\":\"number\",\"defaultValue\":0.5,\"example\":0.6},{\"displayName\":\"max-threshold\",\"section\":\"series\",\"type\":\"number\",\"example\":60},{\"displayName\":\"menu\",\"type\":\"enum\",\"example\":\"update\",\"section\":\"widget\",\"enum\":[\"update\"]},{\"displayName\":\"merge-columns\",\"type\":\"string\",\"example\":\"entity, tags\",\"section\":\"widget\"},{\"displayName\":\"merge-fields\",\"section\":\"series\",\"type\":\"string\",\"example\":\"mount_point\"},{\"displayName\":\"method-path\",\"section\":\"configuration\",\"type\":\"enum\",\"example\":\"/messages/query\",\"defaultValue\":\"/series/query\",\"enum\":[\"/alerts/query\",\"/series/query\",\"/messages/query\",\"/properties/query\"]},{\"displayName\":\"metric\",\"type\":\"string\",\"example\":\"cpu_busy\",\"section\":\"series\",\"excludes\":[\"attribute\",\"table\"]},{\"displayName\":\"metric-label\",\"widget\":\"bar\",\"section\":\"series\",\"type\":\"string\",\"example\":\"CPU Busy, %\"},{\"displayName\":\"min-caption-size\",\"widget\":\"pie\",\"section\":\"widget\",\"type\":\"integer\",\"example\":42},{\"displayName\":\"min-font-size\",\"type\":\"integer\",\"example\":10},{\"displayName\":\"minimum\",\"section\":\"series\",\"defaultValue\":0,\"type\":\"number\",\"example\":42},{\"displayName\":\"minor-ticks\",\"type\":\"integer\",\"example\":4,\"widget\":\"gauge\",\"section\":\"widget\"},{\"displayName\":\"min-range\",\"section\":\"widget\",\"type\":\"number\",\"example\":10},{\"displayName\":\"min-range-force\",\"section\":\"widget\",\"type\":\"number\",\"example\":0},{\"displayName\":\"min-range-right\",\"section\":\"widget\",\"type\":\"number\",\"example\":250000},{\"displayName\":\"min-range-right-force\",\"section\":\"widget\",\"type\":\"number\",\"example\":0},{\"displayName\":\"min-ring-width\",\"minValue\":0,\"defaultValue\":0.3,\"type\":\"number\",\"example\":0.4,\"widget\":\"graph\",\"section\":\"widget\"},{\"displayName\":\"min-severity\",\"type\":\"string\",\"widget\":\"console\",\"section\":\"widget\",\"example\":\"3\"},{\"displayName\":\"min-threshold\",\"defaultValue\":0,\"type\":\"number\",\"section\":\"series\",\"example\":10},{\"displayName\":\"mode\",\"type\":\"enum\",\"example\":\"column\",\"section\":[\"widget\",\"series\"],\"enum\":[\"non-hierarchy\",\"hierarchy\",\"column\",\"range\",\"stack\",\"column-stack\",\"sleek\",\"half\",\"default\",\"row\",\"pie\",\"ring\",\"auto\",\"line\"],\"override\":{\"[widget == 'chart']\":{\"enum\":[\"line\",\"stack\",\"column\",\"range\",\"column-stack\"]},\"[widget == 'gauge']\":{\"enum\":[\"sleek\",\"half\",\"default\"]},\"[widget == 'pie']\":{\"enum\":[\"pie\",\"ring\"]},\"[widget == 'histogram']\":{\"enum\":[\"stack\"]},\"[widget == 'treemap']\":{\"enum\":[\"row\",\"column\",\"auto\"]},\"[widget == 'graph']\":{\"enum\":[\"hierarchy\",\"non-hierarchy\"]}}},{\"displayName\":\"moving-average\",\"type\":\"boolean\",\"widget\":\"chart\",\"section\":\"widget\",\"example\":true},{\"displayName\":\"multiple-column\",\"type\":\"boolean\",\"defaultValue\":false,\"widget\":\"bar\",\"section\":\"column\",\"example\":true},{\"displayName\":\"multiple-series\",\"type\":\"boolean\",\"example\":true},{\"displayName\":\"negative-style\",\"multiLine\":true,\"type\":\"string\",\"example\":\"fill: red\",\"widget\":\"chart\",\"section\":\"widget\"},{\"displayName\":\"node-alert-expression\",\"type\":\"string\",\"example\":\"value > 5\",\"script\":{\"fields\":[{\"name\":\"metric\",\"type\":\"string\"},{\"name\":\"entity\",\"type\":\"string\"},{\"name\":\"tags\",\"type\":\"object\"},{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"previous\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"movavg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"count\",\"type\":\"number\",\"required\":true},{\"name\":\"minCount\",\"type\":\"number\"}]},{\"name\":\"detail\",\"type\":\"function\"},{\"name\":\"forecast\",\"type\":\"function\"},{\"name\":\"forecast_deviation\",\"type\":\"function\"},{\"name\":\"lower_confidence\",\"type\":\"function\"},{\"name\":\"upper_confidence\",\"type\":\"function\"},{\"name\":\"percentile\",\"type\":\"function\",\"args\":[{\"name\":\"percentage\",\"type\":\"number\",\"required\":true}]},{\"name\":\"max\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"maximum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"min\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"minimum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"avg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"average\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"sum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"delta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"counter\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"last\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"first\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"min_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"max_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"count\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"threshold_count\",\"type\":\"function\"},{\"name\":\"threshold_percent\",\"type\":\"function\"},{\"name\":\"threshold_duration\",\"type\":\"function\"},{\"name\":\"time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"bottom\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"top\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"meta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"entityTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"metricTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"median\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"series\",\"type\":\"array\"}],\"returnValue\":\"boolean\"}},{\"displayName\":\"node-alert-style\",\"multiLine\":true,\"widget\":\"graph\",\"type\":\"string\",\"example\":\"if (alert > 99) return 'fill:red';\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"alert\",\"type\":\"number\"}]}},{\"displayName\":\"node-collapse\",\"widget\":\"graph\",\"section\":\"widget\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true},{\"displayName\":\"node-colors\",\"widget\":\"graph\",\"section\":\"widget\",\"type\":\"string\",\"example\":\"red, orange, whitesmoke, limegreen, green\"},{\"displayName\":\"node-connect\",\"widget\":\"graph\",\"section\":\"widget\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true},{\"displayName\":\"node-data\",\"widget\":\"graph\",\"section\":\"widget\",\"type\":\"boolean\",\"example\":true},{\"displayName\":\"node-labels\",\"widget\":\"graph\",\"section\":\"widget\",\"type\":\"boolean\",\"example\":true},{\"displayName\":\"node-label-zoom-threshold\",\"widget\":\"graph\",\"section\":\"widget\",\"type\":\"number\",\"example\":2},{\"displayName\":\"node-radius\",\"type\":\"integer\",\"defaultValue\":5,\"widget\":\"graph\",\"section\":\"widget\",\"example\":20},{\"displayName\":\"node-radiuses\",\"type\":\"string\",\"widget\":\"graph\",\"section\":\"widget\",\"example\":\"10, 20, 30, 40\"},{\"displayName\":\"nodes\",\"widget\":\"graph\",\"type\":\"string\",\"example\":\"queue_1-queue_2\"},{\"displayName\":\"node-thresholds\",\"widget\":\"graph\",\"section\":\"widget\",\"type\":\"string\",\"example\":\"min(), 0, max()\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"percentile\",\"type\":\"function\"},{\"name\":\"max\",\"type\":\"function\"},{\"name\":\"min\",\"type\":\"function\"},{\"name\":\"avg\",\"type\":\"function\"},{\"name\":\"sum\",\"type\":\"function\"}]}},{\"displayName\":\"node-value\",\"widget\":\"graph\",\"section\":\"series\",\"type\":\"string\",\"example\":\"Math.max(0, value('alias'))\",\"script\":{\"returnValue\":\"number\",\"fields\":[{\"name\":\"metric\",\"type\":\"string\"},{\"name\":\"entity\",\"type\":\"string\"},{\"name\":\"tags\",\"type\":\"object\"},{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"previous\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"movavg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"count\",\"type\":\"number\",\"required\":true},{\"name\":\"minCount\",\"type\":\"number\"}]},{\"name\":\"detail\",\"type\":\"function\"},{\"name\":\"forecast\",\"type\":\"function\"},{\"name\":\"forecast_deviation\",\"type\":\"function\"},{\"name\":\"lower_confidence\",\"type\":\"function\"},{\"name\":\"upper_confidence\",\"type\":\"function\"},{\"name\":\"percentile\",\"type\":\"function\",\"args\":[{\"name\":\"percentage\",\"type\":\"number\",\"required\":true}]},{\"name\":\"max\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"maximum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"min\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"minimum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"avg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"average\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"sum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"delta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"counter\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"last\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"first\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"min_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"max_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"count\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"threshold_count\",\"type\":\"function\"},{\"name\":\"threshold_percent\",\"type\":\"function\"},{\"name\":\"threshold_duration\",\"type\":\"function\"},{\"name\":\"time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"bottom\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"top\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"meta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"entityTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"metricTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"median\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"series\",\"type\":\"array\"}]}},{\"displayName\":\"offset\",\"type\":\"integer\",\"widget\":\"property\",\"section\":\"property\",\"example\":5000},{\"displayName\":\"offset-bottom\",\"section\":\"configuration\",\"type\":\"integer\",\"example\":50},{\"displayName\":\"offset-left\",\"section\":\"configuration\",\"type\":\"integer\",\"example\":50},{\"displayName\":\"offset-right\",\"section\":\"configuration\",\"type\":\"integer\",\"example\":50},{\"displayName\":\"offset-top\",\"section\":\"configuration\",\"type\":\"integer\",\"example\":50},{\"displayName\":\"on-change\",\"section\":\"dropdown\",\"type\":\"string\",\"multiLine\":false,\"example\":\"widget.post.queries[0].type = this.value; widget.reload();\",\"script\":{\"returnValue\":\"void\",\"fields\":[{\"name\":\"widget\",\"type\":\"object\"}]}},{\"displayName\":\"on-click\",\"section\":\"column\",\"type\":\"string\",\"example\":\"dialog({ series: [s], disconnectValue: 0 })\",\"multiLine\":true,\"script\":{\"returnValue\":\"void\",\"fields\":[{\"name\":\"value\",\"type\":\"number\"},{\"name\":\"alert\",\"type\":\"number\"},{\"name\":\"row\",\"type\":\"object\"},{\"name\":\"column\",\"type\":\"object\"},{\"name\":\"widget\",\"type\":\"object\"},{\"name\":\"el\",\"type\":\"array\"},{\"name\":\"rowEl\",\"type\":\"array\"},{\"name\":\"td\",\"type\":\"boolean\"},{\"name\":\"filter\",\"type\":\"function\",\"args\":[{\"name\":\"filter\",\"type\":\"function\"}]},{\"name\":\"dialog\",\"type\":\"function\",\"args\":[{\"name\":\"request\",\"type\":\"object\"}]},{\"name\":\"series\",\"type\":\"function\",\"args\":[{\"name\":\"request\",\"type\":\"object\"}]}]}},{\"displayName\":\"on-series-click\",\"type\":\"string\",\"multiLine\":true,\"example\":\"callDialog({ type: 'page', url: 'http://www.axibase.com/' })\",\"script\":{\"returnValue\":\"void\",\"fields\":[{\"name\":\"series\",\"type\":\"object\"},{\"name\":\"widget\"},{\"name\":\"config\",\"type\":\"object\"},{\"name\":\"interval\",\"type\":\"object\"}]}},{\"displayName\":\"on-series-double-click\",\"multiLine\":true,\"type\":\"string\",\"example\":\"''\",\"script\":{\"returnValue\":\"void\",\"fields\":[{\"name\":\"series\",\"type\":\"object\"},{\"name\":\"widget\"},{\"name\":\"config\",\"type\":\"object\"},{\"name\":\"interval\",\"type\":\"object\"}]}},{\"displayName\":\"options\",\"multiLine\":true,\"section\":\"dropdown\",\"type\":\"string\",\"example\":\"javascript: requestMetricsSeriesValues(\\\"entity\\\")\"},{\"displayName\":\"padding\",\"widget\":\"graph\",\"section\":\"widget\",\"type\":\"string\",\"example\":\"1px\"},{\"displayName\":\"palette-ticks\",\"section\":\"widget\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false},{\"displayName\":\"parent\",\"widget\":\"graph\",\"section\":\"node\",\"type\":\"string\",\"example\":\"manager_1\"},{\"displayName\":\"parse-numbers\",\"type\":\"boolean\",\"example\":true,\"section\":\"column\",\"widget\":\"property\",\"defaultValue\":false},{\"displayName\":\"path\",\"section\":\"configuration\",\"type\":\"string\",\"example\":\"/messages/query\"},{\"displayName\":\"percentile-markers\",\"defaultValue\":\"none\",\"type\":\"enum\",\"example\":\"all\",\"widget\":\"box\",\"section\":\"widget\",\"enum\":[\"all\",\"none\",\"top\",\"bottom\"]},{\"displayName\":\"percentiles\",\"type\":\"string\",\"example\":\"10%/90%\"},{\"displayName\":\"period\",\"type\":\"interval\",\"example\":\"15 minute\",\"section\":\"series\",\"enum\":[\"auto\"]},{\"displayName\":\"periods\",\"section\":\"configuration\",\"type\":\"string\",\"example\":\"20 minute, 4 hour\"},{\"displayName\":\"pin-radius\",\"widget\":\"gauge\",\"section\":\"widget\",\"type\":\"number\",\"example\":0.2,\"minValue\":0,\"maxValue\":1},{\"displayName\":\"pointer-position\",\"widget\":\"chart\",\"section\":\"series\",\"type\":\"string\",\"example\":\"right\",\"defaultValue\":\"false\"},{\"displayName\":\"position\",\"section\":\"column\",\"type\":\"string\",\"example\":\"first\"},{\"displayName\":\"primary-key\",\"widget\":\"console\",\"section\":\"widget\",\"type\":\"string\",\"defaultValue\":\"id\",\"example\":\"id\"},{\"displayName\":\"principal\",\"type\":\"string\",\"example\":\"username\"},{\"displayName\":\"range-merge\",\"type\":\"boolean\",\"section\":\"widget\",\"example\":true,\"defaultValue\":false},{\"displayName\":\"range-offset\",\"widget\":\"histogram\",\"section\":\"widget\",\"type\":\"number\",\"example\":50},{\"displayName\":\"range-select-end\",\"widget\":\"histogram\",\"type\":\"string\",\"section\":\"widget\",\"example\":\"alert(min + ',' + max)\",\"script\":{\"returnValue\":\"void\",\"fields\":[{\"name\":\"min\",\"type\":\"number\"},{\"name\":\"max\",\"type\":\"number\"}]}},{\"displayName\":\"range-select-start\",\"widget\":\"histogram\",\"type\":\"string\",\"section\":\"widget\",\"example\":\"alert(min + ',' + max)\",\"script\":{\"returnValue\":\"void\",\"fields\":[{\"name\":\"min\",\"type\":\"number\"},{\"name\":\"max\",\"type\":\"number\"}]}},{\"displayName\":\"rate\",\"type\":\"interval\",\"example\":\"15 second\",\"section\":\"series\"},{\"displayName\":\"rate-counter\",\"type\":\"boolean\",\"example\":true,\"section\":\"series\"},{\"displayName\":\"ratio\",\"type\":\"number\",\"example\":0.2,\"widget\":\"treemap\",\"section\":\"widget\"},{\"displayName\":\"refresh-interval\",\"type\":\"interval\",\"example\":\"5 second\",\"section\":\"series\"},{\"displayName\":\"reload\",\"section\":\"dropdown\",\"type\":\"boolean\",\"example\":true},{\"displayName\":\"replace-underscore\",\"section\":\"widget\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false,\"widget\":\"table\"},{\"displayName\":\"replace-value\",\"type\":\"string\",\"example\":\"value < 50 ? null : value\",\"section\":\"series\",\"script\":{\"returnValue\":\"number\",\"fields\":[{\"name\":\"value\",\"type\":\"number\"},{\"name\":\"time\",\"type\":\"integer\"},{\"name\":\"previousValue\",\"type\":\"number\"},{\"name\":\"previousTime\",\"type\":\"integer\"}]}},{\"displayName\":\"responsive\",\"section\":\"widget\",\"type\":\"boolean\",\"example\":true,\"defaultValue\":false},{\"displayName\":\"retain-time-span\",\"widget\":\"chart\",\"section\":\"widget\",\"type\":\"boolean\",\"example\":false,\"defaultValue\":true},{\"displayName\":\"retry-refresh-interval\",\"type\":\"interval\",\"example\":\"5 minute\",\"section\":\"series\"},{\"displayName\":\"right-axis\",\"type\":\"enum\",\"example\":\"density\",\"defaultValue\":\"none\",\"widget\":\"histogram\",\"section\":\"widget\",\"enum\":[\"density\",\"none\",\"fraction\",\"frequency\"]},{\"displayName\":\"ring-width\",\"widget\":\"gauge\",\"type\":\"number\",\"minValue\":0,\"maxValue\":1,\"section\":\"widget\",\"example\":0.2},{\"displayName\":\"rotate-legend-ticks\",\"section\":\"widget\",\"type\":\"boolean\",\"defaultValue\":false,\"example\":true},{\"displayName\":\"rotate-palette-ticks\",\"type\":\"boolean\",\"section\":\"widget\",\"example\":false,\"defaultValue\":true},{\"displayName\":\"rotate-ticks\",\"type\":\"string\",\"example\":\"45\",\"section\":\"widget\",\"defaultValue\":\"90\"},{\"displayName\":\"row-alert-style\",\"multiLine\":true,\"type\":\"string\",\"example\":\"background-color: orange\",\"section\":\"column\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"alert\",\"type\":\"number\"}]}},{\"displayName\":\"row-style\",\"multiLine\":true,\"type\":\"string\",\"section\":\"column\",\"example\":\"value > 1 ? 'background: orange' : null\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"value\",\"type\":\"number\"},{\"name\":\"alert\",\"type\":\"number\"},{\"name\":\"row\",\"type\":\"object\"},{\"name\":\"column\",\"type\":\"object\"},{\"name\":\"widget\",\"type\":\"object\"},{\"name\":\"el\",\"type\":\"array\"},{\"name\":\"rowEl\",\"type\":\"array\"},{\"name\":\"td\",\"type\":\"boolean\"},{\"name\":\"filter\",\"type\":\"function\",\"args\":[{\"name\":\"filter\",\"type\":\"function\"}]},{\"name\":\"dialog\",\"type\":\"function\",\"args\":[{\"name\":\"request\",\"type\":\"object\"}]},{\"name\":\"series\",\"type\":\"function\",\"args\":[{\"name\":\"request\",\"type\":\"object\"}]}]}},{\"displayName\":\"rule\",\"type\":\"string\",\"example\":\"cpu_busy_prod\",\"widget\":\"console\",\"section\":\"widget\"},{\"displayName\":\"scale\",\"type\":\"number\",\"example\":1.5,\"section\":\"widget\"},{\"displayName\":\"scale-x\",\"type\":\"number\",\"example\":0.7,\"section\":\"widget\"},{\"displayName\":\"scale-y\",\"type\":\"number\",\"example\":0.7,\"section\":\"widget\"},{\"displayName\":\"script\",\"type\":\"string\",\"example\":\"console.log(widget.config)\",\"script\":{\"returnValue\":\"void\",\"fields\":[{\"name\":\"widget\",\"type\":\"object\"},{\"name\":\"config\",\"type\":\"object\"}]}},{\"displayName\":\"selector-mode\",\"section\":\"widget\",\"widget\":\"pie\",\"type\":\"enum\",\"example\":\"highlight\",\"enum\":[\"highlight\",\"expand\"]},{\"displayName\":\"series\",\"widget\":\"graph\",\"section\":[\"node\",\"link\"],\"type\":\"string\",\"example\":\"series-1\"},{\"displayName\":\"series-labels\",\"widget\":\"pie\",\"section\":\"series\",\"type\":\"string\",\"example\":\"inside\",\"defaultValue\":\"none\",\"script\":{\"returnValue\":\"string\",\"fields\":[{\"name\":\"metric\",\"type\":\"string\"},{\"name\":\"entity\",\"type\":\"string\"},{\"name\":\"tags\",\"type\":\"object\"},{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"previous\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"movavg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"count\",\"type\":\"number\",\"required\":true},{\"name\":\"minCount\",\"type\":\"number\"}]},{\"name\":\"detail\",\"type\":\"function\"},{\"name\":\"forecast\",\"type\":\"function\"},{\"name\":\"forecast_deviation\",\"type\":\"function\"},{\"name\":\"lower_confidence\",\"type\":\"function\"},{\"name\":\"upper_confidence\",\"type\":\"function\"},{\"name\":\"percentile\",\"type\":\"function\",\"args\":[{\"name\":\"percentage\",\"type\":\"number\",\"required\":true}]},{\"name\":\"max\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"maximum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"min\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"minimum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"avg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"average\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"sum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"delta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"counter\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"last\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"first\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"min_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"max_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"count\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"threshold_count\",\"type\":\"function\"},{\"name\":\"threshold_percent\",\"type\":\"function\"},{\"name\":\"threshold_duration\",\"type\":\"function\"},{\"name\":\"time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"bottom\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"top\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"meta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"entityTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"metricTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"median\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"series\",\"type\":\"array\"}]}},{\"displayName\":\"series-limit\",\"type\":\"integer\",\"section\":\"series\",\"example\":10},{\"displayName\":\"series-type\",\"widget\":\"chart\",\"type\":\"string\",\"section\":\"series\",\"example\":\"s3\"},{\"displayName\":\"series-value\",\"type\":\"string\",\"example\":\"avg()\",\"section\":\"column\",\"script\":{\"returnValue\":\"number\",\"fields\":[{\"name\":\"metric\",\"type\":\"string\"},{\"name\":\"entity\",\"type\":\"string\"},{\"name\":\"tags\",\"type\":\"object\"},{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"previous\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"movavg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"count\",\"type\":\"number\",\"required\":true},{\"name\":\"minCount\",\"type\":\"number\"}]},{\"name\":\"detail\",\"type\":\"function\"},{\"name\":\"forecast\",\"type\":\"function\"},{\"name\":\"forecast_deviation\",\"type\":\"function\"},{\"name\":\"lower_confidence\",\"type\":\"function\"},{\"name\":\"upper_confidence\",\"type\":\"function\"},{\"name\":\"percentile\",\"type\":\"function\",\"args\":[{\"name\":\"percentage\",\"type\":\"number\",\"required\":true}]},{\"name\":\"max\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"maximum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"min\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"minimum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"avg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"average\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"sum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"delta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"counter\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"last\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"first\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"min_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"max_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"count\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"threshold_count\",\"type\":\"function\"},{\"name\":\"threshold_percent\",\"type\":\"function\"},{\"name\":\"threshold_duration\",\"type\":\"function\"},{\"name\":\"time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"bottom\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"top\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"meta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"entityTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"metricTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"median\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"series\",\"type\":\"array\"}]}},{\"displayName\":\"server-aggregate\",\"type\":\"boolean\",\"example\":true,\"section\":\"series\"},{\"displayName\":\"severity\",\"type\":\"integer\",\"widget\":\"console\",\"section\":\"widget\",\"example\":6,\"minValue\":0,\"maxValue\":7},{\"displayName\":\"severity-style\",\"multiLine\":true,\"type\":\"enum\",\"example\":\"row\",\"widget\":\"console\",\"section\":\"widget\",\"enum\":[\"row\",\"column\"]},{\"displayName\":\"show-tag-names\",\"type\":\"boolean\",\"example\":true,\"section\":\"widget\",\"defaultValue\":false},{\"displayName\":\"size\",\"type\":\"string\",\"defaultValue\":\"1\",\"example\":\"3\",\"widget\":\"treemap\",\"script\":{\"returnValue\":\"number\",\"fields\":[{\"name\":\"metric\",\"type\":\"string\"},{\"name\":\"entity\",\"type\":\"string\"},{\"name\":\"tags\",\"type\":\"object\"},{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"previous\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"movavg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"count\",\"type\":\"number\",\"required\":true},{\"name\":\"minCount\",\"type\":\"number\"}]},{\"name\":\"detail\",\"type\":\"function\"},{\"name\":\"forecast\",\"type\":\"function\"},{\"name\":\"forecast_deviation\",\"type\":\"function\"},{\"name\":\"lower_confidence\",\"type\":\"function\"},{\"name\":\"upper_confidence\",\"type\":\"function\"},{\"name\":\"percentile\",\"type\":\"function\",\"args\":[{\"name\":\"percentage\",\"type\":\"number\",\"required\":true}]},{\"name\":\"max\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"maximum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"min\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"minimum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"avg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"average\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"sum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"delta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"counter\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"last\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"first\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"min_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"max_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"count\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"threshold_count\",\"type\":\"function\"},{\"name\":\"threshold_percent\",\"type\":\"function\"},{\"name\":\"threshold_duration\",\"type\":\"function\"},{\"name\":\"time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"bottom\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"top\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"meta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"entityTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"metricTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"median\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"series\",\"type\":\"array\"}]}},{\"displayName\":\"size-name\",\"type\":\"string\",\"example\":\"sum\",\"widget\":\"treemap\",\"section\":\"widget\"},{\"displayName\":\"smooth\",\"type\":\"enum\",\"section\":\"series\",\"example\":\"AVG\",\"enum\":[\"AVG\",\"EMA\",\"WAVG\",\"WTAVG\"]},{\"displayName\":\"smooth-count\",\"type\":\"integer\",\"example\":50,\"minValue\":0,\"section\":\"series\"},{\"displayName\":\"smooth-factor\",\"type\":\"number\",\"section\":\"series\",\"example\":0.5,\"minValue\":0,\"maxValue\":1},{\"displayName\":\"smooth-incomplete-value\",\"type\":\"string\",\"defaultValue\":\"null\",\"example\":\"NaN\"},{\"displayName\":\"smooth-interval\",\"type\":\"interval\",\"example\":\"15 minute\",\"section\":\"series\"},{\"displayName\":\"smooth-minimum-count\",\"type\":\"integer\",\"section\":\"series\",\"example\":10},{\"displayName\":\"smooth-range\",\"type\":\"integer\",\"section\":\"series\",\"example\":60000},{\"displayName\":\"sort\",\"section\":\"widget\",\"type\":\"string\",\"example\":\"metric, value desc\"},{\"displayName\":\"source\",\"widget\":\"console\",\"section\":\"widget\",\"type\":\"enum\",\"defaultValue\":\"alert\",\"example\":\"message\",\"enum\":[\"message\",\"alert\"]},{\"displayName\":\"sql\",\"section\":\"widget\",\"example\":\"SELECT time, entity, value FROM cpu_busy WHERE time > now - 5 * minute\",\"multiLine\":true,\"type\":\"string\"},{\"displayName\":\"stack\",\"widget\":\"bar\",\"type\":\"boolean\",\"section\":\"widget\",\"example\":false,\"defaultValue\":true,\"override\":{\"[widget == 'chart']\":{\"deprecated\":\"This setting is deprecated in timechart. Use `mode = stack` instead\"}}},{\"displayName\":\"start-time\",\"type\":\"date\",\"example\":\"2017-04-01T10:15:00Z\",\"section\":\"widget\"},{\"displayName\":\"start-working-minutes\",\"section\":\"series\",\"type\":\"integer\",\"defaultValue\":0,\"minValue\":0,\"example\":10},{\"displayName\":\"statistic\",\"type\":\"enum\",\"example\":\"avg\",\"section\":\"series\",\"enum\":[\"count\",\"detail\",\"min\",\"max\",\"sum\",\"avg\",\"percentile\\\\((\\\\d{1,2}(\\\\.\\\\d)?|100)\\\\)\",\"median\",\"standard_deviation\",\"first\",\"last\",\"delta\",\"counter\",\"wtavg\",\"wavg\",\"min_value_time\",\"max_value_time\",\"threshold_count\",\"threshold_duration\",\"threshold_percent\"]},{\"displayName\":\"statistics\",\"type\":\"enum\",\"example\":\"last\",\"section\":\"series\",\"enum\":[\"count\",\"min\",\"max\",\"sum\",\"avg\",\"percentile\\\\((\\\\d{1,2}(\\\\.\\\\d)?|100)\\\\)\",\"median\",\"standard_deviation\",\"first\",\"last\",\"delta\",\"counter\",\"wtavg\",\"wavg\",\"min_value_time\",\"max_value_time\",\"threshold_count\",\"threshold_duration\",\"threshold_percent\"]},{\"displayName\":\"step-line\",\"widget\":\"chart\",\"section\":\"series\",\"type\":\"boolean\",\"example\":true},{\"displayName\":\"style\",\"multiLine\":true,\"type\":\"string\",\"example\":\"stroke-width: 4; color: green\"},{\"displayName\":\"summarize-period\",\"type\":\"interval\",\"example\":\"1 hour\",\"enum\":[\"auto\"]},{\"displayName\":\"summarize-statistic\",\"type\":\"enum\",\"example\":\"percentile(75)\",\"enum\":[\"avg\",\"max\",\"min\",\"sum\",\"count\",\"last\",\"percentile\\\\((\\\\d{1,2}(\\\\.\\\\d)?|100)\\\\)\",\"median\"]},{\"displayName\":\"table\",\"type\":\"string\",\"example\":\"klz_disk\",\"section\":\"series\",\"excludes\":[\"metric\"]},{\"displayName\":\"table-header-style\",\"multiLine\":true,\"section\":\"widget\",\"type\":\"string\",\"example\":\"display: none\"},{\"displayName\":\"tag\",\"type\":\"string\",\"section\":\"column\",\"example\":\"file_system\"},{\"displayName\":\"tag-expression\",\"type\":\"string\",\"section\":\"series\",\"example\":\"tags.file_system NOT LIKE '/m*'\"},{\"displayName\":\"tag-offset\",\"type\":\"integer\",\"widget\":\"property\",\"section\":\"property\",\"example\":15000},{\"displayName\":\"tags-dropdowns\",\"section\":\"widget\",\"type\":\"boolean\",\"example\":true},{\"displayName\":\"tags-dropdowns-style\",\"multiLine\":true,\"type\":\"string\",\"section\":\"widget\",\"example\":\"max-width: 150px\"},{\"displayName\":\"tension\",\"widget\":\"graph\",\"type\":\"number\",\"minValue\":0,\"maxValue\":1,\"defaultValue\":0.9,\"example\":0.8},{\"displayName\":\"text\",\"type\":\"string\",\"example\":\"Option 3\"},{\"displayName\":\"thresholds\",\"type\":\"string\",\"example\":\"0, 50, 90, 100\",\"section\":\"series\",\"widget\":[\"gauge\",\"treemap\",\"calendar\"],\"script\":{\"returnValue\":\"number\",\"fields\":[{\"name\":\"metric\",\"type\":\"string\"},{\"name\":\"entity\",\"type\":\"string\"},{\"name\":\"tags\",\"type\":\"object\"},{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"previous\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"movavg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"count\",\"type\":\"number\",\"required\":true},{\"name\":\"minCount\",\"type\":\"number\"}]},{\"name\":\"detail\",\"type\":\"function\"},{\"name\":\"forecast\",\"type\":\"function\"},{\"name\":\"forecast_deviation\",\"type\":\"function\"},{\"name\":\"lower_confidence\",\"type\":\"function\"},{\"name\":\"upper_confidence\",\"type\":\"function\"},{\"name\":\"percentile\",\"type\":\"function\",\"args\":[{\"name\":\"percentage\",\"type\":\"number\",\"required\":true}]},{\"name\":\"max\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"maximum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"min\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"minimum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"avg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"average\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"sum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"delta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"counter\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"last\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"first\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"min_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"max_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"count\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"threshold_count\",\"type\":\"function\"},{\"name\":\"threshold_percent\",\"type\":\"function\"},{\"name\":\"threshold_duration\",\"type\":\"function\"},{\"name\":\"time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"bottom\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"top\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"meta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"entityTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"metricTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"median\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"series\",\"type\":\"array\"}]}},{\"displayName\":\"ticks\",\"type\":\"integer\",\"section\":\"widget\",\"example\":10,\"defaultValue\":5},{\"displayName\":\"ticks-right\",\"type\":\"integer\",\"section\":\"widget\",\"example\":10,\"defaultValue\":5},{\"displayName\":\"ticks-time\",\"type\":\"integer\",\"section\":\"widget\",\"example\":20,\"defaultValue\":10},{\"displayName\":\"time-offset\",\"type\":\"interval\",\"example\":\"-200 day\",\"widget\":\"chart\",\"section\":\"series\"},{\"displayName\":\"timespan\",\"section\":\"widget\",\"type\":\"interval\",\"defaultValue\":\"1 hour\",\"example\":\"5 minute\"},{\"displayName\":\"time-zone\",\"type\":\"string\",\"section\":\"widget\",\"example\":\"UTC\"},{\"displayName\":\"title\",\"type\":\"string\",\"example\":\"My portal\"},{\"displayName\":\"tooltip\",\"type\":\"string\",\"multiLine\":true,\"example\":\"NURSWGVML007\"},{\"displayName\":\"top-axis\",\"widget\":\"histogram\",\"section\":\"widget\",\"type\":\"enum\",\"example\":\"percentiles\",\"defaultValue\":\"none\",\"enum\":[\"percentiles\",\"none\",\"values\"]},{\"displayName\":\"top-units\",\"type\":\"number\",\"section\":\"widget\",\"example\":1,\"minValue\":0},{\"displayName\":\"total-size\",\"widget\":\"treemap\",\"section\":\"widget\",\"type\":\"integer\",\"example\":70},{\"displayName\":\"total-value\",\"widget\":\"pie\",\"section\":\"widget\",\"type\":\"string\",\"example\":\"value('007-root') + value('006-root')\",\"script\":{\"returnValue\":\"number\",\"fields\":[{\"name\":\"metric\",\"type\":\"string\"},{\"name\":\"entity\",\"type\":\"string\"},{\"name\":\"tags\",\"type\":\"object\"},{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"previous\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"movavg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"count\",\"type\":\"number\",\"required\":true},{\"name\":\"minCount\",\"type\":\"number\"}]},{\"name\":\"detail\",\"type\":\"function\"},{\"name\":\"forecast\",\"type\":\"function\"},{\"name\":\"forecast_deviation\",\"type\":\"function\"},{\"name\":\"lower_confidence\",\"type\":\"function\"},{\"name\":\"upper_confidence\",\"type\":\"function\"},{\"name\":\"percentile\",\"type\":\"function\",\"args\":[{\"name\":\"percentage\",\"type\":\"number\",\"required\":true}]},{\"name\":\"max\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"maximum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"min\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"minimum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"avg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"average\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"sum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"delta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"counter\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"last\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"first\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"min_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"max_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"count\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"threshold_count\",\"type\":\"function\"},{\"name\":\"threshold_percent\",\"type\":\"function\"},{\"name\":\"threshold_duration\",\"type\":\"function\"},{\"name\":\"time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"bottom\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"top\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"meta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"entityTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"metricTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"median\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"series\",\"type\":\"array\"}]}},{\"displayName\":\"transformation-order\",\"type\":\"string\",\"defaultValue\":\"none\",\"section\":\"series\",\"example\":\"aggregate, interpolate\",\"enum\":[\"none\",\"interpolate\",\"group\",\"rate\",\"aggregate\",\"smooth\",\"downsample\",\"forecast\"]},{\"displayName\":\"transpose\",\"type\":\"boolean\",\"section\":\"widget\",\"example\":true,\"defaultValue\":false},{\"displayName\":\"type\",\"type\":\"enum\",\"example\":\"chart\",\"enum\":[\"chart\",\"gauge\",\"treemap\",\"bar\",\"calendar\",\"histogram\",\"box\",\"pie\",\"graph\",\"text\",\"page\",\"console\",\"table\",\"property\"],\"override\":{\"[section == 'property' || section == 'properties']\":{\"enum\":[\".*\"]}}},{\"displayName\":\"unscale\",\"defaultValue\":\".event\",\"type\":\"string\",\"section\":\"widget\",\"widget\":\"page\",\"example\":\".event, .location\"},{\"displayName\":\"update-interval\",\"section\":\"widget\",\"type\":\"interval\",\"defaultValue\":\"1 minute\",\"example\":\"5 minute\"},{\"displayName\":\"url\",\"type\":\"string\",\"section\":\"widget\",\"example\":\"http://atsd_hostname:port\"},{\"displayName\":\"url-parameters\",\"type\":\"string\",\"section\":\"widget\",\"example\":\"db=12&adapter=7\"},{\"displayName\":\"value\",\"type\":\"string\",\"example\":\"Math.max(0, value('alias'))\",\"multiLine\":true,\"section\":\"option\",\"script\":{\"returnValue\":\"number\",\"fields\":[{\"name\":\"metric\",\"type\":\"string\"},{\"name\":\"entity\",\"type\":\"string\"},{\"name\":\"tags\",\"type\":\"object\"},{\"name\":\"value\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"previous\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"movavg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"count\",\"type\":\"number\",\"required\":true},{\"name\":\"minCount\",\"type\":\"number\"}]},{\"name\":\"detail\",\"type\":\"function\"},{\"name\":\"forecast\",\"type\":\"function\"},{\"name\":\"forecast_deviation\",\"type\":\"function\"},{\"name\":\"lower_confidence\",\"type\":\"function\"},{\"name\":\"upper_confidence\",\"type\":\"function\"},{\"name\":\"percentile\",\"type\":\"function\",\"args\":[{\"name\":\"percentage\",\"type\":\"number\",\"required\":true},{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"period\",\"type\":\"interval\",\"required\":false}]},{\"name\":\"max\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"maximum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"min\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"minimum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"count\",\"type\":\"number\"}]},{\"name\":\"avg\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"average\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"sum\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"delta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"counter\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"last\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"first\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"min_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"max_value_time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"count\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"threshold_count\",\"type\":\"function\"},{\"name\":\"threshold_percent\",\"type\":\"function\"},{\"name\":\"threshold_duration\",\"type\":\"function\"},{\"name\":\"time\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"bottom\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"top\",\"type\":\"function\",\"args\":[{\"name\":\"rank\",\"type\":\"integer\",\"required\":true},{\"name\":\"getValue\",\"type\":\"function\"}]},{\"name\":\"meta\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"}]},{\"name\":\"entityTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"metricTag\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\",\"required\":true},{\"name\":\"tagName\",\"type\":\"string\",\"required\":true}]},{\"name\":\"median\",\"type\":\"function\",\"args\":[{\"name\":\"alias\",\"type\":\"string\"},{\"name\":\"period\",\"type\":\"interval\"}]},{\"name\":\"series\",\"type\":\"array\"}]}},{\"displayName\":\"vertical-grid\",\"section\":\"widget\",\"type\":\"string\",\"example\":\"none\"},{\"displayName\":\"widgets-per-row\",\"type\":\"integer\",\"section\":\"group\",\"example\":3},{\"displayName\":\"width\",\"widget\":\"graph\",\"section\":\"widget\",\"type\":\"string\",\"example\":\"40%\"},{\"displayName\":\"width-units\",\"type\":\"number\",\"example\":2,\"minValue\":0,\"section\":\"widget\"},{\"displayName\":\"zoom-svg\",\"widget\":\"page\",\"section\":\"widget\",\"type\":\"number\",\"minValue\":0,\"example\":1.2}]};\n\n//# sourceURL=webpack:///./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/dictionary.json?");

/***/ }),

/***/ "./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/completionProvider.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/completionProvider.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/axibasecharts-syntax/server/node_modules/vscode-languageserver-types/lib/esm/main.js\"), __webpack_require__(/*! ./resources */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/resources.js\"), __webpack_require__(/*! ./setting */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/setting.js\"), __webpack_require__(/*! ./util */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/util.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, vscode_languageserver_types_1, resources_1, setting_1, util_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.snippets = __webpack_require__(/*! ../../snippets/snippets.json */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/snippets/snippets.json\");\n    /**\n     * Provides dynamic completion items.\n     */\n    class CompletionProvider {\n        constructor(textDocument, position) {\n            const text = textDocument.getText().substr(0, textDocument.offsetAt(position));\n            this.text = util_1.deleteScripts(util_1.deleteComments(text));\n            let textList = this.text.split(\"\\n\");\n            this.currentLine = textList[textList.length - 1];\n        }\n        /**\n         * Creates completion items\n         */\n        getCompletionItems() {\n            let match = /^\\s*(\\S+)\\s*=\\s*/.exec(this.currentLine);\n            if (match) {\n                // completion requested at assign stage, i. e. type = <Ctrl + space>\n                return this.completeSettingValue(match[1]);\n            }\n            else {\n                // completion requested at start of line (supposed that line is empty)\n                return this.completeSnippets().concat(this.completeIf(), this.completeFor(), this.completeSettingName());\n            }\n        }\n        /**\n         * Creates a completion item containing `for` loop.\n         * `in` statement is generated based on previously declared lists and vars if any.\n         * Variable name is generated based on `in` statement.\n         * @returns completion item\n         */\n        completeFor() {\n            const regexp = /^[ \\t]*(?:list|var)[ \\t]+(\\S+)[ \\t]*=/mg;\n            let match = regexp.exec(this.text);\n            let lastMatch;\n            while (match) {\n                lastMatch = match;\n                match = regexp.exec(this.text);\n            }\n            let collection = \"collection\";\n            let item = \"item\";\n            if (lastMatch) {\n                collection = lastMatch[1];\n                if (collection.endsWith(\"s\")) {\n                    item = collection.substr(0, collection.lastIndexOf(\"s\"));\n                }\n            }\n            const completion = vscode_languageserver_types_1.CompletionItem.create(\"for\");\n            completion.insertText = `\nfor \\${1:${item}} in \\${2:${collection}}\n  \\${3:entity = @{\\${1:${item}}}}\n  \\${0}\nendfor`;\n            completion.detail = \"For loop\";\n            completion.kind = vscode_languageserver_types_1.CompletionItemKind.Keyword;\n            completion.insertTextFormat = vscode_languageserver_types_1.InsertTextFormat.Snippet;\n            return completion;\n        }\n        /**\n         * Creates an array of completion items containing `if` statement.\n         * Conditions are generated based on previously declared `for` loops.\n         * @returns array containing variants of `if` statement\n         */\n        completeIf() {\n            const regexp = /^[ \\t]*for[ \\t]+(\\w+)[ \\t]+in/img;\n            const endFor = /^[ \\t]*endfor/img;\n            let match = regexp.exec(this.text);\n            let lastMatch;\n            while (match) {\n                const end = endFor.exec(this.text);\n                if (!end || end.index < match.index) {\n                    lastMatch = match;\n                }\n                match = regexp.exec(this.text);\n            }\n            let item = \"item\";\n            if (lastMatch) {\n                item = lastMatch[1];\n            }\n            const ifString = vscode_languageserver_types_1.CompletionItem.create(\"if string\");\n            ifString.detail = \"if item equals text\";\n            ifString.insertText = `\nif @{\\${1:${item}}} \\${2:==} \\${3:\"item1\"}\n  \\${4:entity} = \\${5:\"item2\"}\nelse\n  \\${4:entity} = \\${6:\"item3\"}\nendif\n\\${0}`;\n            const ifNumber = vscode_languageserver_types_1.CompletionItem.create(\"if number\");\n            ifNumber.insertText = `\nif @{\\${1:${item}}} \\${2:==} \\${3:5}\n  \\${4:entity} = \\${5:\"item1\"}\nelse\n  \\${4:entity} = \\${6:\"item2\"}\nendif\n\\${0}`;\n            ifNumber.detail = \"if item equals number\";\n            const ifElseIf = vscode_languageserver_types_1.CompletionItem.create(\"if else if\");\n            ifElseIf.detail = \"if item equals number else if\";\n            ifElseIf.insertText = `\nif @{\\${1:${item}}} \\${2:==} \\${3:5}\n  \\${4:entity} = \\${5:\"item1\"}\nelseif @{\\${1:${item}}} \\${6:==} \\${7:6}\n  \\${4:entity} = \\${8:\"item2\"}\nelse\n  \\${4:entity} = \\${9:\"item3\"}\nendif\n\\${0}`;\n            return [ifString, ifNumber, ifElseIf].map((completion) => {\n                completion.insertTextFormat = vscode_languageserver_types_1.InsertTextFormat.Snippet;\n                completion.kind = vscode_languageserver_types_1.CompletionItemKind.Snippet;\n                return completion;\n            });\n        }\n        /**\n         * Creates an array of completion items containing setting names.\n         * @returns array containing snippets\n         */\n        completeSettingName() {\n            const items = [];\n            for (let [, value] of resources_1.settingsMap) {\n                items.push(this.fillCompletionItem({\n                    detail: `${value.description ? value.description + \"\\n\" : \"\"}Example: ${value.example}`,\n                    insertText: `${value.displayName} = `,\n                    kind: vscode_languageserver_types_1.CompletionItemKind.Field,\n                    name: value.displayName\n                }));\n            }\n            return items;\n        }\n        /**\n         * Creates an array of completion items containing possible values for settings.\n         * @param settingName name of the setting, for example \"colors\"\n         * @returns array containing completions\n         */\n        completeSettingValue(settingName) {\n            const setting = util_1.getSetting(settingName);\n            if (!setting) {\n                return [];\n            }\n            switch (setting.type) {\n                case \"string\": {\n                    return this.completeStringSettingValue(setting);\n                }\n                case \"number\":\n                case \"integer\":\n                    if (setting.example) {\n                        return [this.fillCompletionItem({ insertText: setting.example.toString() })];\n                    }\n                    break;\n                case \"boolean\": {\n                    return this.getItemsArray([\"true\", \"false\"]);\n                }\n                case \"enum\": {\n                    return this.getItemsArray(setting.enum.map(el => el.replace(/percentile\\\\.+/, \"percentile(n)\")));\n                }\n                case \"interval\": {\n                    return this.getItemsArray(setting_1.intervalUnits, ...setting.enum);\n                }\n                case \"date\": {\n                    return this.getItemsArray(setting_1.calendarKeywords, new Date().toISOString());\n                }\n                default: {\n                    return [];\n                }\n            }\n            return [];\n        }\n        /**\n         * Creates an array of completion items containing snippets.\n         * @returns array containing snippets\n         */\n        completeSnippets() {\n            const items = Object.keys(exports.snippets).map((key) => {\n                const insertText = (typeof exports.snippets[key].body === \"string\") ? exports.snippets[key].body : exports.snippets[key].body.join(\"\\n\");\n                return this.fillCompletionItem({\n                    insertText, detail: exports.snippets[key].description,\n                    name: key, insertTextFormat: vscode_languageserver_types_1.InsertTextFormat.Snippet, kind: vscode_languageserver_types_1.CompletionItemKind.Keyword\n                });\n            });\n            return items;\n        }\n        /**\n         * Creates an array of completion items containing possible values for settings with type = \"string\".\n         * @param setting the setting\n         * @returns array containing completions\n         */\n        completeStringSettingValue(setting) {\n            let valueItems = [];\n            let scriptItems = [];\n            if (setting.possibleValues) {\n                valueItems = setting.possibleValues.map(v => this.fillCompletionItem({ insertText: v.value, detail: v.detail }));\n            }\n            if (setting.script) {\n                setting.script.fields.forEach((field) => {\n                    if (field.type === \"function\") {\n                        let itemFields = { insertText: \"\", kind: vscode_languageserver_types_1.CompletionItemKind.Function };\n                        if (field.args) {\n                            let requiredArgs = field.args.filter(a => a.required);\n                            let optionalArgs = field.args.filter(a => !a.required);\n                            let requiredArgsString = `${requiredArgs.map(field => field.name).join(\", \")}`;\n                            itemFields.insertText = `${field.name}${requiredArgsString !== \"\" ?\n                                \"(\" + requiredArgsString + \")\" : \"\"}`;\n                            scriptItems.push(this.fillCompletionItem(itemFields));\n                            let args = \"\";\n                            for (let arg of optionalArgs) {\n                                args = `${args !== \"\" ? args + \", \" : \"\"}${arg.name}`;\n                                itemFields.insertText = `${field.name}(${requiredArgsString !== \"\" ?\n                                    requiredArgsString + \", \" : \"\"}${args})`;\n                                scriptItems.push(this.fillCompletionItem(itemFields));\n                            }\n                        }\n                        else {\n                            itemFields.insertText = field.name;\n                            scriptItems.push(this.fillCompletionItem(itemFields));\n                        }\n                    }\n                    else {\n                        scriptItems.push(this.fillCompletionItem({\n                            insertText: field.name,\n                            detail: `Type: ${field.type}`\n                        }));\n                    }\n                });\n            }\n            if (!setting.possibleValues && setting.example !== \"\") {\n                valueItems = [this.fillCompletionItem({\n                        insertText: setting.example.toString(),\n                        kind: vscode_languageserver_types_1.CompletionItemKind.Field\n                    })];\n            }\n            return valueItems.concat(scriptItems);\n        }\n        /**\n         * Set fields for CompletionItem\n         * @param insertText text to be inserted with completion request\n         * @returns completion\n         */\n        fillCompletionItem(itemFields) {\n            let item = vscode_languageserver_types_1.CompletionItem.create(itemFields.name || itemFields.insertText);\n            item.insertTextFormat = itemFields.insertTextFormat || vscode_languageserver_types_1.InsertTextFormat.PlainText;\n            item.kind = itemFields.kind || vscode_languageserver_types_1.CompletionItemKind.Value;\n            item.insertText = itemFields.insertText;\n            item.detail = itemFields.detail || itemFields.insertText;\n            item.sortText = item.kind.toString();\n            return item;\n        }\n        /**\n         * Сonverts the source array to array of completions\n         * @param processedArray the source array\n         * @param additionalStrings the strings to be processed and added to completions\n         * @returns completions\n         */\n        getItemsArray(processedArray, ...additionalStrings) {\n            let items = processedArray.map(el => this.fillCompletionItem({ insertText: el }));\n            for (let s of additionalStrings) {\n                items.push(this.fillCompletionItem({ insertText: s }));\n            }\n            return items;\n        }\n    }\n    exports.CompletionProvider = CompletionProvider;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/completionProvider.js?");

/***/ }),

/***/ "./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/defaultSetting.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/defaultSetting.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./setting */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/setting.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, setting_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * Holds the description of a setting and corresponding methods.\n     */\n    class DefaultSetting {\n        constructor(setting) {\n            /**\n             * A brief description for the setting\n             */\n            this.description = \"\";\n            /**\n             * User-friendly setting name like 'refresh-interval'\n             */\n            this.displayName = \"\";\n            /**\n             * Array containing all possible values. RegExp is supported\n             */\n            this.enum = [];\n            /**\n             * Example value for the setting. Should not equal to the default value\n             */\n            this.example = \"\";\n            /**\n             * The settings in this array must not be declared simultaneously with the current\n             */\n            this.excludes = [];\n            /**\n             * The maximum allowed value for the setting\n             */\n            this.maxValue = Infinity;\n            /**\n             * The minimum allowed value for the setting\n             */\n            this.minValue = -Infinity;\n            /**\n             * Is the setting allowed to be repeated\n             */\n            this.multiLine = false;\n            /**\n             * Inner setting name. Lower-cased, without any symbols except alphabetical.\n             * For example, \"refreshinterval\"\n             */\n            this.name = \"\";\n            /**\n             * The type of the setting.\n             * Possible values: string, number, integer, boolean, enum, interval, date\n             */\n            this.type = \"\";\n            /**\n             * Type of the widget were setting is applicable, for example,\n             * gradient-count is applicable for gauge, treemap and calendar.\n             */\n            this.widget = [];\n            this.overrideCache = [];\n            Object.assign(this, setting);\n            this.enum = this.enum.map((v) => v.toLowerCase());\n            this.name = DefaultSetting.clearSetting(this.displayName);\n            if (this.override) {\n                for (const scope in this.override) {\n                    if (this.override.hasOwnProperty(scope)) {\n                        this.overrideCache.push({\n                            setting: this.override[scope],\n                            test: this.getOverrideTest(scope),\n                        });\n                    }\n                }\n            }\n        }\n        /**\n         * Create an instance of setting with matching overrides applied.\n         * If no override can be applied returns this instanse.\n         * @param scope Configuration scope where setting exist\n         */\n        applyScope(scope) {\n            if (this.override == null) {\n                return this;\n            }\n            let matchingOverrides = this.overrideCache\n                .filter((override) => override.test(scope))\n                .map((override) => override.setting);\n            if (matchingOverrides.length > 0) {\n                let copy = Object.create(setting_1.Setting.prototype);\n                return Object.assign(copy, this, ...matchingOverrides);\n            }\n            else {\n                return this;\n            }\n        }\n        /**\n         * Generates a string containing fully available information about the setting\n         */\n        toString() {\n            // TODO: describe a script which is allowed as the setting value\n            if (this.description == null) {\n                return \"\";\n            }\n            let result = `${this.description}  \\n\\n`;\n            if (this.example != null && this.example !== \"\") {\n                result += `Example: ${this.displayName} = ${this.example}  \\n`;\n            }\n            if (this.type != null && this.type !== \"\") {\n                result += `Type: ${this.type}  \\n`;\n            }\n            if (this.defaultValue != null && this.defaultValue !== \"\") {\n                result += `Default value: ${this.defaultValue}  \\n`;\n            }\n            if (this.enum == null && this.enum.length === 0) {\n                result += `Possible values: ${this.enum.join()}  \\n`;\n            }\n            if (this.excludes != null && this.excludes.length !== 0) {\n                result += `Can not be specified with: ${this.excludes.join()}  \\n`;\n            }\n            if (this.maxValue != null && this.maxValue !== Infinity) {\n                result += `Maximum: ${this.maxValue}  \\n`;\n            }\n            if (this.minValue != null && this.minValue !== -Infinity) {\n                result += `Minimum: ${this.minValue}  \\n`;\n            }\n            if (this.section != null && this.section.length !== 0) {\n                result += `Allowed in section: ${this.section}  \\n`;\n            }\n            let widgets = \"all\";\n            if (typeof this.widget !== \"string\" && this.widget.length > 0) {\n                widgets = this.widget.join(\", \");\n            }\n            else if (this.widget.length > 0) {\n                widgets = this.widget;\n            }\n            result += `Allowed in widgets: ${widgets}  \\n`;\n            return result;\n        }\n        getOverrideTest(scopeSrc) {\n            let scopeKeys = [\"widget\", \"section\"];\n            let scopeSrcExtracted = /^\\[(.*)\\]$/.exec(scopeSrc);\n            if (scopeSrcExtracted == null) {\n                throw new Error(\"Wrong override scope format\");\n            }\n            let source = `return !!(${scopeSrcExtracted[1]});`;\n            let compiledScope = new Function(scopeKeys.join(), source);\n            return (scope) => {\n                try {\n                    let values = scopeKeys.map((key) => scope[key]);\n                    return compiledScope.apply(void 0, values);\n                }\n                catch (error) {\n                    console.error(`In '${scopeSrc}' :: ${error}`);\n                }\n            };\n        }\n    }\n    /**\n     * Lowercases the string and deletes non-alphabetic characters\n     * @param str string to be cleared\n     * @returns cleared string\n     */\n    DefaultSetting.clearSetting = (str) => str.toLowerCase().replace(/[^a-z]/g, \"\");\n    /**\n     * Lowercases the value of setting\n     * @param str string to be cleared\n     * @returns cleared string\n     */\n    DefaultSetting.clearValue = (str) => str.toLowerCase();\n    exports.DefaultSetting = DefaultSetting;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/defaultSetting.js?");

/***/ }),

/***/ "./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/messageUtil.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/messageUtil.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * Creates a error message for unknown setting or value.\n     * @param found the variant found in the user's text\n     * @returns message with or without a suggestion\n     */\n    exports.unknownToken = (found) => `${found} is unknown.`;\n    exports.deprecatedTagSection = `Replace [tag] sections with [tags].\nEnclose the tag name in double quotes in case it contains special characters.\n\n[tag]\n  name = k\n  value = v\n[tag]\n  name = my column\n  value = my value\n\n[tags]\n  k = v\n  \"my column\" = my value\n`;\n    exports.settingsWithWhitespaces = (found) => `The setting \"${found}\" contains whitespaces.\\nReplace spaces with hyphens.`;\n    exports.tagNameWithWhitespaces = (found) => `The tag name ${found} contains whitespaces. Wrap it in double quotes.`;\n    exports.settingNameInTags = (found) => `${found} is interpreted as a series tag and is sent to the\\nserver. ` +\n        `Move the setting outside of the [tags] section or\\n` +\n        \"enclose in double-quotes to send it to the server without\\na warning.\";\n    exports.uselessScope = (found, msg) => `${found} setting is appplied only if ${msg}.`;\n    exports.incorrectColors = (found, msg) => `Number of colors (if specified) must be equal to\\nnumber of thresholds minus 1.\nCurrent: ${found}, expected: ${msg}`;\n    exports.illegalSetting = (found) => `${found} setting is not allowed here.`;\n    /**\n     * RegExp for: 'csv from <url>'\n     */\n    const CSV_FROM_URL_MISSING_NAME_PATTERN = /(^[ \\t]*csv[ \\t]+)[ \\t]*(from)/;\n    /**\n     * If SCV pattern didn't match any known RegExp, compose error message\n     * @param line line of code instruction\n     * @returns csv error message\n     */\n    exports.getCsvErrorMessage = (line) => {\n        return (CSV_FROM_URL_MISSING_NAME_PATTERN.test(line)) ? `<name> in 'csv <name> from <url>' is missing` :\n            `The line should contain a '=' or 'from' keyword`;\n    };\n    exports.noRequiredSetting = (dependent, required) => `${required} is required if ${dependent} is specified`;\n    exports.noRequiredSettings = (dependent, required) => `${dependent} has effect only with one of the following:\n * ${required.join(\"\\n * \")}`;\n    exports.noMatching = (dependent, required) => `${dependent} has no matching ${required}`;\n    exports.lineFeedRequired = (dependent) => `A linefeed character after '${dependent}' keyword is required`;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/messageUtil.js?");

/***/ }),

/***/ "./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/resources.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/resources.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(__dirname) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! browser-or-node */ \"./node_modules/axibasecharts-syntax/server/node_modules/browser-or-node/lib/index.js\"), __webpack_require__(/*! ./setting */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/setting.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, browser_or_node_1, setting_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * Reads dictionary from \"dictionary.json\" file\n     * @returns array of settings from the file\n     */\n    function readSettings() {\n        let dictionary;\n        if (browser_or_node_1.isNode) {\n            const path = __webpack_require__(/*! path */ \"path\");\n            const fs = __webpack_require__(/*! fs */ \"fs\");\n            const dictionaryFilePath = path.join(__dirname, \"..\", \"dictionary.json\");\n            const jsonContent = fs.readFileSync(dictionaryFilePath, \"UTF-8\");\n            dictionary = JSON.parse(jsonContent);\n        }\n        else {\n            const jsonContent = __webpack_require__(/*! ../dictionary.json */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/dictionary.json\");\n            dictionary = jsonContent;\n        }\n        return dictionary.settings;\n    }\n    /**\n     * Reads descriptions from \"descriptions.md\" file\n     * @returns map of settings names and descriptions\n     */\n    function readDescriptions() {\n        let content = \"\";\n        if (browser_or_node_1.isNode) {\n            const path = __webpack_require__(/*! path */ \"path\");\n            const fs = __webpack_require__(/*! fs */ \"fs\");\n            const descriptionsPath = path.join(__dirname, \"..\", \"descriptions.md\");\n            content = fs.readFileSync(descriptionsPath, \"UTF-8\");\n        }\n        else {\n            content = __webpack_require__(/*! ../descriptions.md */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/descriptions.md\").default;\n        }\n        const map = new Map();\n        // ## settingname\\n\\nsetting description[url](hello#html)\\n\n        const regExp = /\\#\\# ([a-z]+?)  \\n  \\n([^\\s#][\\S\\s]+?)  (?=\\n  (?:\\n(?=\\#)|$))/g;\n        let match = regExp.exec(content);\n        while (match !== null) {\n            const [, name, description] = match;\n            map.set(name, description);\n            match = regExp.exec(content);\n        }\n        return map;\n    }\n    /**\n     * Tests if the provided setting complete or not\n     * @param setting the setting to test\n     * @returns true, if setting is complete, false otherwise\n     */\n    function isCompleteSetting(setting) {\n        return setting !== undefined &&\n            setting.displayName !== undefined &&\n            setting.type !== undefined &&\n            setting.example !== undefined;\n    }\n    /**\n     * @returns map of settings, key is the setting name, value is instance of Setting\n     */\n    function createSettingsMap() {\n        const descriptions = readDescriptions();\n        const settings = readSettings();\n        const map = new Map();\n        for (const setting of settings) {\n            if (isCompleteSetting(setting)) {\n                const name = setting_1.Setting.clearSetting(setting.displayName);\n                Object.assign(setting, { name, description: descriptions.get(name) });\n                const completeSetting = new setting_1.Setting(setting);\n                map.set(completeSetting.name, completeSetting);\n            }\n        }\n        return map;\n    }\n    exports.settingsMap = createSettingsMap();\n    /**\n     * Map of required settings for each section and their \"aliases\".\n     * For instance, `series` requires `entity`, but `entities` is also allowed.\n     * Additionally, `series` requires `metric`, but `table` with `attribute` is also ok\n     */\n    exports.requiredSectionSettingsMap = new Map([\n        [\"configuration\", {\n                sections: [\n                    [\"group\"],\n                ],\n            }],\n        [\"series\", {\n                settings: [\n                    [\n                        exports.settingsMap.get(\"entity\"), exports.settingsMap.get(\"value\"),\n                        exports.settingsMap.get(\"entities\"), exports.settingsMap.get(\"entitygroup\"),\n                        exports.settingsMap.get(\"entityexpression\"),\n                    ],\n                    [\n                        exports.settingsMap.get(\"metric\"), exports.settingsMap.get(\"value\"),\n                        exports.settingsMap.get(\"table\"), exports.settingsMap.get(\"attribute\"),\n                    ],\n                ],\n            }],\n        [\"group\", {\n                sections: [\n                    [\"widget\"],\n                ],\n            }],\n        [\"widget\", {\n                sections: [\n                    [\"series\"],\n                ],\n                settings: [\n                    [exports.settingsMap.get(\"type\")],\n                ],\n            }],\n        [\"dropdown\", {\n                settings: [\n                    [exports.settingsMap.get(\"onchange\"), exports.settingsMap.get(\"changefield\")],\n                ],\n            }],\n        [\"node\", {\n                settings: [\n                    [exports.settingsMap.get(\"id\")],\n                ],\n            }],\n    ]);\n    exports.widgetRequirementsByType = new Map([\n        [\"console\", {\n                sections: [],\n            }],\n        [\"page\", {\n                sections: [],\n            }],\n        [\"property\", {\n                sections: [\n                    [\"property\"],\n                ],\n            }],\n        [\"graph\", {\n                sections: [\n                    [\"series\", \"node\", \"link\"]\n                ],\n            }],\n    ]);\n    /**\n     * Key is section name, value is array of parent sections for the key section\n     */\n    exports.parentSections = new Map([\n        [\"widget\", [\"group\", \"configuration\"]],\n        [\"series\", [\"widget\", \"link\"]],\n        [\"tag\", [\"series\"]],\n        [\"tags\", [\"series\"]],\n        [\"column\", [\"widget\"]],\n        [\"node\", [\"widget\"]],\n        [\"link\", [\"widget\"]],\n        [\"option\", [\"dropdown\"]]\n    ]);\n    /**\n     * @returns true if the current section is nested in the previous section\n     */\n    function isNestedToPrevious(currentName, previousName) {\n        if (currentName === undefined || previousName === undefined) {\n            return false;\n        }\n        return getParents(currentName).includes(previousName);\n    }\n    exports.isNestedToPrevious = isNestedToPrevious;\n    /**\n     * @returns array of parent sections for the section\n     */\n    function getParents(section) {\n        let parents = [];\n        const found = exports.parentSections.get(section);\n        if (found !== undefined) {\n            for (const father of found) {\n                // JS recursion is not tail-optimized, replace if possible\n                parents = parents.concat(father, getParents(father));\n            }\n        }\n        return parents;\n    }\n    exports.getParents = getParents;\n    exports.sectionDepthMap = {\n        \"configuration\": 0,\n        \"group\": 1,\n        \"widget\": 2,\n        \"column\": 3,\n        \"dropdown\": 3,\n        \"keys\": 3,\n        \"link\": 3,\n        \"node\": 3,\n        \"other\": 3,\n        \"placeholders\": 3,\n        \"property\": 3,\n        \"series\": 3,\n        \"threshold\": 3,\n        \"option\": 4,\n        \"properties\": 4,\n        \"tag\": 4,\n        \"tags\": 4,\n    };\n    /**\n     * Contains names of sections which can appear at depth `1..max_depth`, where\n     * `max_depth` is a value from `sectionDepthMap`\n     */\n    exports.inheritableSections = new Set([\n        \"keys\", \"tags\"\n    ]);\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/* WEBPACK VAR INJECTION */}.call(this, \"/\"))\n\n//# sourceURL=webpack:///./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/resources.js?");

/***/ }),

/***/ "./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/setting.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/setting.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/axibasecharts-syntax/server/node_modules/vscode-languageserver-types/lib/esm/main.js\"), __webpack_require__(/*! ./defaultSetting */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/defaultSetting.js\"), __webpack_require__(/*! ./messageUtil */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/messageUtil.js\"), __webpack_require__(/*! ./util */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/util.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, vscode_languageserver_types_1, defaultSetting_1, messageUtil_1, util_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.intervalUnits = [\n        \"nanosecond\", \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\",\n    ];\n    exports.calendarKeywords = [\n        \"current_day\", \"current_hour\", \"current_minute\", \"current_month\", \"current_quarter\", \"current_week\",\n        \"current_year\", \"first_day\", \"first_vacation_day\", \"first_working_day\", \"friday\", \"last_vacation_day\",\n        \"last_working_day\", \"monday\", \"next_day\", \"next_hour\", \"next_minute\", \"next_month\", \"next_quarter\",\n        \"next_vacation_day\", \"next_week\", \"next_working_day\", \"next_year\", \"now\", \"previous_day\", \"previous_hour\",\n        \"previous_minute\", \"previous_month\", \"previous_quarter\", \"previous_vacation_day\", \"previous_week\",\n        \"previous_working_day\", \"previous_year\", \"saturday\", \"sunday\", \"thursday\", \"tuesday\", \"wednesday\",\n    ];\n    const booleanKeywords = [\n        \"false\", \"no\", \"null\", \"none\", \"0\", \"off\", \"true\", \"yes\", \"on\", \"1\",\n    ];\n    const booleanRegExp = new RegExp(`^(?:${booleanKeywords.join(\"|\")})$`);\n    const calendarRegExp = new RegExp(\n    // current_day\n    `^(?:${exports.calendarKeywords.join(\"|\")})` +\n        // + 5 * minute\n        `(?:[ \\\\t]*[-+][ \\\\t]*(?:\\\\d+|(?:\\\\d+)?\\\\.\\\\d+)[ \\\\t]*\\\\*[ \\\\t]*(?:${exports.intervalUnits.join(\"|\")}))?$`);\n    const integerRegExp = /^[-+]?\\d+$/;\n    const intervalRegExp = new RegExp(\n    // -5 month, +3 day, .3 year, 2.3 week, all\n    `^(?:(?:[-+]?(?:(?:\\\\d+|(?:\\\\d+)?\\\\.\\\\d+)|@\\\\{.+\\\\})[ \\\\t]*(?:${exports.intervalUnits.join(\"|\")}))|all)$`);\n    const localDateRegExp = new RegExp(\n    // 2018-12-31\n    \"^(?:19[7-9]|[2-9]\\\\d\\\\d)\\\\d(?:-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01])\" +\n        // 01:13:46.123, 11:26:52\n        \"(?: (?:[01]\\\\d|2[0-4]):(?:[0-5][0-9])(?::(?:[0-5][0-9]))?(?:\\\\.\\\\d{1,9})?)?)?)?$\");\n    // 1, 5.2, 0.3, .9, -8, -0.5, +1.4\n    const numberRegExp = /^(?:\\-|\\+)?(?:\\.\\d+|\\d+(?:\\.\\d+)?)$/;\n    const zonedDateRegExp = new RegExp(\n    // 2018-12-31\n    \"^(?:19[7-9]|[2-9]\\\\d\\\\d)\\\\d-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])\" +\n        // T12:34:46.123, T23:56:18\n        \"[tT](?:[01]\\\\d|2[0-4]):(?:[0-5][0-9]):(?:[0-5][0-9])(?:\\\\.\\\\d{1,9})?\" +\n        // Z, +0400, -05:00\n        \"(?:[zZ]|[+-](?:[01]\\\\d|2[0-4]):?(?:[0-5][0-9]))$\");\n    const calculatedRegExp = /[@$]\\{.+\\}/;\n    /**\n     * Tests the provided string with regular expressions\n     * @param text the target string\n     * @returns true if the string is date expression, false otherwise\n     */\n    function isDate(text) {\n        return calendarRegExp.test(text) || localDateRegExp.test(text) || zonedDateRegExp.test(text);\n    }\n    const specificValueChecksMap = new Map([\n        [\"forecastssagroupmanualgroups\", {\n                errMsg: \"Incorrect group syntax\",\n                isIncorrect: (value) => {\n                    const regex = /^[\\d\\s,;-]+$/;\n                    return !regex.test(value);\n                }\n            }],\n        [\"forecastssagroupautounion\", {\n                errMsg: \"Incorrect group union syntax\",\n                isIncorrect: (value) => {\n                    const regex = /^[a-z\\s,;-]+$/;\n                    return !regex.test(value);\n                }\n            }]\n    ]);\n    /**\n     * In addition to DefaultSetting contains specific fields.\n     */\n    class Setting extends defaultSetting_1.DefaultSetting {\n        constructor(setting) {\n            super(setting);\n            /**\n             * Setting value.\n             */\n            this.value = \"\";\n            /**\n             * Setting values for multiline settings (mostly for colors and thresholds).\n             */\n            this.values = [];\n        }\n        get textRange() {\n            return this._textRange;\n        }\n        set textRange(value) {\n            this._textRange = value;\n        }\n        /**\n         * Checks the type of the setting and creates a corresponding diagnostic\n         * @param range where the error should be displayed\n         */\n        checkType(range) {\n            let result;\n            // allows ${} and @{} expressions\n            if (calculatedRegExp.test(this.value)) {\n                return result;\n            }\n            switch (this.type) {\n                case \"string\": {\n                    if (!/\\S/.test(this.value)) {\n                        result = util_1.createDiagnostic(range, `${this.displayName} can not be empty`);\n                        break;\n                    }\n                    if (this.enum.length > 0) {\n                        if (this.value.split(/\\s*,\\s*/).some(s => this.enum.indexOf(s) < 0)) {\n                            const enumList = this.enum.sort().join(\"\\n * \");\n                            result = util_1.createDiagnostic(range, `${this.displayName} must contain only the following:\\n * ${enumList}`);\n                        }\n                        break;\n                    }\n                    const specCheck = specificValueChecksMap.get(this.name);\n                    if (specCheck && specCheck.isIncorrect(this.value)) {\n                        result = util_1.createDiagnostic(range, specCheck.errMsg);\n                    }\n                    break;\n                }\n                case \"number\": {\n                    const persent = /(\\d*)%/.exec(this.value);\n                    if (this.name === \"arrowlength\" && persent) {\n                        this.maxValue = typeof this.maxValue === \"object\" ? this.maxValue.value * 100 : this.maxValue * 100;\n                        this.minValue = typeof this.minValue === \"object\" ? this.minValue.value * 100 : this.minValue * 100;\n                        this.value = persent[1];\n                    }\n                    result = this.checkNumber(numberRegExp, `${this.displayName} should be a real (floating-point) number.`, range);\n                    break;\n                }\n                case \"integer\": {\n                    result = this.checkNumber(integerRegExp, `${this.displayName} should be an integer number.`, range);\n                    break;\n                }\n                case \"boolean\": {\n                    if (!booleanRegExp.test(this.value)) {\n                        result = util_1.createDiagnostic(range, `${this.displayName} should be a boolean value. For example, ${this.example}`);\n                    }\n                    break;\n                }\n                case \"enum\": {\n                    const index = this.findIndexInEnum(this.value);\n                    // Empty enum means that the setting is not allowed\n                    if (this.enum.length === 0) {\n                        result = util_1.createDiagnostic(range, messageUtil_1.illegalSetting(this.displayName));\n                    }\n                    else if (index < 0) {\n                        if (/percentile/.test(this.value) && /statistic/.test(this.name)) {\n                            result = this.checkPercentile(range);\n                            break;\n                        }\n                        const enumList = this.enum.sort().join(\"\\n * \")\n                            .replace(/percentile\\\\.+/, \"percentile(n)\");\n                        result = util_1.createDiagnostic(range, `${this.displayName} must be one of:\\n * ${enumList}`);\n                    }\n                    break;\n                }\n                case \"interval\": {\n                    if (!intervalRegExp.test(this.value)) {\n                        const message = `.\\nFor example, ${this.example}. Supported units:\\n * ${exports.intervalUnits.join(\"\\n * \")}`;\n                        if (this.name === \"updateinterval\" && /^\\d+$/.test(this.value)) {\n                            result = util_1.createDiagnostic(range, `Specifying the interval in seconds is deprecated.\\nUse \\`count unit\\` format${message}`, vscode_languageserver_types_1.DiagnosticSeverity.Warning);\n                        }\n                        else {\n                            /**\n                             * Check other allowed non-interval values\n                             * (for example, period, summarize-period, group-period supports \"auto\")\n                             */\n                            if (this.enum.length > 0) {\n                                if (this.findIndexInEnum(this.value) < 0) {\n                                    result = util_1.createDiagnostic(range, `Use ${this.enum.sort().join(\", \")} or \\`count unit\\` format${message}`);\n                                }\n                            }\n                            else {\n                                result = util_1.createDiagnostic(range, `${this.displayName} should be set as \\`count unit\\`${message}`);\n                            }\n                        }\n                    }\n                    break;\n                }\n                case \"date\": {\n                    if (!isDate(this.value)) {\n                        result = util_1.createDiagnostic(range, `${this.displayName} should be a date. For example, ${this.example}`);\n                    }\n                    break;\n                }\n                case \"object\": {\n                    try {\n                        JSON.parse(this.value);\n                    }\n                    catch (err) {\n                        result = util_1.createDiagnostic(range, `Invalid object specified: ${err.message}`);\n                    }\n                    break;\n                }\n                default: {\n                    throw new Error(`${this.type} is not handled`);\n                }\n            }\n            return result;\n        }\n        checkNumber(reg, message, range) {\n            const example = ` For example, ${this.example}`;\n            if (!reg.test(this.value)) {\n                return util_1.createDiagnostic(range, `${message}${example}`);\n            }\n            const minValue = typeof this.minValue === \"object\" ? this.minValue.value : this.minValue;\n            const minValueExcluded = typeof this.minValue === \"object\" ? this.minValue.excluded : false;\n            const maxValue = typeof this.maxValue === \"object\" ? this.maxValue.value : this.maxValue;\n            const maxValueExcluded = typeof this.maxValue === \"object\" ? this.maxValue.excluded : false;\n            const left = minValueExcluded ? `(` : `[`;\n            const right = maxValueExcluded ? `)` : `]`;\n            if (minValueExcluded && +this.value <= minValue || +this.value < minValue ||\n                maxValueExcluded && +this.value >= maxValue || +this.value > maxValue) {\n                return util_1.createDiagnostic(range, `${this.displayName} should be in range ${left}${minValue}, ${maxValue}${right}.${example}`);\n            }\n            return undefined;\n        }\n        checkPercentile(range) {\n            let result;\n            const n = this.value.match(/[^percntil_()]+/);\n            if (n && +n[0] >= 0 && +n[0] <= 100) {\n                if (/_/.test(this.value)) {\n                    result = util_1.createDiagnostic(range, `Underscore is deprecated, use percentile(${n[0]}) instead`, vscode_languageserver_types_1.DiagnosticSeverity.Warning);\n                }\n                else if (!new RegExp(`\\\\(${n[0]}\\\\)`).test(this.value)) {\n                    result = util_1.createDiagnostic(range, `Wrong usage. Expected: percentile(${n[0]}).\nCurrent: ${this.value}`);\n                }\n            }\n            else {\n                result = util_1.createDiagnostic(range, `n must be a decimal number between [0, 100]. Current: ${n ? n[0] : n}`);\n            }\n            return result;\n        }\n        findIndexInEnum(value) {\n            const index = this.enum.findIndex((option) => new RegExp(`^${option}$`, \"i\").test(value));\n            return index;\n        }\n    }\n    exports.Setting = Setting;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/setting.js?");

/***/ }),

/***/ "./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/util.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/util.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! vscode-languageserver-types */ \"./node_modules/axibasecharts-syntax/server/node_modules/vscode-languageserver-types/lib/esm/main.js\"), __webpack_require__(/*! ./resources */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/resources.js\"), __webpack_require__(/*! ./setting */ \"./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/setting.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, vscode_languageserver_types_1, resources_1, setting_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    const DIAGNOSTIC_SOURCE = \"Axibase Charts\";\n    /**\n     * @param value the value to find\n     * @param map the map to search\n     * @returns true if at least one value in map is/contains the wanted value\n     */\n    function isInMap(value, map) {\n        if (value == null) {\n            return false;\n        }\n        for (const array of map.values()) {\n            for (const item of array) {\n                if ((Array.isArray(item) && item.includes(value)) || (item === value)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    exports.isInMap = isInMap;\n    /**\n     * @param target array of aliases\n     * @param array array to perform the search\n     * @returns true, if array contains a value from target\n     */\n    function isAnyInArray(target, array) {\n        for (const item of target) {\n            if (array.includes(item)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    exports.isAnyInArray = isAnyInArray;\n    /**\n     * Clears the passed argument and looks for a setting with the same name\n     * @param name name of the wanted setting\n     * @param range TextRange of the setting in text.\n     * @returns the wanted setting or undefined if not found\n     */\n    function getSetting(name, range) {\n        const clearedName = setting_1.Setting.clearSetting(name);\n        const defaultSetting = resources_1.settingsMap.get(clearedName);\n        if (defaultSetting === undefined) {\n            return undefined;\n        }\n        const setting = new setting_1.Setting(defaultSetting);\n        if (range) {\n            setting.textRange = range;\n        }\n        return setting;\n    }\n    exports.getSetting = getSetting;\n    /**\n     * Counts CSV columns using RegExp.\n     * @param line a CSV-formatted line\n     * @returns number of CSV columns in the line\n     */\n    function countCsvColumns(line) {\n        if (line.length === 0) {\n            return 0;\n        }\n        const lineWithoutEscapes = line.replace(/(['\"]).+\\1/g, \"\"); // remove strings in quotes \"6,3\" or \"6 3\"\n        return lineWithoutEscapes.split(\",\").length;\n    }\n    exports.countCsvColumns = countCsvColumns;\n    /**\n     * Short-hand to create a diagnostic with undefined code and a standardized source\n     * @param range Where is the mistake?\n     * @param severity How severe is that problem?\n     * @param message What message should be passed to the user?\n     */\n    function createDiagnostic(range, message, severity = vscode_languageserver_types_1.DiagnosticSeverity.Error) {\n        return vscode_languageserver_types_1.Diagnostic.create(range, message, severity, undefined, DIAGNOSTIC_SOURCE);\n    }\n    exports.createDiagnostic = createDiagnostic;\n    /**\n     * Replaces all comments with spaces.\n     * We need to remember places of statements in the original configuration,\n     * that's why it is not possible to delete all comments, whereas they must be ignored.\n     * @param text the text to replace comments\n     * @returns the modified text\n     */\n    function deleteComments(text) {\n        let content = text;\n        const multiLine = /\\/\\*[\\s\\S]*?\\*\\//g;\n        const oneLine = /^[ \\t]*#.*/mg;\n        let match = multiLine.exec(content);\n        if (match === null) {\n            match = oneLine.exec(content);\n        }\n        while (match !== null) {\n            const newLines = match[0].split(\"\\n\").length - 1;\n            const spaces = Array(match[0].length)\n                .fill(\" \")\n                .concat(Array(newLines).fill(\"\\n\"))\n                .join(\"\");\n            content = `${content.substr(0, match.index)}${spaces}${content.substr(match.index + match[0].length)}`;\n            match = multiLine.exec(content);\n            if (match === null) {\n                match = oneLine.exec(content);\n            }\n        }\n        return content;\n    }\n    exports.deleteComments = deleteComments;\n    /**\n     * Replaces scripts body with newline character\n     * @param text the text to perform modifications\n     * @returns the modified text\n     */\n    function deleteScripts(text) {\n        return text.replace(/\\bscript\\b([\\s\\S]+?)\\bendscript\\b/g, \"script\\nendscript\");\n    }\n    exports.deleteScripts = deleteScripts;\n    /**\n     * @returns true if the current line contains white spaces or nothing, false otherwise\n     */\n    function isEmpty(str) {\n        return /^\\s*$/.test(str);\n    }\n    exports.isEmpty = isEmpty;\n    /**\n     * Creates a diagnostic for a repeated setting. Warning if this setting was\n     * multi-line previously, but now it is deprecated, error otherwise.\n     * @param range The range where the diagnostic will be displayed\n     * @param declaredAbove The setting, which has been declared earlier\n     * @param current The current setting\n     */\n    function repetitionDiagnostic(range, declaredAbove, current) {\n        const diagnosticSeverity = ([\"script\", \"thresholds\", \"colors\"].includes(current.name)) ?\n            vscode_languageserver_types_1.DiagnosticSeverity.Warning : vscode_languageserver_types_1.DiagnosticSeverity.Error;\n        let message;\n        switch (current.name) {\n            case \"script\": {\n                message =\n                    \"Multi-line scripts are deprecated.\\nGroup multiple scripts into blocks:\\nscript\\nendscript\";\n                break;\n            }\n            case \"thresholds\": {\n                message = `Replace multiple \\`thresholds\\` settings with one, for example:\nthresholds = 0\nthresholds = 60\nthresholds = 80\n\nthresholds = 0, 60, 80`;\n                declaredAbove.values.push(current.value);\n                break;\n            }\n            case \"colors\": {\n                message = `Replace multiple \\`colors\\` settings with one, for example:\ncolors = red\ncolors = yellow\ncolors = green\n\ncolors = red, yellow, green`;\n                declaredAbove.values.push(current.value);\n                break;\n            }\n            default:\n                message = `${declaredAbove.displayName} is already defined`;\n        }\n        return createDiagnostic(range, message, diagnosticSeverity);\n    }\n    exports.repetitionDiagnostic = repetitionDiagnostic;\n    /**\n     * Creates Range object.\n     *\n     * @param start - The starting position in the string\n     * @param length - Length of the word to be highlighted\n     * @param lineNumber - Number of line, where is the word to be highlighted\n     * @returns Range object with start equal to `start` and end equal to `start+length` and line equal to `lineNumber`\n     */\n    function createRange(start, length, lineNumber) {\n        return vscode_languageserver_types_1.Range.create(vscode_languageserver_types_1.Position.create(lineNumber, start), vscode_languageserver_types_1.Position.create(lineNumber, start + length));\n    }\n    exports.createRange = createRange;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n//# sourceURL=webpack:///./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/server/src/util.js?");

/***/ }),

/***/ "./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/snippets/snippets.json":
/*!*************************************************************************************************!*\
  !*** ./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/snippets/snippets.json ***!
  \*************************************************************************************************/
/*! exports provided: configuration, csv, chart-basic, bar, bar-horizontal, box, calendar, calendar-thresholds, chart, chart-alert, chart-column, chart-combo, chart-computed, chart-dual-axis, chart-range, chart-stack, alert-console, message-console, gauge, graph, pie, property, chart-table, table-grid, text, treemap, histogram, portal: 3x2, series with tags, detail series, averaged series, default */
/***/ (function(module) {

eval("module.exports = {\"configuration\":{\"prefix\":\"configuration\",\"body\":[\"[configuration]\",\"  offset-right = ${1:50}\",\"  height-units = ${2:2}\",\"  width-units = ${3:2}\",\"\",\"  [group]\",\"\",\"    ${0}\"],\"description\":\"Initial configuration\"},\"csv\":{\"prefix\":\"csv\",\"body\":[\"csv ${1:cities} = ${2:name, region}\",\"  ${3:Sunnyvale, CA}\",\"  ${4:Cupertino, CA}\",\"endcsv\",\"\",\"for ${5:city} in ${1:cities}\",\"  entity = ${6:@{city.name}}\",\"endfor\",\"${0}\"],\"description\":\"Csv and corresponding for\"},\"chart-basic\":{\"prefix\":\"chart-basic\",\"body\":[\"[widget]\",\"  type = chart\",\"  title = ${1:basic chart}\",\"  timespan = ${2:1 day}\",\"  max-range = ${3:100}\",\"\",\"  [series]\",\"    ${0}\"],\"description\":\"Basic chart\"},\"bar\":{\"prefix\":\"bar\",\"body\":[\"[widget]\",\"  type = bar\",\"  title = ${1:bar}\",\"  timespan = ${2:1 day}\",\"\",\"  [column]\",\"\",\"    [series]\",\"      entity = ${3:entity-1}\",\"      metric = ${4:metric-1}\",\"      ${0}\"],\"description\":\"Bar\"},\"bar-horizontal\":{\"prefix\":\"bar-horizontal\",\"body\":[\"[widget]\",\"  type = bar\",\"  title = ${1:Horizontal bar}\",\"  horizontal = true\",\"  timespan = ${2:1 day}\",\"\",\"  [column]\",\"\",\"    [series]\",\"      entity = ${3:entity-1}\",\"      metric = ${4:metric-1}\",\"      ${0}\"],\"description\":\"Horizontal bar\"},\"box\":{\"prefix\":\"box\",\"body\":[\"[widget]\",\"  type = box\",\"  title = ${1:Box}\",\"  timespan = ${2:1 day}\",\"  autoscale = ${3:false}\",\"\",\"  [series]\",\"    entity = ${4:entity-1}\",\"    metric = ${5:metric-1}\",\"    format = ${6:kilobytes}\",\"    axis = ${7:right}\",\"    ${0}\"],\"description\":\"Box\"},\"calendar\":{\"prefix\":\"calendar\",\"body\":[\"[widget]\",\"  type = calendar\",\"  title = ${1:Calendar}\",\"  timespan = ${2:1 day}\",\"  summarize-period = ${3:10 minute}\",\"  color-range = ${4:blue}\",\"\",\"  [series]\",\"    entity = ${5:entity-1}\",\"    metric = ${6:metric-1}\",\"    ${0}\"],\"description\":\"Calendar\"},\"calendar-thresholds\":{\"prefix\":\"calendar-thresholds\",\"body\":[\"[widget]\",\"  type = calendar\",\"  title = ${1:Calendar}\",\"  timespan = ${2:1 day}\",\"  summarize-period = ${3:10 minute}\",\"\",\"  color-range = ${4:red}\",\"  thresholds = ${5:10, 20, 30, 40, 50, 60, 70, 80, 90, 100}\",\"\",\"  [series]\",\"    entity = ${6:entity-1}\",\"    metric = ${7:metric-1}\",\"    statistic = ${8:percentile_95}\",\"    period = ${9:10 minute}\",\"    ${0}\"],\"description\":\"Calendar with thresholds\"},\"chart\":{\"prefix\":\"chart\",\"body\":[\"[widget]\",\"  type = chart\",\"  title = ${1:Chart}\",\"  timespan = ${2:1 day}\",\"  step-line = ${3:false}\",\"  min-range = ${4:0}\",\"  max-range = ${5:100}\",\"\",\"  [series]\",\"    entity = ${6:entity-1}\",\"    metric = ${7:metric-1}\",\"    statistic = ${8:avg}\",\"    period = ${9:10 minute}\",\"    ${0}\"],\"description\":\"Chart\"},\"chart-alert\":{\"prefix\":\"chart-alert\",\"body\":[\"[widget]\",\"  type = chart\",\"  title = ${1:Alert chart}\",\"  timespan = ${2:1 day}\",\"  max-range = ${3:100}\",\"\",\"  [series]\",\"    entity = ${4:entity-1}\",\"    metric = ${5:metric-1}\",\"    alert-expression = ${6:value > 5}\",\"    alert-style = ${7:stroke: red}\",\"    ${0}\"],\"description\":\"Alert chart \"},\"chart-column\":{\"prefix\":\"chart-column\",\"body\":[\"[widget]\",\"  type = chart\",\"  title = ${1:Column chart}\",\"  timespan = ${2:1 day}\",\"  max-range = ${3:100}\",\"\",\"  [series]\",\"    entity = ${4:entity-1}\",\"    metric = ${5:metric-1}\",\"    statistic = ${6:percentile_75}\",\"    period = ${7:10 minute}\",\"    mode = column\",\"    ${0}\"],\"description\":\"Column chart\"},\"chart-combo\":{\"prefix\":\"chart-combo\",\"body\":[\"[widget]\",\"  type = chart\",\"  title = ${1:Combo chart}\",\"  timespan = ${2:1 day}\",\"  max-range = ${3:100}\",\"\",\"  [series]\",\"    entity = ${4:entity-1}\",\"    metric = ${5:metric-1}\",\"    mode = ${6:column}\",\"    statistic = ${7:percentile_75}\",\"    period = ${8:10 minute}\",\"    color = ${9:green}\",\"    ${0}\"],\"description\":\"Combo chart\"},\"chart-computed\":{\"prefix\":\"chart-computed\",\"body\":[\"[widget]\",\"  type = chart\",\"  title = ${1:Computed chart}\",\"  timespan = ${2:1 day}\",\"  max-range = ${3:100}\",\"\",\"  [series]\",\"    entity = ${4:entity-1}\",\"    metric = ${5:metric-1}\",\"    display = false\",\"    alias = ${6:free}\",\"\",\"  [series]\",\"    entity = ${4:entity-1}\",\"    metric = ${7:metric-2}\",\"    display = false\",\"    alias = ${8:total}\",\"\",\"  [series]\",\"    label = ${9:Memory Used, %}\",\"    value = ${10:(1 - value('${6:free}') / value('${8:total}')) * 100}\",\"    markers = ${11:false}\",\"    ${0}\"],\"description\":\"Computed chart\"},\"chart-dual-axis\":{\"prefix\":\"chart-dual-axis\",\"body\":[\"[widget]\",\"  type = chart\",\"  title = ${1:Dual axis chart}\",\"  timespan = ${2:1 day}\",\"  step-line = ${3:false}\",\"  min-range = ${4:0}\",\"  max-range = ${5:100}\",\"\",\"  [series]\",\"    entity = ${6:entity-1}\",\"    metric = ${7:metric-1}\",\"    statistic = ${8:avg}\",\"    period = ${9:10 minute}\",\"\",\"  [series]\",\"    entity = ${6:entity-1}\",\"    metric = ${10:metric-2}\",\"    axis = right\",\"    format = ${11:kilobytes}\",\"    markers = false\",\"    ${0}\"],\"description\":\"Dual axis chart\"},\"chart-range\":{\"prefix\":\"chart-range\",\"body\":[\"[widget]\",\"  type = chart\",\"  title = ${1:Range chart}\",\"  mode = range\",\"  timespan = ${2:1 day}\",\"  step-line = ${3:false}\",\"\",\"  [series]\",\"    entity = ${4:entity-1}\",\"    metric = ${5:metric-1}\",\"    statistic = ${6:percentile_75}\",\"    period = ${7:10 minute}\",\"\",\"  [series]\",\"    entity = ${4:entity-1}\",\"    metric = ${5:metric-1}\",\"    statistic = ${8:percentile_25}\",\"    period = ${7:10 minute}\",\"    ${0}\"],\"description\":\"Range chart\"},\"chart-stack\":{\"prefix\":\"chart-stack\",\"body\":[\"[widget]\",\"  type = chart\",\"  title = ${1:Stack chart}\",\"  mode = stack\",\"  stepline = ${2:true}\",\"  timespan = ${3:1 day}\",\"  max-range = ${4:100}\",\"\",\"  [series]\",\"    entity = ${5:entity-1}\",\"    metric = ${6:metric-1}\",\"    statistic = ${7:avg}\",\"    ${0}\"],\"description\":\"Stack chart\"},\"alert-console\":{\"prefix\":\"alert-console\",\"body\":[\"[widget]\",\"  type = console\",\"  title = ${1:Alert console}\",\"\",\"  severity-style = ${2:row}\",\"\",\"  [column]\",\"    key = ${3:time}\",\"    ${0}\"],\"description\":\"Alert console\"},\"message-console\":{\"prefix\":\"message-console\",\"body\":[\"[widget]\",\"  type = console\",\"  title = ${1:Message console}\",\"  source = message\",\"  entity = ${2:entity-1}\",\"    ${0}\"],\"description\":\"Message console\"},\"gauge\":{\"prefix\":\"gauge\",\"body\":[\"[widget]\",\"  type = gauge\",\"  title = ${1:Gauge}\",\"  thresholds = ${2:0, 60, 80, 100}\",\"  width-units = ${3:0.3}\",\"  height-units = ${4:0.3}\",\"\",\"  [series]\",\"    entity = ${5:entity-1}\",\"    metric = ${6:metric-1}\",\"    ${0}\"],\"description\":\"Gauge\"},\"graph\":{\"prefix\":\"graph\",\"body\":[\"[widget]\",\"  type = graph\",\"  title = ${1:Graph}\",\"  node-connect = ${2:false}\",\"  node-labels = ${3:true}\",\"  link-data = ${4:true}\",\"  timespan = ${5:1 day}\",\"  endtime = ${6:2015-03-14}\",\"\",\"  node-radius = ${7:20}\",\"\",\"  node-thresholds = ${8:-10, -5, 0, 5, 10}\",\"  node-colors = ${9:red, orange, whitesmoke, limegreen, green}\",\"\",\"  link-thresholds = ${10:20000, 40000, 70000, 80000}\",\"  link-widths = ${11:1, 2, 3, 8, 10}\",\"\",\"  [node]\",\"    id = ${12:entity-1}\",\"  [node]\",\"    id = ${13:entity-2}\",\"  [node]\",\"    id = ${14:entity-3}\",\"\",\"    [link]\",\"      nodes = ${12:entity-1} - ${13:entity-2}\",\"    [link]\",\"      nodes = ${12:entity-1} - ${14:entity-3}\",\"    [link]\",\"      nodes = ${13:entity-2} - ${14:entity-3}\",\"\",\"      [series]\",\"        entity = ${12:entity-1}\",\"        metric = ${15:metric-1}\",\"        links = ${12:entity-1} - ${13:entity-2}\",\"        [tags]\",\"          ${16:airport_2_name} = ${13:entity-2}\",\"\",\"      [series]\",\"        entity = ${12:entity-1}\",\"        metric = ${15:metric-1}\",\"        links = ${12:entity-1} - ${14:entity-3}\",\"        [tags]\",\"          ${16:airport_2_name} = ${14:entity-3}\",\"\",\"      [series]\",\"        entity = ${13:entity-2}\",\"        metric = ${15:metric-1}\",\"        links = ${13:entity-2} - ${14:entity-3}\",\"        [tags]\",\"          ${16:airport_2_name} = ${14:entity-3}\",\"\",\"      [series]\",\"        entity = ${12:entity-1}\",\"        metric = ${17:metric-2}\",\"        nodes = ${12:entity-1}\",\"\",\"      [series]\",\"        entity = ${14:entity-2}\",\"        metric = ${17:metric-2}\",\"        nodes = ${14:entity-3}\",\"\",\"      [series]\",\"        entity = ${13:entity-2}\",\"        metric = ${17:metric-2}\",\"        nodes = ${13:entity-2}\",\"        ${0}\"],\"description\":\"Graph\"},\"pie\":{\"prefix\":\"pie\",\"body\":[\"[widget]\",\"  type = pie\",\"  title = ${1:Pie}\",\"\",\"  [series]\",\"    entity = ${2:entity-1}\",\"    metric = ${3:metric-1}\",\"    ${0}\"],\"description\":\"Pie\"},\"property\":{\"prefix\":\"property\",\"body\":[\"[widget]\",\"  type = property\",\"  title = ${1:Property}\",\"  width-units = ${2:0.6}\",\"  class = ${3:terminal}\",\"  timespan = ${4:1 day}\",\"  sort = ${5:command}\",\"  update-interval = ${6:10 second}\",\"\",\"  [column]\",\"    key = ${7:pid}\",\"    label = ${8:PID}\",\"    format = ${9:####}\",\"\",\"  [property]\",\"    type = ${10:process}\",\"    entity = ${11:entity-1}\",\"    ${0}\"],\"description\":\"Property\"},\"chart-table\":{\"prefix\":\"table\",\"body\":[\"[widget]\",\"  type = table\",\"  title = ${1:CPU Usage}\",\"  width-units = ${2:0.3}\",\"\",\"  alert-expression = ${3:value > 5}\",\"  alert-style = ${4:background-color: orange}\",\"\",\"  sort = ${5:value desc}\",\"\",\"  [series]\",\"    entity = ${6:entity-1}\",\"    metric = ${7:metric-1}\",\"    ${0}\"],\"description\":\"Table\"},\"table-grid\":{\"prefix\":\"table-grid\",\"body\":[\"[widget]\",\"  type = table\",\"  title = ${2:Table grid}\",\"  last = ${3:true}\",\"\",\"  width-units = ${3:0.5}\",\"\",\"  merge-columns = ${4:entity}\",\"  sort = ${5:metric-1 order(asc/desc)}\",\"\",\"  [column]\",\"    key = ${6:metric-1}\",\"    label = ${7:Metric, measure units}\",\"\",\"  [series]\",\"    entity = ${8:entity-1}\",\"    metric = ${6:metric-1}\",\"    ${0}\"],\"description\":\"Grid table\"},\"text\":{\"prefix\":\"text\",\"body\":[\"[widget]\",\"  type = text\",\"  title = ${1:Text}\",\"  width-units = ${2:0.2}\",\"  height-units = ${3:0.2}\",\"  alert-expression = ${4:value > 1}\",\"  alert-style = ${5:color: red}\",\"\",\"  [series]\",\"    entity = ${6:entity-1}\",\"    metric = ${7:metric-1}\",\"    ${0}\"],\"description\":\"Text\"},\"treemap\":{\"prefix\":\"treemap\",\"body\":[\"[widget]\",\"  type = treemap\",\"  title = ${1:Treemap}\",\"  thresholds = ${2:0, 10, 60, 80, 100}\",\"  timespan = ${3:1 day}\",\"\",\"  [series]\",\"    entity = ${4:entity-1}\",\"    metric = ${5:metric-1}\",\"    size = ${6:1}\",\"    ${0}\"],\"description\":\"Treemap\"},\"histogram\":{\"prefix\":\"histogram\",\"body\":[\"[widget]\",\"  type = histogram\",\"  title = ${1:Treemap}\",\"  right-axis = ${2:density}\",\"  top-axis = ${3:percentiles}\",\"  mode = ${4:stack}\",\"  percentiles = ${5:1, 25, 50, 75, 90, 99.9}\",\"\",\"  horizontal-grid = ${2:density}\",\"\",\"  [series]\",\"    entity = ${6:entity-1}\",\"    metric = ${7:metric-1}\",\"    ${0}\"],\"description\":\"Histogram\"},\"portal: 3x2\":{\"prefix\":\"portal: 3x2\",\"body\":[\"[configuration]\",\"  offset-right = ${1:50}\",\"  width-units = ${2:3}\",\"  height-units = ${3:2}\",\"\",\"  timespan = ${4:1 day}\",\"\",\"  [group]\",\"\",\"    [widget]\",\"      type = ${5:chart}\",\"      [series]\",\"        entity = ${6:entity-1}\",\"        metric = ${7:metric-1}\",\"\",\"    [widget]\",\"      type = ${8:chart}\",\"      [series]\",\"        entity = ${9:entity-2}\",\"        metric = ${10:metric-2}\",\"\",\"    [widget]\",\"      type = ${11:chart}\",\"      [series]\",\"        entity = ${12:entity-3}\",\"        metric = ${13:metric-3}\",\"\",\"  [group]\",\"    [widget]\",\"      type = ${14:chart}\",\"      [series]\",\"        entity = ${15:entity-4}\",\"        metric = ${16:metric-4}\",\"\",\"    [widget]\",\"      type = ${17:chart}\",\"      [series]\",\"        entity = ${18:entity-5}\",\"        metric = ${19:metric-5}\",\"\",\"    [widget]\",\"      type = ${20:chart}\",\"      [series]\",\"        entity = ${21:entity-6}\",\"        metric = ${22:metric-6}\",\"        ${0}\"],\"description\":\"Portal 3x2\"},\"series with tags\":{\"prefix\":\"series with tags\",\"body\":[\"[series]\",\"  entity = ${1:entity-1}\",\"  metric = ${2:metric-1}\",\"  [tags]\",\"    ${3:tag} = ${4:value}\",\"    ${0}\"],\"description\":\"Series section with child tags section\"},\"detail series\":{\"prefix\":\"series detail\",\"body\":[\"[series]\",\"  entity = ${1:entity-1}\",\"  metric = ${2:metric-1}\",\"  ${0}\"],\"description\":\"Series section with entity and metric settings\"},\"averaged series\":{\"prefix\":\"series averaged\",\"body\":[\"[series]\",\"  entity = ${1:entity-1}\",\"  metric = ${2:metric-1}\",\"  statistics = ${3:avg}\",\"  period = ${4:10 minute}\",\"  ${0}\"],\"description\":\"Detail series section with average aggregation\"}};\n\n//# sourceURL=webpack:///./node_modules/axibasecharts-syntax/server/axibase-server-web/dist/snippets/snippets.json?");

/***/ }),

/***/ "./node_modules/axibasecharts-syntax/server/node_modules/browser-or-node/lib/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/axibasecharts-syntax/server/node_modules/browser-or-node/lib/index.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/* global window self */\n\nvar isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n/* eslint-disable no-restricted-globals */\nvar isWebWorker = (typeof self === 'undefined' ? 'undefined' : _typeof(self)) === 'object' && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope';\n/* eslint-enable no-restricted-globals */\n\nvar isNode = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\n\nexports.isBrowser = isBrowser;\nexports.isWebWorker = isWebWorker;\nexports.isNode = isNode;\n\n//# sourceURL=webpack:///./node_modules/axibasecharts-syntax/server/node_modules/browser-or-node/lib/index.js?");

/***/ }),

/***/ "./node_modules/axibasecharts-syntax/server/node_modules/vscode-languageserver-types/lib/esm/main.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/axibasecharts-syntax/server/node_modules/vscode-languageserver-types/lib/esm/main.js ***!
  \***********************************************************************************************************/
/*! exports provided: Position, Range, Location, Color, ColorInformation, ColorPresentation, FoldingRangeKind, FoldingRange, DiagnosticRelatedInformation, DiagnosticSeverity, Diagnostic, Command, TextEdit, TextDocumentEdit, CreateFile, RenameFile, DeleteFile, WorkspaceEdit, WorkspaceChange, TextDocumentIdentifier, VersionedTextDocumentIdentifier, TextDocumentItem, MarkupKind, MarkupContent, CompletionItemKind, InsertTextFormat, CompletionItem, CompletionList, MarkedString, Hover, ParameterInformation, SignatureInformation, DocumentHighlightKind, DocumentHighlight, SymbolKind, SymbolInformation, DocumentSymbol, CodeActionKind, CodeActionContext, CodeAction, CodeLens, FormattingOptions, DocumentLink, EOL, TextDocument, TextDocumentSaveReason */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Position\", function() { return Position; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return Range; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Location\", function() { return Location; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Color\", function() { return Color; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColorInformation\", function() { return ColorInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColorPresentation\", function() { return ColorPresentation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FoldingRangeKind\", function() { return FoldingRangeKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FoldingRange\", function() { return FoldingRange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticRelatedInformation\", function() { return DiagnosticRelatedInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticSeverity\", function() { return DiagnosticSeverity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Diagnostic\", function() { return Diagnostic; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Command\", function() { return Command; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextEdit\", function() { return TextEdit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentEdit\", function() { return TextDocumentEdit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CreateFile\", function() { return CreateFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenameFile\", function() { return RenameFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DeleteFile\", function() { return DeleteFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceEdit\", function() { return WorkspaceEdit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceChange\", function() { return WorkspaceChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentIdentifier\", function() { return TextDocumentIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VersionedTextDocumentIdentifier\", function() { return VersionedTextDocumentIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentItem\", function() { return TextDocumentItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkupKind\", function() { return MarkupKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkupContent\", function() { return MarkupContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionItemKind\", function() { return CompletionItemKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InsertTextFormat\", function() { return InsertTextFormat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionItem\", function() { return CompletionItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionList\", function() { return CompletionList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkedString\", function() { return MarkedString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Hover\", function() { return Hover; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParameterInformation\", function() { return ParameterInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SignatureInformation\", function() { return SignatureInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlightKind\", function() { return DocumentHighlightKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlight\", function() { return DocumentHighlight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SymbolKind\", function() { return SymbolKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SymbolInformation\", function() { return SymbolInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentSymbol\", function() { return DocumentSymbol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeActionKind\", function() { return CodeActionKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeActionContext\", function() { return CodeActionContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeAction\", function() { return CodeAction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeLens\", function() { return CodeLens; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormattingOptions\", function() { return FormattingOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentLink\", function() { return DocumentLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EOL\", function() { return EOL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocument\", function() { return TextDocument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentSaveReason\", function() { return TextDocumentSaveReason; });\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nvar Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nvar Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nvar Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nvar Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nvar ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nvar ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nvar FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nvar DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nvar DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nvar Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nvar Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nvar TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nvar TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nvar CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nvar RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nvar DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nvar WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\n\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nvar TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nvar VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nvar TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nvar MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nvar MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nvar CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nvar InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nvar CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nvar CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nvar MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nvar Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nvar ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nvar SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nvar DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nvar DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nvar SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nvar SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\n\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nvar CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nvar CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nvar CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nvar CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nvar FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\n\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nvar EOL = ['\\n', '\\r\\n', '\\r'];\r\nvar TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Ovelapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nvar TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\n\n//# sourceURL=webpack:///./node_modules/axibasecharts-syntax/server/node_modules/vscode-languageserver-types/lib/esm/main.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/arrays.js":
/*!**********************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/arrays.js ***!
  \**********************************************************************/
/*! exports provided: tail, tail2, equals, binarySearch, findFirstInSorted, mergeSort, groupBy, coalesce, isFalsyOrEmpty, isNonEmptyArray, distinct, firstIndex, first, flatten, range, arrayInsert */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tail\", function() { return tail; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"tail2\", function() { return tail2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equals\", function() { return equals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"binarySearch\", function() { return binarySearch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findFirstInSorted\", function() { return findFirstInSorted; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mergeSort\", function() { return mergeSort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"groupBy\", function() { return groupBy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"coalesce\", function() { return coalesce; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFalsyOrEmpty\", function() { return isFalsyOrEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNonEmptyArray\", function() { return isNonEmptyArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"distinct\", function() { return distinct; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firstIndex\", function() { return firstIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"first\", function() { return first; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"flatten\", function() { return flatten; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"range\", function() { return range; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"arrayInsert\", function() { return arrayInsert; });\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nfunction tail(array, n) {\n    if (n === void 0) { n = 0; }\n    return array[array.length - (1 + n)];\n}\nfunction tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nfunction equals(one, other, itemEquals) {\n    if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (var i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction binarySearch(array, key, comparator) {\n    var low = 0, high = array.length - 1;\n    while (low <= high) {\n        var mid = ((low + high) / 2) | 0;\n        var comp = comparator(array[mid], key);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nfunction findFirstInSorted(array, p) {\n    var low = 0, high = array.length;\n    if (high === 0) {\n        return 0; // no children\n    }\n    while (low < high) {\n        var mid = Math.floor((low + high) / 2);\n        if (p(array[mid])) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    return low;\n}\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nfunction mergeSort(data, compare) {\n    _sort(data, compare, 0, data.length - 1, []);\n    return data;\n}\nfunction _merge(a, compare, lo, mid, hi, aux) {\n    var leftIdx = lo, rightIdx = mid + 1;\n    for (var i = lo; i <= hi; i++) {\n        aux[i] = a[i];\n    }\n    for (var i = lo; i <= hi; i++) {\n        if (leftIdx > mid) {\n            // left side consumed\n            a[i] = aux[rightIdx++];\n        }\n        else if (rightIdx > hi) {\n            // right side consumed\n            a[i] = aux[leftIdx++];\n        }\n        else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n            // right element is less -> comes first\n            a[i] = aux[rightIdx++];\n        }\n        else {\n            // left element comes first (less or equal)\n            a[i] = aux[leftIdx++];\n        }\n    }\n}\nfunction _sort(a, compare, lo, hi, aux) {\n    if (hi <= lo) {\n        return;\n    }\n    var mid = lo + ((hi - lo) / 2) | 0;\n    _sort(a, compare, lo, mid, aux);\n    _sort(a, compare, mid + 1, hi, aux);\n    if (compare(a[mid], a[mid + 1]) <= 0) {\n        // left and right are sorted and if the last-left element is less\n        // or equals than the first-right element there is nothing else\n        // to do\n        return;\n    }\n    _merge(a, compare, lo, mid, hi, aux);\n}\nfunction groupBy(data, compare) {\n    var result = [];\n    var currentGroup = undefined;\n    for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {\n        var element = _a[_i];\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * @returns a new array with all falsy values removed. The original array IS NOT modified.\n */\nfunction coalesce(array) {\n    if (!array) {\n        return array;\n    }\n    return array.filter(function (e) { return !!e; });\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nfunction isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nfunction isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equalness by returning a unique string for each.\n */\nfunction distinct(array, keyFn) {\n    if (!keyFn) {\n        return array.filter(function (element, position) {\n            return array.indexOf(element) === position;\n        });\n    }\n    var seen = Object.create(null);\n    return array.filter(function (elem) {\n        var key = keyFn(elem);\n        if (seen[key]) {\n            return false;\n        }\n        seen[key] = true;\n        return true;\n    });\n}\nfunction firstIndex(array, fn) {\n    for (var i = 0; i < array.length; i++) {\n        var element = array[i];\n        if (fn(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction first(array, fn, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = null; }\n    var index = firstIndex(array, fn);\n    return index < 0 ? notFoundValue : array[index];\n}\nfunction flatten(arr) {\n    var _a;\n    return (_a = []).concat.apply(_a, arr);\n}\nfunction range(arg, to) {\n    var from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    var result = [];\n    if (from <= to) {\n        for (var i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (var i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nfunction arrayInsert(target, insertIndex, insertArr) {\n    var before = target.slice(0, insertIndex);\n    var after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/arrays.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/cancellation.js":
/*!****************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/cancellation.js ***!
  \****************************************************************************/
/*! exports provided: CancellationToken, CancellationTokenSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CancellationToken\", function() { return CancellationToken; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CancellationTokenSource\", function() { return CancellationTokenSource; });\n/* harmony import */ var _event__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./event */ \"./node_modules/monaco-editor-core/esm/vs/base/common/event.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar shortcutEvent = Object.freeze(function (callback, context) {\n    var handle = setTimeout(callback.bind(context), 0);\n    return { dispose: function () { clearTimeout(handle); } };\n});\nvar CancellationToken;\n(function (CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: _event__WEBPACK_IMPORTED_MODULE_0__[\"Event\"].None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    });\n})(CancellationToken || (CancellationToken = {}));\nvar MutableToken = /** @class */ (function () {\n    function MutableToken() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    MutableToken.prototype.cancel = function () {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    };\n    Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n        get: function () {\n            return this._isCancelled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n        get: function () {\n            if (this._isCancelled) {\n                return shortcutEvent;\n            }\n            if (!this._emitter) {\n                this._emitter = new _event__WEBPACK_IMPORTED_MODULE_0__[\"Emitter\"]();\n            }\n            return this._emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MutableToken.prototype.dispose = function () {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    };\n    return MutableToken;\n}());\nvar CancellationTokenSource = /** @class */ (function () {\n    function CancellationTokenSource() {\n    }\n    Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n        get: function () {\n            if (!this._token) {\n                // be lazy and create the token only when\n                // actually needed\n                this._token = new MutableToken();\n            }\n            return this._token;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CancellationTokenSource.prototype.cancel = function () {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually cancel\n            this._token.cancel();\n        }\n    };\n    CancellationTokenSource.prototype.dispose = function () {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    };\n    return CancellationTokenSource;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/cancellation.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/diff/diff.js":
/*!*************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/diff/diff.js ***!
  \*************************************************************************/
/*! exports provided: stringDiff, Debug, MyArray, LcsDiff */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"stringDiff\", function() { return stringDiff; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Debug\", function() { return Debug; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MyArray\", function() { return MyArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LcsDiff\", function() { return LcsDiff; });\n/* harmony import */ var _diffChange__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./diffChange */ \"./node_modules/monaco-editor-core/esm/vs/base/common/diff/diffChange.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nfunction createStringSequence(a) {\n    return {\n        getLength: function () { return a.length; },\n        getElementAtIndex: function (pos) { return a.charCodeAt(pos); }\n    };\n}\nfunction stringDiff(original, modified, pretty) {\n    return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n}\n//\n// The code below has been ported from a C# implementation in VS\n//\nvar Debug = /** @class */ (function () {\n    function Debug() {\n    }\n    Debug.Assert = function (condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    };\n    return Debug;\n}());\n\nvar MyArray = /** @class */ (function () {\n    function MyArray() {\n    }\n    /**\n     * Copies a range of elements from an Array starting at the specified source index and pastes\n     * them to another Array starting at the specified destination index. The length and the indexes\n     * are specified as 64-bit integers.\n     * sourceArray:\n     *\t\tThe Array that contains the data to copy.\n     * sourceIndex:\n     *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n     * destinationArray:\n     *\t\tThe Array that receives the data.\n     * destinationIndex:\n     *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n     * length:\n     *\t\tA 64-bit integer that represents the number of elements to copy.\n     */\n    MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (var i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    };\n    return MyArray;\n}());\n\n//*****************************************************************************\n// LcsDiff.cs\n//\n// An implementation of the difference algorithm described in\n// \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n//\n// Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n//*****************************************************************************\n// Our total memory usage for storing history is (worst-case):\n// 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n// 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\nvar MaxDifferencesHistory = 1447;\n//let MaxDifferencesHistory = 100;\n/**\n * A utility class which helps to create the set of DiffChanges from\n * a difference operation. This class accepts original DiffElements and\n * modified DiffElements that are involved in a particular change. The\n * MarktNextChange() method can be called to mark the separation between\n * distinct changes. At the end, the Changes property can be called to retrieve\n * the constructed changes.\n */\nvar DiffChangeHelper = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChangeHelper for the given DiffSequences.\n     */\n    function DiffChangeHelper() {\n        this.m_changes = [];\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    /**\n     * Marks the beginning of the next change in the set of differences.\n     */\n    DiffChangeHelper.prototype.MarkNextChange = function () {\n        // Only add to the list if there is something to add\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Add the new change to our list\n            this.m_changes.push(new _diffChange__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n        }\n        // Reset for the next change\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Number.MAX_VALUE;\n        this.m_modifiedStart = Number.MAX_VALUE;\n    };\n    /**\n     * Adds the original element at the given position to the elements\n     * affected by the current change. The modified index gives context\n     * to the change position with respect to the original sequence.\n     * @param originalIndex The index of the original element to add.\n     * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n     */\n    DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    };\n    /**\n     * Adds the modified element at the given position to the elements\n     * affected by the current change. The original index gives context\n     * to the change position with respect to the modified sequence.\n     * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n     * @param modifiedIndex The index of the modified element to add.\n     */\n    DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n        // The 'true' start index is the smallest of the ones we've seen\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    };\n    /**\n     * Retrieves all of the changes marked by the class.\n     */\n    DiffChangeHelper.prototype.getChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    };\n    /**\n     * Retrieves all of the changes marked by the class in the reverse order\n     */\n    DiffChangeHelper.prototype.getReverseChanges = function () {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            // Finish up on whatever is left\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    };\n    return DiffChangeHelper;\n}());\n/**\n * An implementation of the difference algorithm described in\n * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n */\nvar LcsDiff = /** @class */ (function () {\n    /**\n     * Constructs the DiffFinder\n     */\n    function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n        if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n        this.OriginalSequence = originalSequence;\n        this.ModifiedSequence = newSequence;\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n        return (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\n    };\n    LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n        return (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n        return (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\n    };\n    LcsDiff.prototype.ComputeDiff = function (pretty) {\n        return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n    };\n    /**\n     * Computes the differences between the original and modified input\n     * sequences on the bounded range.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        var quitEarlyArr = [false];\n        var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            // We have to clean up the computed diff to be more intuitive\n            // but it turns out this cannot be done correctly until the entire set\n            // of diffs have been computed\n            return this.PrettifyChanges(changes);\n        }\n        return changes;\n    };\n    /**\n     * Private helper method which computes the differences on the bounded range\n     * recursively.\n     * @returns An array of the differences between the two input sequences.\n     */\n    LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        // Find the start of the differences\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        // Find the end of the differences\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        // In the special case where we either have all insertions or all deletions or the sequences are identical\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            var changes = void 0;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                // All insertions\n                changes = [\n                    new _diffChange__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // All deletions\n                changes = [\n                    new _diffChange__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                // Identical sequences - No differences\n                changes = [];\n            }\n            return changes;\n        }\n        // This problem can be solved using the Divide-And-Conquer technique.\n        var midOriginalArr = [0], midModifiedArr = [0];\n        var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        var midOriginal = midOriginalArr[0];\n        var midModified = midModifiedArr[0];\n        if (result !== null) {\n            // Result is not-null when there was enough memory to compute the changes while\n            // searching for the recursion point\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            // We can break the problem down recursively by finding the changes in the\n            // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n            // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n            // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n            var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            var rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                // We did't have time to finish the first half, so we don't have time to compute this half.\n                // Consider the entire rest of the sequence different.\n                rightChanges = [\n                    new _diffChange__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        // If we hit here, we quit early, and so can't return anything meaningful\n        return [\n            new _diffChange__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n        ];\n    };\n    LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        var forwardChanges = null, reverseChanges = null;\n        // First, walk backward through the forward diagonals history\n        var changeHelper = new DiffChangeHelper();\n        var diagonalMin = diagonalForwardStart;\n        var diagonalMax = diagonalForwardEnd;\n        var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        var lastOriginalIndex = Number.MIN_VALUE;\n        var historyIndex = this.m_forwardHistory.length - 1;\n        var diagonal;\n        do {\n            // Get the diagonal index from the relative diagonal number\n            diagonal = diagonalRelative + diagonalForwardBase;\n            // Figure out where we came from\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                // Vertical line (the element is an insert)\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            else {\n                // Horizontal line (the element is a deletion)\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        // Ironically, we get the forward changes as the reverse of the\n        // order we added them since we technically added them backwards\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            // TODO: Calculate a partial from the reverse diagonals.\n            //       For now, just assume everything after the midOriginal/midModified point is a diff\n            var originalStartPoint = midOriginalArr[0] + 1;\n            var modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                new _diffChange__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n            ];\n        }\n        else {\n            // Now walk backward through the reverse diagonals history\n            changeHelper = new DiffChangeHelper();\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Number.MAX_VALUE;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalReverseBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    // Horizontal line (the element is a deletion))\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                else {\n                    // Vertical line (the element is an insertion)\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // There are cases where the reverse history will find diffs that\n            // are correct, but not intuitive, so we need shift them.\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    };\n    /**\n     * Given the range to compute the diff on, this method finds the point:\n     * (midOriginal, midModified)\n     * that exists in the middle of the LCS of the two sequences and\n     * is the point at which the LCS problem may be broken down recursively.\n     * This method will try to keep the LCS trace in memory. If the LCS recursion\n     * point is calculated and the full trace is available in memory, then this method\n     * will return the change list.\n     * @param originalStart The start bound of the original sequence range\n     * @param originalEnd The end bound of the original sequence range\n     * @param modifiedStart The start bound of the modified sequence range\n     * @param modifiedEnd The end bound of the modified sequence range\n     * @param midOriginal The middle point of the original sequence range\n     * @param midModified The middle point of the modified sequence range\n     * @returns The diff changes, if available, otherwise null\n     */\n    LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        var originalIndex = 0, modifiedIndex = 0;\n        var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        var numDifferences;\n        // To traverse the edit graph and produce the proper LCS, our actual\n        // start position is just outside the given boundary\n        originalStart--;\n        modifiedStart--;\n        // We set these up to make the compiler happy, but they will\n        // be replaced before we return with the actual recursion point\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        // Clear out the history\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n        // The integer value in the cell represents the originalIndex of the furthest\n        // reaching point found so far that ends in that diagonal.\n        // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n        var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        var numDiagonals = maxDifferences + 1;\n        var forwardPoints = new Array(numDiagonals);\n        var reversePoints = new Array(numDiagonals);\n        // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n        // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n        var diagonalForwardBase = (modifiedEnd - modifiedStart);\n        var diagonalReverseBase = (originalEnd - originalStart);\n        // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalForwardBase)\n        // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n        //    diagonal number (relative to diagonalReverseBase)\n        var diagonalForwardOffset = (originalStart - modifiedStart);\n        var diagonalReverseOffset = (originalEnd - modifiedEnd);\n        // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n        //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n        // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n        var delta = diagonalReverseBase - diagonalForwardBase;\n        var deltaIsEven = (delta % 2 === 0);\n        // Here we set up the start and end points as the furthest points found so far\n        // in both the forward and reverse directions, respectively\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n        quitEarlyArr[0] = false;\n        // A couple of points:\n        // --With this method, we iterate on the number of differences between the two sequences.\n        //   The more differences there actually are, the longer this will take.\n        // --Also, as the number of differences increases, we have to search on diagonals further\n        //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n        // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n        //   is even and odd diagonals only when numDifferences is odd.\n        var diagonal, tempOriginalIndex;\n        for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            var furthestOriginalIndex = 0;\n            var furthestModifiedIndex = 0;\n            // Run the algorithm in the forward direction\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalStart, modifiedStart)\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                // Save the current originalIndex so we can test for false overlap in step 3\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // so long as the elements are equal.\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                // then check for overlap.\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Check to see if we should be quitting early, before moving on to the next iteration.\n            var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                // We can't finish, so skip ahead to generating a result from what we have.\n                quitEarlyArr[0] = true;\n                // Use the furthest distance we got in the forward direction.\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                    // Enough of the history is in memory to walk it backwards\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    // We didn't actually remember enough of the history.\n                    //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                    //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        new _diffChange__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n            }\n            // Run the algorithm in the reverse direction\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                // STEP 1: We extend the furthest reaching point in the present diagonal\n                // by looking at the diagonals above and below and picking the one whose point\n                // is further away from the start point (originalEnd, modifiedEnd)\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                // Save the current originalIndex so we can test for false overlap\n                tempOriginalIndex = originalIndex;\n                // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                // as long as the elements are equal.\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                // and diagonal is in the range of forward diagonals computed for numDifferences\n                // then check for overlap.\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                            // BINGO! We overlapped, and we have the full trace in memory!\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            // Either false overlap, or we didn't have enough memory for the full trace\n                            // Just return the recursion point\n                            return null;\n                        }\n                    }\n                }\n            }\n            // Save current vectors to history before the next iteration\n            if (numDifferences <= MaxDifferencesHistory) {\n                // We are allocating space for one extra int, which we fill with\n                // the index of the diagonal base index\n                var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        // If we got here, then we have the full trace in history. We just have to convert it to a change list\n        // NOTE: This part is a bit messy\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    };\n    /**\n     * Shifts the given changes to provide a more intuitive diff.\n     * While the first element in a diff matches the first element after the diff,\n     * we shift the diff down.\n     *\n     * @param changes The list of changes to shift\n     * @returns The shifted changes\n     */\n    LcsDiff.prototype.PrettifyChanges = function (changes) {\n        // Shift all the changes down first\n        for (var i = 0; i < changes.length; i++) {\n            var change = changes[i];\n            var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n            var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop &&\n                change.modifiedStart + change.modifiedLength < modifiedStop &&\n                (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            var mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        // Shift changes back up until we hit empty or whitespace-only lines\n        for (var i = changes.length - 1; i >= 0; i--) {\n            var change = changes[i];\n            var originalStop = 0;\n            var modifiedStop = 0;\n            if (i > 0) {\n                var prevChange = changes[i - 1];\n                if (prevChange.originalLength > 0) {\n                    originalStop = prevChange.originalStart + prevChange.originalLength;\n                }\n                if (prevChange.modifiedLength > 0) {\n                    modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n                }\n            }\n            var checkOriginal = change.originalLength > 0;\n            var checkModified = change.modifiedLength > 0;\n            var bestDelta = 0;\n            var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (var delta = 1;; delta++) {\n                var originalStart = change.originalStart - delta;\n                var modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n        }\n        return changes;\n    };\n    LcsDiff.prototype._OriginalIsBoundary = function (index) {\n        if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.OriginalSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            var originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n        if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n            return true;\n        }\n        var element = this.ModifiedSequence.getElementAtIndex(index);\n        return (typeof element === 'string' && /^\\s*$/.test(element));\n    };\n    LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            var modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n        var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    };\n    /**\n     * Concatenates the two input DiffChange lists and returns the resulting\n     * list.\n     * @param The left changes\n     * @param The right changes\n     * @returns The concatenated list\n     */\n    LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n        var mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            // Since we break the problem down recursively, it is possible that we\n            // might recurse in the middle of a change thereby splitting it into\n            // two changes. Here in the combining stage, we detect and fuse those\n            // changes back together\n            var result = new Array(left.length + right.length - 1);\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            var result = new Array(left.length + right.length);\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    };\n    /**\n     * Returns true if the two changes overlap and can be merged into a single\n     * change\n     * @param left The left change\n     * @param right The right change\n     * @param mergedChange The merged change if the two overlap, null otherwise\n     * @returns True if the two changes overlap\n     */\n    LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            var originalStart = left.originalStart;\n            var originalLength = left.originalLength;\n            var modifiedStart = left.modifiedStart;\n            var modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = new _diffChange__WEBPACK_IMPORTED_MODULE_0__[\"DiffChange\"](originalStart, originalLength, modifiedStart, modifiedLength);\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    };\n    /**\n     * Helper method used to clip a diagonal index to the range of valid\n     * diagonals. This also decides whether or not the diagonal index,\n     * if it exceeds the boundary, should be clipped to the boundary or clipped\n     * one inside the boundary depending on the Even/Odd status of the boundary\n     * and numDifferences.\n     * @param diagonal The index of the diagonal to clip.\n     * @param numDifferences The current number of differences being iterated upon.\n     * @param diagonalBaseIndex The base reference diagonal.\n     * @param numDiagonals The total number of diagonals.\n     * @returns The clipped diagonal index.\n     */\n    LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            // Nothing to clip, its in range\n            return diagonal;\n        }\n        // diagonalsBelow: The number of diagonals below the reference diagonal\n        // diagonalsAbove: The number of diagonals above the reference diagonal\n        var diagonalsBelow = diagonalBaseIndex;\n        var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        var diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            var lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            var upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    };\n    return LcsDiff;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/diff/diff.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/diff/diffChange.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/diff/diffChange.js ***!
  \*******************************************************************************/
/*! exports provided: DiffChange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiffChange\", function() { return DiffChange; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Represents information about a specific difference between two sequences.\n */\nvar DiffChange = /** @class */ (function () {\n    /**\n     * Constructs a new DiffChange with the given sequence information\n     * and content.\n     */\n    function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n        //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    /**\n     * The end point (exclusive) of the change in the original sequence.\n     */\n    DiffChange.prototype.getOriginalEnd = function () {\n        return this.originalStart + this.originalLength;\n    };\n    /**\n     * The end point (exclusive) of the change in the modified sequence.\n     */\n    DiffChange.prototype.getModifiedEnd = function () {\n        return this.modifiedStart + this.modifiedLength;\n    };\n    return DiffChange;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/diff/diffChange.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/errors.js":
/*!**********************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/errors.js ***!
  \**********************************************************************/
/*! exports provided: ErrorHandler, errorHandler, onUnexpectedError, onUnexpectedExternalError, transformErrorForSerialization, isPromiseCanceledError, canceled, illegalArgument, illegalState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ErrorHandler\", function() { return ErrorHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"errorHandler\", function() { return errorHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onUnexpectedError\", function() { return onUnexpectedError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onUnexpectedExternalError\", function() { return onUnexpectedExternalError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformErrorForSerialization\", function() { return transformErrorForSerialization; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isPromiseCanceledError\", function() { return isPromiseCanceledError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"canceled\", function() { return canceled; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"illegalArgument\", function() { return illegalArgument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"illegalState\", function() { return illegalState; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(function () {\n                if (e.stack) {\n                    throw new Error(e.message + '\\n\\n' + e.stack);\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    ErrorHandler.prototype.emit = function (e) {\n        this.listeners.forEach(function (listener) {\n            listener(e);\n        });\n    };\n    ErrorHandler.prototype.onUnexpectedError = function (e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    };\n    // For external errors, we don't want the listeners to be called\n    ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n        this.unexpectedErrorHandler(e);\n    };\n    return ErrorHandler;\n}());\n\nvar errorHandler = new ErrorHandler();\nfunction onUnexpectedError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nfunction onUnexpectedExternalError(e) {\n    // ignore errors from cancelled promises\n    if (!isPromiseCanceledError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nfunction transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        var name_1 = error.name, message = error.message;\n        var stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name: name_1,\n            message: message,\n            stack: stack\n        };\n    }\n    // return as is\n    return error;\n}\nvar canceledName = 'Canceled';\n/**\n * Checks if the given error is a promise in canceled state\n */\nfunction isPromiseCanceledError(error) {\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n/**\n * Returns an error that signals cancellation.\n */\nfunction canceled() {\n    var error = new Error(canceledName);\n    error.name = error.message;\n    return error;\n}\nfunction illegalArgument(name) {\n    if (name) {\n        return new Error(\"Illegal argument: \" + name);\n    }\n    else {\n        return new Error('Illegal argument');\n    }\n}\nfunction illegalState(name) {\n    if (name) {\n        return new Error(\"Illegal state: \" + name);\n    }\n    else {\n        return new Error('Illegal state');\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/errors.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/event.js":
/*!*********************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/event.js ***!
  \*********************************************************************/
/*! exports provided: Event, Emitter, EventMultiplexer, EventBufferer, Relay */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Event\", function() { return Event; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Emitter\", function() { return Emitter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventMultiplexer\", function() { return EventMultiplexer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EventBufferer\", function() { return EventBufferer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Relay\", function() { return Relay; });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ \"./node_modules/monaco-editor-core/esm/vs/base/common/errors.js\");\n/* harmony import */ var _functional__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functional */ \"./node_modules/monaco-editor-core/esm/vs/base/common/functional.js\");\n/* harmony import */ var _lifecycle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lifecycle */ \"./node_modules/monaco-editor-core/esm/vs/base/common/lifecycle.js\");\n/* harmony import */ var _linkedList__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./linkedList */ \"./node_modules/monaco-editor-core/esm/vs/base/common/linkedList.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\nvar Event;\n(function (Event) {\n    var _disposable = { dispose: function () { } };\n    Event.None = function () { return _disposable; };\n    /**\n     * Given an event, returns another event which only fires once.\n     */\n    function once(event) {\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            // we need this, in case the event fires during the listener call\n            var didFire = false;\n            var result;\n            result = event(function (e) {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    /**\n     * Given an event and a `map` function, returns another event which maps each element\n     * throught the mapping function.\n     */\n    function map(event, map) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n        });\n    }\n    Event.map = map;\n    /**\n     * Given an event and an `each` function, returns another identical event and calls\n     * the `each` function per each element.\n     */\n    function forEach(event, each) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (i) { each(i); listener.call(thisArgs, i); }, null, disposables);\n        });\n    }\n    Event.forEach = forEach;\n    function filter(event, filter) {\n        return snapshot(function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n        });\n    }\n    Event.filter = filter;\n    /**\n     * Given an event, returns the same event but typed as `Event<void>`.\n     */\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    /**\n     * Given a collection of events, returns a single event which emits\n     * whenever any of the provided events emit.\n     */\n    function any() {\n        var events = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            events[_i] = arguments[_i];\n        }\n        return function (listener, thisArgs, disposables) {\n            if (thisArgs === void 0) { thisArgs = null; }\n            return Object(_lifecycle__WEBPACK_IMPORTED_MODULE_2__[\"combinedDisposable\"])(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\n        };\n    }\n    Event.any = any;\n    /**\n     * Given an event and a `merge` function, returns another event which maps each element\n     * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n     */\n    function reduce(event, merge, initial) {\n        var output = initial;\n        return map(event, function (e) {\n            output = merge(output, e);\n            return output;\n        });\n    }\n    Event.reduce = reduce;\n    /**\n     * Given a chain of event processing functions (filter, map, etc), each\n     * function will be invoked per event & per listener. Snapshotting an event\n     * chain allows each function to be invoked just once per event.\n     */\n    function snapshot(event) {\n        var listener;\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                listener = event(emitter.fire, emitter);\n            },\n            onLastListenerRemove: function () {\n                listener.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.snapshot = snapshot;\n    function debounce(event, merge, delay, leading, leakWarningThreshold) {\n        if (delay === void 0) { delay = 100; }\n        if (leading === void 0) { leading = false; }\n        var subscription;\n        var output = undefined;\n        var handle = undefined;\n        var numDebouncedCalls = 0;\n        var emitter = new Emitter({\n            leakWarningThreshold: leakWarningThreshold,\n            onFirstListenerAdd: function () {\n                subscription = event(function (cur) {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                    }\n                    clearTimeout(handle);\n                    handle = setTimeout(function () {\n                        var _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    }, delay);\n                });\n            },\n            onLastListenerRemove: function () {\n                subscription.dispose();\n            }\n        });\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    /**\n     * Given an event, it returns another event which fires only once and as soon as\n     * the input event emits. The event data is the number of millis it took for the\n     * event to fire.\n     */\n    function stopwatch(event) {\n        var start = new Date().getTime();\n        return map(once(event), function (_) { return new Date().getTime() - start; });\n    }\n    Event.stopwatch = stopwatch;\n    /**\n     * Given an event, it returns another event which fires only when the event\n     * element changes.\n     */\n    function latch(event) {\n        var firstCall = true;\n        var cache;\n        return filter(event, function (value) {\n            var shouldEmit = firstCall || value !== cache;\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        });\n    }\n    Event.latch = latch;\n    /**\n     * Buffers the provided event until a first listener comes\n     * along, at which point fire all the events at once and\n     * pipe the event from then on.\n     *\n     * ```typescript\n     * const emitter = new Emitter<number>();\n     * const event = emitter.event;\n     * const bufferedEvent = buffer(event);\n     *\n     * emitter.fire(1);\n     * emitter.fire(2);\n     * emitter.fire(3);\n     * // nothing...\n     *\n     * const listener = bufferedEvent(num => console.log(num));\n     * // 1, 2, 3\n     *\n     * emitter.fire(4);\n     * // 4\n     * ```\n     */\n    function buffer(event, nextTick, _buffer) {\n        if (nextTick === void 0) { nextTick = false; }\n        if (_buffer === void 0) { _buffer = []; }\n        var buffer = _buffer.slice();\n        var listener = event(function (e) {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        var flush = function () {\n            if (buffer) {\n                buffer.forEach(function (e) { return emitter.fire(e); });\n            }\n            buffer = null;\n        };\n        var emitter = new Emitter({\n            onFirstListenerAdd: function () {\n                if (!listener) {\n                    listener = event(function (e) { return emitter.fire(e); });\n                }\n            },\n            onFirstListenerDidAdd: function () {\n                if (buffer) {\n                    if (nextTick) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onLastListenerRemove: function () {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        });\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    /**\n     * Similar to `buffer` but it buffers indefinitely and repeats\n     * the buffered events to every new listener.\n     */\n    function echo(event, nextTick, buffer) {\n        if (nextTick === void 0) { nextTick = false; }\n        if (buffer === void 0) { buffer = []; }\n        buffer = buffer.slice();\n        event(function (e) {\n            buffer.push(e);\n            emitter.fire(e);\n        });\n        var flush = function (listener, thisArgs) { return buffer.forEach(function (e) { return listener.call(thisArgs, e); }); };\n        var emitter = new Emitter({\n            onListenerDidAdd: function (emitter, listener, thisArgs) {\n                if (nextTick) {\n                    setTimeout(function () { return flush(listener, thisArgs); });\n                }\n                else {\n                    flush(listener, thisArgs);\n                }\n            }\n        });\n        return emitter.event;\n    }\n    Event.echo = echo;\n    var ChainableEvent = /** @class */ (function () {\n        function ChainableEvent(event) {\n            this.event = event;\n        }\n        ChainableEvent.prototype.map = function (fn) {\n            return new ChainableEvent(map(this.event, fn));\n        };\n        ChainableEvent.prototype.forEach = function (fn) {\n            return new ChainableEvent(forEach(this.event, fn));\n        };\n        ChainableEvent.prototype.filter = function (fn) {\n            return new ChainableEvent(filter(this.event, fn));\n        };\n        ChainableEvent.prototype.reduce = function (merge, initial) {\n            return new ChainableEvent(reduce(this.event, merge, initial));\n        };\n        ChainableEvent.prototype.latch = function () {\n            return new ChainableEvent(latch(this.event));\n        };\n        ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n            return this.event(listener, thisArgs, disposables);\n        };\n        ChainableEvent.prototype.once = function (listener, thisArgs, disposables) {\n            return once(this.event)(listener, thisArgs, disposables);\n        };\n        return ChainableEvent;\n    }());\n    function chain(event) {\n        return new ChainableEvent(event);\n    }\n    Event.chain = chain;\n    function fromNodeEventEmitter(emitter, eventName, map) {\n        if (map === void 0) { map = function (id) { return id; }; }\n        var fn = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return result.fire(map.apply(void 0, args));\n        };\n        var onFirstListenerAdd = function () { return emitter.on(eventName, fn); };\n        var onLastListenerRemove = function () { return emitter.removeListener(eventName, fn); };\n        var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromPromise(promise) {\n        var emitter = new Emitter();\n        var shouldEmit = false;\n        promise\n            .then(undefined, function () { return null; })\n            .then(function () {\n            if (!shouldEmit) {\n                setTimeout(function () { return emitter.fire(undefined); }, 0);\n            }\n            else {\n                emitter.fire(undefined);\n            }\n        });\n        shouldEmit = true;\n        return emitter.event;\n    }\n    Event.fromPromise = fromPromise;\n    function toPromise(event) {\n        return new Promise(function (c) { return once(event)(c); });\n    }\n    Event.toPromise = toPromise;\n})(Event || (Event = {}));\nvar _globalLeakWarningThreshold = -1;\nvar LeakageMonitor = /** @class */ (function () {\n    function LeakageMonitor(customThreshold, name) {\n        if (name === void 0) { name = Math.random().toString(18).slice(2, 5); }\n        this.customThreshold = customThreshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    LeakageMonitor.prototype.dispose = function () {\n        if (this._stacks) {\n            this._stacks.clear();\n        }\n    };\n    LeakageMonitor.prototype.check = function (listenerCount) {\n        var _this = this;\n        var threshold = _globalLeakWarningThreshold;\n        if (typeof this.customThreshold === 'number') {\n            threshold = this.customThreshold;\n        }\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = new Map();\n        }\n        var stack = new Error().stack.split('\\n').slice(3).join('\\n');\n        var count = (this._stacks.get(stack) || 0);\n        this._stacks.set(stack, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            // only warn on first exceed and then every time the limit\n            // is exceeded by 50% again\n            this._warnCountdown = threshold * 0.5;\n            // find most frequent listener and print warning\n            var topStack_1;\n            var topCount_1 = 0;\n            this._stacks.forEach(function (count, stack) {\n                if (!topStack_1 || topCount_1 < count) {\n                    topStack_1 = stack;\n                    topCount_1 = count;\n                }\n            });\n            console.warn(\"[\" + this.name + \"] potential listener LEAK detected, having \" + listenerCount + \" listeners already. MOST frequent listener (\" + topCount_1 + \"):\");\n            console.warn(topStack_1);\n        }\n        return function () {\n            var count = (_this._stacks.get(stack) || 0);\n            _this._stacks.set(stack, count - 1);\n        };\n    };\n    return LeakageMonitor;\n}());\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n    class Document {\n\n        private _onDidChange = new Emitter<(value:string)=>any>();\n\n        public onDidChange = this._onDidChange.event;\n\n        // getter-style\n        // get onDidChange(): Event<(value:string)=>any> {\n        // \treturn this._onDidChange.event;\n        // }\n\n        private _doIt() {\n            //...\n            this._onDidChange.fire(value);\n        }\n    }\n */\nvar Emitter = /** @class */ (function () {\n    function Emitter(options) {\n        this._disposed = false;\n        this._options = options;\n        this._leakageMon = _globalLeakWarningThreshold > 0\n            ? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n            : undefined;\n    }\n    Object.defineProperty(Emitter.prototype, \"event\", {\n        /**\n         * For the public to allow to subscribe\n         * to events from this Emitter\n         */\n        get: function () {\n            var _this = this;\n            if (!this._event) {\n                this._event = function (listener, thisArgs, disposables) {\n                    if (!_this._listeners) {\n                        _this._listeners = new _linkedList__WEBPACK_IMPORTED_MODULE_3__[\"LinkedList\"]();\n                    }\n                    var firstListener = _this._listeners.isEmpty();\n                    if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n                        _this._options.onFirstListenerAdd(_this);\n                    }\n                    var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                    if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n                        _this._options.onFirstListenerDidAdd(_this);\n                    }\n                    if (_this._options && _this._options.onListenerDidAdd) {\n                        _this._options.onListenerDidAdd(_this, listener, thisArgs);\n                    }\n                    // check and record this emitter for potential leakage\n                    var removeMonitor;\n                    if (_this._leakageMon) {\n                        removeMonitor = _this._leakageMon.check(_this._listeners.size);\n                    }\n                    var result;\n                    result = {\n                        dispose: function () {\n                            if (removeMonitor) {\n                                removeMonitor();\n                            }\n                            result.dispose = Emitter._noop;\n                            if (!_this._disposed) {\n                                remove();\n                                if (_this._options && _this._options.onLastListenerRemove) {\n                                    var hasListeners = (_this._listeners && !_this._listeners.isEmpty());\n                                    if (!hasListeners) {\n                                        _this._options.onLastListenerRemove(_this);\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    if (Array.isArray(disposables)) {\n                        disposables.push(result);\n                    }\n                    return result;\n                };\n            }\n            return this._event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    Emitter.prototype.fire = function (event) {\n        if (this._listeners) {\n            // put all [listener,event]-pairs into delivery queue\n            // then emit all event. an inner/nested event might be\n            // the driver of this\n            if (!this._deliveryQueue) {\n                this._deliveryQueue = [];\n            }\n            for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n                this._deliveryQueue.push([e.value, event]);\n            }\n            while (this._deliveryQueue.length > 0) {\n                var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\n                try {\n                    if (typeof listener === 'function') {\n                        listener.call(undefined, event_1);\n                    }\n                    else {\n                        listener[0].call(listener[1], event_1);\n                    }\n                }\n                catch (e) {\n                    Object(_errors__WEBPACK_IMPORTED_MODULE_0__[\"onUnexpectedError\"])(e);\n                }\n            }\n        }\n    };\n    Emitter.prototype.dispose = function () {\n        if (this._listeners) {\n            this._listeners = undefined;\n        }\n        if (this._deliveryQueue) {\n            this._deliveryQueue.length = 0;\n        }\n        if (this._leakageMon) {\n            this._leakageMon.dispose();\n        }\n        this._disposed = true;\n    };\n    Emitter._noop = function () { };\n    return Emitter;\n}());\n\nvar EventMultiplexer = /** @class */ (function () {\n    function EventMultiplexer() {\n        var _this = this;\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = new Emitter({\n            onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\n            onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\n        });\n    }\n    Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n        get: function () {\n            return this.emitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    EventMultiplexer.prototype.add = function (event) {\n        var _this = this;\n        var e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        var dispose = function () {\n            if (_this.hasListeners) {\n                _this.unhook(e);\n            }\n            var idx = _this.events.indexOf(e);\n            _this.events.splice(idx, 1);\n        };\n        return Object(_lifecycle__WEBPACK_IMPORTED_MODULE_2__[\"toDisposable\"])(Object(_functional__WEBPACK_IMPORTED_MODULE_1__[\"once\"])(dispose));\n    };\n    EventMultiplexer.prototype.onFirstListenerAdd = function () {\n        var _this = this;\n        this.hasListeners = true;\n        this.events.forEach(function (e) { return _this.hook(e); });\n    };\n    EventMultiplexer.prototype.onLastListenerRemove = function () {\n        var _this = this;\n        this.hasListeners = false;\n        this.events.forEach(function (e) { return _this.unhook(e); });\n    };\n    EventMultiplexer.prototype.hook = function (e) {\n        var _this = this;\n        e.listener = e.event(function (r) { return _this.emitter.fire(r); });\n    };\n    EventMultiplexer.prototype.unhook = function (e) {\n        if (e.listener) {\n            e.listener.dispose();\n        }\n        e.listener = null;\n    };\n    EventMultiplexer.prototype.dispose = function () {\n        this.emitter.dispose();\n    };\n    return EventMultiplexer;\n}());\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nvar EventBufferer = /** @class */ (function () {\n    function EventBufferer() {\n        this.buffers = [];\n    }\n    EventBufferer.prototype.wrapEvent = function (event) {\n        var _this = this;\n        return function (listener, thisArgs, disposables) {\n            return event(function (i) {\n                var buffer = _this.buffers[_this.buffers.length - 1];\n                if (buffer) {\n                    buffer.push(function () { return listener.call(thisArgs, i); });\n                }\n                else {\n                    listener.call(thisArgs, i);\n                }\n            }, undefined, disposables);\n        };\n    };\n    EventBufferer.prototype.bufferEvents = function (fn) {\n        var buffer = [];\n        this.buffers.push(buffer);\n        var r = fn();\n        this.buffers.pop();\n        buffer.forEach(function (flush) { return flush(); });\n        return r;\n    };\n    return EventBufferer;\n}());\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nvar Relay = /** @class */ (function () {\n    function Relay() {\n        var _this = this;\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = _lifecycle__WEBPACK_IMPORTED_MODULE_2__[\"Disposable\"].None;\n        this.emitter = new Emitter({\n            onFirstListenerDidAdd: function () {\n                _this.listening = true;\n                _this.inputEventListener = _this.inputEvent(_this.emitter.fire, _this.emitter);\n            },\n            onLastListenerRemove: function () {\n                _this.listening = false;\n                _this.inputEventListener.dispose();\n            }\n        });\n        this.event = this.emitter.event;\n    }\n    Object.defineProperty(Relay.prototype, \"input\", {\n        set: function (event) {\n            this.inputEvent = event;\n            if (this.listening) {\n                this.inputEventListener.dispose();\n                this.inputEventListener = event(this.emitter.fire, this.emitter);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Relay.prototype.dispose = function () {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    };\n    return Relay;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/event.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/functional.js":
/*!**************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/functional.js ***!
  \**************************************************************************/
/*! exports provided: once */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"once\", function() { return once; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction once(fn) {\n    var _this = this;\n    var didCall = false;\n    var result;\n    return function () {\n        if (didCall) {\n            return result;\n        }\n        didCall = true;\n        result = fn.apply(_this, arguments);\n        return result;\n    };\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/functional.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/iterator.js":
/*!************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/iterator.js ***!
  \************************************************************************/
/*! exports provided: FIN, Iterator, getSequenceIterator, ArrayIterator, ArrayNavigator, MappedIterator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FIN\", function() { return FIN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Iterator\", function() { return Iterator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSequenceIterator\", function() { return getSequenceIterator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ArrayIterator\", function() { return ArrayIterator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ArrayNavigator\", function() { return ArrayNavigator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MappedIterator\", function() { return MappedIterator; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar FIN = { done: true, value: undefined };\nvar Iterator;\n(function (Iterator) {\n    var _empty = {\n        next: function () {\n            return FIN;\n        }\n    };\n    function empty() {\n        return _empty;\n    }\n    Iterator.empty = empty;\n    function fromArray(array, index, length) {\n        if (index === void 0) { index = 0; }\n        if (length === void 0) { length = array.length; }\n        return {\n            next: function () {\n                if (index >= length) {\n                    return FIN;\n                }\n                return { done: false, value: array[index++] };\n            }\n        };\n    }\n    Iterator.fromArray = fromArray;\n    function from(elements) {\n        if (!elements) {\n            return Iterator.empty();\n        }\n        else if (Array.isArray(elements)) {\n            return Iterator.fromArray(elements);\n        }\n        else {\n            return elements;\n        }\n    }\n    Iterator.from = from;\n    function map(iterator, fn) {\n        return {\n            next: function () {\n                var element = iterator.next();\n                if (element.done) {\n                    return FIN;\n                }\n                else {\n                    return { done: false, value: fn(element.value) };\n                }\n            }\n        };\n    }\n    Iterator.map = map;\n    function filter(iterator, fn) {\n        return {\n            next: function () {\n                while (true) {\n                    var element = iterator.next();\n                    if (element.done) {\n                        return FIN;\n                    }\n                    if (fn(element.value)) {\n                        return { done: false, value: element.value };\n                    }\n                }\n            }\n        };\n    }\n    Iterator.filter = filter;\n    function forEach(iterator, fn) {\n        for (var next = iterator.next(); !next.done; next = iterator.next()) {\n            fn(next.value);\n        }\n    }\n    Iterator.forEach = forEach;\n    function collect(iterator) {\n        var result = [];\n        forEach(iterator, function (value) { return result.push(value); });\n        return result;\n    }\n    Iterator.collect = collect;\n})(Iterator || (Iterator = {}));\nfunction getSequenceIterator(arg) {\n    if (Array.isArray(arg)) {\n        return Iterator.fromArray(arg);\n    }\n    else {\n        return arg;\n    }\n}\nvar ArrayIterator = /** @class */ (function () {\n    function ArrayIterator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        this.items = items;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n    }\n    ArrayIterator.prototype.next = function () {\n        this.index = Math.min(this.index + 1, this.end);\n        return this.current();\n    };\n    ArrayIterator.prototype.current = function () {\n        if (this.index === this.start - 1 || this.index === this.end) {\n            return null;\n        }\n        return this.items[this.index];\n    };\n    return ArrayIterator;\n}());\n\nvar ArrayNavigator = /** @class */ (function (_super) {\n    __extends(ArrayNavigator, _super);\n    function ArrayNavigator(items, start, end, index) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = items.length; }\n        if (index === void 0) { index = start - 1; }\n        return _super.call(this, items, start, end, index) || this;\n    }\n    ArrayNavigator.prototype.current = function () {\n        return _super.prototype.current.call(this);\n    };\n    ArrayNavigator.prototype.previous = function () {\n        this.index = Math.max(this.index - 1, this.start - 1);\n        return this.current();\n    };\n    ArrayNavigator.prototype.first = function () {\n        this.index = this.start;\n        return this.current();\n    };\n    ArrayNavigator.prototype.last = function () {\n        this.index = this.end - 1;\n        return this.current();\n    };\n    ArrayNavigator.prototype.parent = function () {\n        return null;\n    };\n    return ArrayNavigator;\n}(ArrayIterator));\n\nvar MappedIterator = /** @class */ (function () {\n    function MappedIterator(iterator, fn) {\n        this.iterator = iterator;\n        this.fn = fn;\n        // noop\n    }\n    MappedIterator.prototype.next = function () { return this.fn(this.iterator.next()); };\n    return MappedIterator;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/iterator.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/keyCodes.js":
/*!************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/keyCodes.js ***!
  \************************************************************************/
/*! exports provided: KeyCodeUtils, KeyChord, createKeybinding, createSimpleKeybinding, SimpleKeybinding, ChordKeybinding, ResolvedKeybindingPart, ResolvedKeybinding */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyCodeUtils\", function() { return KeyCodeUtils; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyChord\", function() { return KeyChord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createKeybinding\", function() { return createKeybinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createSimpleKeybinding\", function() { return createSimpleKeybinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SimpleKeybinding\", function() { return SimpleKeybinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ChordKeybinding\", function() { return ChordKeybinding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResolvedKeybindingPart\", function() { return ResolvedKeybindingPart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ResolvedKeybinding\", function() { return ResolvedKeybinding; });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ \"./node_modules/monaco-editor-core/esm/vs/base/common/errors.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar KeyCodeStrMap = /** @class */ (function () {\n    function KeyCodeStrMap() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    KeyCodeStrMap.prototype.define = function (keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    };\n    KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n        return this._keyCodeToStr[keyCode];\n    };\n    KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    };\n    return KeyCodeStrMap;\n}());\nvar uiMap = new KeyCodeStrMap();\nvar userSettingsUSMap = new KeyCodeStrMap();\nvar userSettingsGeneralMap = new KeyCodeStrMap();\n(function () {\n    function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n        if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\n        if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\n        uiMap.define(keyCode, uiLabel);\n        userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n        userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n    }\n    define(0 /* Unknown */, 'unknown');\n    define(1 /* Backspace */, 'Backspace');\n    define(2 /* Tab */, 'Tab');\n    define(3 /* Enter */, 'Enter');\n    define(4 /* Shift */, 'Shift');\n    define(5 /* Ctrl */, 'Ctrl');\n    define(6 /* Alt */, 'Alt');\n    define(7 /* PauseBreak */, 'PauseBreak');\n    define(8 /* CapsLock */, 'CapsLock');\n    define(9 /* Escape */, 'Escape');\n    define(10 /* Space */, 'Space');\n    define(11 /* PageUp */, 'PageUp');\n    define(12 /* PageDown */, 'PageDown');\n    define(13 /* End */, 'End');\n    define(14 /* Home */, 'Home');\n    define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n    define(16 /* UpArrow */, 'UpArrow', 'Up');\n    define(17 /* RightArrow */, 'RightArrow', 'Right');\n    define(18 /* DownArrow */, 'DownArrow', 'Down');\n    define(19 /* Insert */, 'Insert');\n    define(20 /* Delete */, 'Delete');\n    define(21 /* KEY_0 */, '0');\n    define(22 /* KEY_1 */, '1');\n    define(23 /* KEY_2 */, '2');\n    define(24 /* KEY_3 */, '3');\n    define(25 /* KEY_4 */, '4');\n    define(26 /* KEY_5 */, '5');\n    define(27 /* KEY_6 */, '6');\n    define(28 /* KEY_7 */, '7');\n    define(29 /* KEY_8 */, '8');\n    define(30 /* KEY_9 */, '9');\n    define(31 /* KEY_A */, 'A');\n    define(32 /* KEY_B */, 'B');\n    define(33 /* KEY_C */, 'C');\n    define(34 /* KEY_D */, 'D');\n    define(35 /* KEY_E */, 'E');\n    define(36 /* KEY_F */, 'F');\n    define(37 /* KEY_G */, 'G');\n    define(38 /* KEY_H */, 'H');\n    define(39 /* KEY_I */, 'I');\n    define(40 /* KEY_J */, 'J');\n    define(41 /* KEY_K */, 'K');\n    define(42 /* KEY_L */, 'L');\n    define(43 /* KEY_M */, 'M');\n    define(44 /* KEY_N */, 'N');\n    define(45 /* KEY_O */, 'O');\n    define(46 /* KEY_P */, 'P');\n    define(47 /* KEY_Q */, 'Q');\n    define(48 /* KEY_R */, 'R');\n    define(49 /* KEY_S */, 'S');\n    define(50 /* KEY_T */, 'T');\n    define(51 /* KEY_U */, 'U');\n    define(52 /* KEY_V */, 'V');\n    define(53 /* KEY_W */, 'W');\n    define(54 /* KEY_X */, 'X');\n    define(55 /* KEY_Y */, 'Y');\n    define(56 /* KEY_Z */, 'Z');\n    define(57 /* Meta */, 'Meta');\n    define(58 /* ContextMenu */, 'ContextMenu');\n    define(59 /* F1 */, 'F1');\n    define(60 /* F2 */, 'F2');\n    define(61 /* F3 */, 'F3');\n    define(62 /* F4 */, 'F4');\n    define(63 /* F5 */, 'F5');\n    define(64 /* F6 */, 'F6');\n    define(65 /* F7 */, 'F7');\n    define(66 /* F8 */, 'F8');\n    define(67 /* F9 */, 'F9');\n    define(68 /* F10 */, 'F10');\n    define(69 /* F11 */, 'F11');\n    define(70 /* F12 */, 'F12');\n    define(71 /* F13 */, 'F13');\n    define(72 /* F14 */, 'F14');\n    define(73 /* F15 */, 'F15');\n    define(74 /* F16 */, 'F16');\n    define(75 /* F17 */, 'F17');\n    define(76 /* F18 */, 'F18');\n    define(77 /* F19 */, 'F19');\n    define(78 /* NumLock */, 'NumLock');\n    define(79 /* ScrollLock */, 'ScrollLock');\n    define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n    define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n    define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n    define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n    define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n    define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n    define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n    define(110 /* ABNT_C1 */, 'ABNT_C1');\n    define(111 /* ABNT_C2 */, 'ABNT_C2');\n    define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n    define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n    define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n    define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n    define(91 /* OEM_8 */, 'OEM_8');\n    define(92 /* OEM_102 */, 'OEM_102');\n    define(93 /* NUMPAD_0 */, 'NumPad0');\n    define(94 /* NUMPAD_1 */, 'NumPad1');\n    define(95 /* NUMPAD_2 */, 'NumPad2');\n    define(96 /* NUMPAD_3 */, 'NumPad3');\n    define(97 /* NUMPAD_4 */, 'NumPad4');\n    define(98 /* NUMPAD_5 */, 'NumPad5');\n    define(99 /* NUMPAD_6 */, 'NumPad6');\n    define(100 /* NUMPAD_7 */, 'NumPad7');\n    define(101 /* NUMPAD_8 */, 'NumPad8');\n    define(102 /* NUMPAD_9 */, 'NumPad9');\n    define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n    define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n    define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n    define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n    define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n    define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n})();\nvar KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nfunction KeyChord(firstPart, secondPart) {\n    var chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nfunction createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    var firstPart = (keybinding & 0x0000FFFF) >>> 0;\n    var chordPart = (keybinding & 0xFFFF0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding([\n            createSimpleKeybinding(firstPart, OS),\n            createSimpleKeybinding(chordPart, OS)\n        ]);\n    }\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nfunction createSimpleKeybinding(keybinding, OS) {\n    var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    var altKey = (keybinding & 512 /* Alt */ ? true : false);\n    var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    var keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nvar SimpleKeybinding = /** @class */ (function () {\n    function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    SimpleKeybinding.prototype.equals = function (other) {\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    };\n    SimpleKeybinding.prototype.isModifierKey = function () {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    };\n    SimpleKeybinding.prototype.toChord = function () {\n        return new ChordKeybinding([this]);\n    };\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    };\n    return SimpleKeybinding;\n}());\n\nvar ChordKeybinding = /** @class */ (function () {\n    function ChordKeybinding(parts) {\n        if (parts.length === 0) {\n            throw Object(_errors__WEBPACK_IMPORTED_MODULE_0__[\"illegalArgument\"])(\"parts\");\n        }\n        this.parts = parts;\n    }\n    ChordKeybinding.prototype.equals = function (other) {\n        if (other === null) {\n            return false;\n        }\n        if (this.parts.length !== other.parts.length) {\n            return false;\n        }\n        for (var i = 0; i < this.parts.length; i++) {\n            if (!this.parts[i].equals(other.parts[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return ChordKeybinding;\n}());\n\nvar ResolvedKeybindingPart = /** @class */ (function () {\n    function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n    return ResolvedKeybindingPart;\n}());\n\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nvar ResolvedKeybinding = /** @class */ (function () {\n    function ResolvedKeybinding() {\n    }\n    return ResolvedKeybinding;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/keyCodes.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/lifecycle.js":
/*!*************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/lifecycle.js ***!
  \*************************************************************************/
/*! exports provided: isDisposable, dispose, combinedDisposable, toDisposable, Disposable, ImmortalReference */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDisposable\", function() { return isDisposable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dispose\", function() { return dispose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"combinedDisposable\", function() { return combinedDisposable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toDisposable\", function() { return toDisposable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Disposable\", function() { return Disposable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImmortalReference\", function() { return ImmortalReference; });\nfunction isDisposable(thing) {\n    return typeof thing.dispose === 'function'\n        && thing.dispose.length === 0;\n}\nfunction dispose(first) {\n    var rest = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        rest[_i - 1] = arguments[_i];\n    }\n    if (Array.isArray(first)) {\n        first.forEach(function (d) { return d && d.dispose(); });\n        return [];\n    }\n    else if (rest.length === 0) {\n        if (first) {\n            first.dispose();\n            return first;\n        }\n        return undefined;\n    }\n    else {\n        dispose(first);\n        dispose(rest);\n        return [];\n    }\n}\nfunction combinedDisposable(disposables) {\n    return { dispose: function () { return dispose(disposables); } };\n}\nfunction toDisposable(fn) {\n    return { dispose: function () { fn(); } };\n}\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        this._toDispose = [];\n        this._lifecycle_disposable_isDisposed = false;\n    }\n    Disposable.prototype.dispose = function () {\n        this._lifecycle_disposable_isDisposed = true;\n        this._toDispose = dispose(this._toDispose);\n    };\n    Disposable.prototype._register = function (t) {\n        if (this._lifecycle_disposable_isDisposed) {\n            console.warn('Registering disposable on object that has already been disposed.');\n            t.dispose();\n        }\n        else {\n            this._toDispose.push(t);\n        }\n        return t;\n    };\n    Disposable.None = Object.freeze({ dispose: function () { } });\n    return Disposable;\n}());\n\nvar ImmortalReference = /** @class */ (function () {\n    function ImmortalReference(object) {\n        this.object = object;\n    }\n    ImmortalReference.prototype.dispose = function () { };\n    return ImmortalReference;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/lifecycle.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/linkedList.js":
/*!**************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/linkedList.js ***!
  \**************************************************************************/
/*! exports provided: LinkedList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LinkedList\", function() { return LinkedList; });\n/* harmony import */ var _iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iterator */ \"./node_modules/monaco-editor-core/esm/vs/base/common/iterator.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar Node = /** @class */ (function () {\n    function Node(element) {\n        this.element = element;\n    }\n    return Node;\n}());\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n        this._size = 0;\n    }\n    Object.defineProperty(LinkedList.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LinkedList.prototype.isEmpty = function () {\n        return !this._first;\n    };\n    LinkedList.prototype.unshift = function (element) {\n        return this._insert(element, false);\n    };\n    LinkedList.prototype.push = function (element) {\n        return this._insert(element, true);\n    };\n    LinkedList.prototype._insert = function (element, atTheEnd) {\n        var newNode = new Node(element);\n        if (!this._first) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            var oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            var oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        return this._remove.bind(this, newNode);\n    };\n    LinkedList.prototype.shift = function () {\n        if (!this._first) {\n            return undefined;\n        }\n        else {\n            var res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    };\n    LinkedList.prototype._remove = function (node) {\n        var candidate = this._first;\n        while (candidate instanceof Node) {\n            if (candidate !== node) {\n                candidate = candidate.next;\n                continue;\n            }\n            if (candidate.prev && candidate.next) {\n                // middle\n                var anchor = candidate.prev;\n                anchor.next = candidate.next;\n                candidate.next.prev = anchor;\n            }\n            else if (!candidate.prev && !candidate.next) {\n                // only node\n                this._first = undefined;\n                this._last = undefined;\n            }\n            else if (!candidate.next) {\n                // last\n                this._last = this._last.prev;\n                this._last.next = undefined;\n            }\n            else if (!candidate.prev) {\n                // first\n                this._first = this._first.next;\n                this._first.prev = undefined;\n            }\n            // done\n            this._size -= 1;\n            break;\n        }\n    };\n    LinkedList.prototype.iterator = function () {\n        var element;\n        var node = this._first;\n        return {\n            next: function () {\n                if (!node) {\n                    return _iterator__WEBPACK_IMPORTED_MODULE_0__[\"FIN\"];\n                }\n                if (!element) {\n                    element = { done: false, value: node.element };\n                }\n                else {\n                    element.value = node.element;\n                }\n                node = node.next;\n                return element;\n            }\n        };\n    };\n    return LinkedList;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/linkedList.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/platform.js":
/*!************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/platform.js ***!
  \************************************************************************/
/*! exports provided: LANGUAGE_DEFAULT, isWindows, isMacintosh, isLinux, isNative, isWeb, globals, setImmediate, OS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LANGUAGE_DEFAULT\", function() { return LANGUAGE_DEFAULT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isWindows\", function() { return isWindows; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isMacintosh\", function() { return isMacintosh; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isLinux\", function() { return isLinux; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNative\", function() { return isNative; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isWeb\", function() { return isWeb; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"globals\", function() { return globals; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setImmediate\", function() { return setImmediate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OS\", function() { return OS; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar LANGUAGE_DEFAULT = 'en';\nvar _isWindows = false;\nvar _isMacintosh = false;\nvar _isLinux = false;\nvar _isNative = false;\nvar _isWeb = false;\nvar _locale = undefined;\nvar _language = LANGUAGE_DEFAULT;\nvar _translationsConfigFile = undefined;\nvar isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n// OS detection\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    var userAgent = navigator.userAgent;\n    _isWindows = userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n    _isLinux = userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\nelse if (typeof process === 'object') {\n    _isWindows = (process.platform === 'win32');\n    _isMacintosh = (process.platform === 'darwin');\n    _isLinux = (process.platform === 'linux');\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            var nlsConfig = JSON.parse(rawNlsConfig);\n            var resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nvar _platform = 0 /* Web */;\nif (_isNative) {\n    if (_isMacintosh) {\n        _platform = 1 /* Mac */;\n    }\n    else if (_isWindows) {\n        _platform = 3 /* Windows */;\n    }\n    else if (_isLinux) {\n        _platform = 2 /* Linux */;\n    }\n}\nvar isWindows = _isWindows;\nvar isMacintosh = _isMacintosh;\nvar isLinux = _isLinux;\nvar isNative = _isNative;\nvar isWeb = _isWeb;\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nvar globals = _globals;\nvar _setImmediate = null;\nfunction setImmediate(callback) {\n    if (_setImmediate === null) {\n        if (globals.setImmediate) {\n            _setImmediate = globals.setImmediate.bind(globals);\n        }\n        else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n            _setImmediate = process.nextTick.bind(process);\n        }\n        else {\n            _setImmediate = globals.setTimeout.bind(globals);\n        }\n    }\n    return _setImmediate(callback);\n}\nvar OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/platform.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/strings.js":
/*!***********************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/strings.js ***!
  \***********************************************************************/
/*! exports provided: empty, isFalsyOrWhitespace, pad, format, escape, escapeRegExpCharacters, trim, ltrim, rtrim, convertSimple2RegExpPattern, startsWith, endsWith, createRegExp, regExpLeadsToEndlessLoop, regExpFlags, firstNonWhitespaceIndex, getLeadingWhitespace, lastNonWhitespaceIndex, compare, isLowerAsciiLetter, isUpperAsciiLetter, equalsIgnoreCase, startsWithIgnoreCase, commonPrefixLength, commonSuffixLength, isHighSurrogate, isLowSurrogate, containsRTL, containsEmoji, isBasicASCII, containsFullWidthCharacter, isFullWidthCharacter, UTF8_BOM_CHARACTER, startsWithUTF8BOM, safeBtoa, repeat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"empty\", function() { return empty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFalsyOrWhitespace\", function() { return isFalsyOrWhitespace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pad\", function() { return pad; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"format\", function() { return format; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"escape\", function() { return escape; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"escapeRegExpCharacters\", function() { return escapeRegExpCharacters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trim\", function() { return trim; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ltrim\", function() { return ltrim; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rtrim\", function() { return rtrim; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convertSimple2RegExpPattern\", function() { return convertSimple2RegExpPattern; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startsWith\", function() { return startsWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"endsWith\", function() { return endsWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createRegExp\", function() { return createRegExp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"regExpLeadsToEndlessLoop\", function() { return regExpLeadsToEndlessLoop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"regExpFlags\", function() { return regExpFlags; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"firstNonWhitespaceIndex\", function() { return firstNonWhitespaceIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getLeadingWhitespace\", function() { return getLeadingWhitespace; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"lastNonWhitespaceIndex\", function() { return lastNonWhitespaceIndex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compare\", function() { return compare; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isLowerAsciiLetter\", function() { return isLowerAsciiLetter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUpperAsciiLetter\", function() { return isUpperAsciiLetter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"equalsIgnoreCase\", function() { return equalsIgnoreCase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startsWithIgnoreCase\", function() { return startsWithIgnoreCase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"commonPrefixLength\", function() { return commonPrefixLength; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"commonSuffixLength\", function() { return commonSuffixLength; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isHighSurrogate\", function() { return isHighSurrogate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isLowSurrogate\", function() { return isLowSurrogate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"containsRTL\", function() { return containsRTL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"containsEmoji\", function() { return containsEmoji; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isBasicASCII\", function() { return isBasicASCII; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"containsFullWidthCharacter\", function() { return containsFullWidthCharacter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFullWidthCharacter\", function() { return isFullWidthCharacter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"UTF8_BOM_CHARACTER\", function() { return UTF8_BOM_CHARACTER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startsWithUTF8BOM\", function() { return startsWithUTF8BOM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"safeBtoa\", function() { return safeBtoa; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"repeat\", function() { return repeat; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * The empty string.\n */\nvar empty = '';\nfunction isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\n/**\n * @returns the provided number with the given number of preceding zeros.\n */\nfunction pad(n, l, char) {\n    if (char === void 0) { char = '0'; }\n    var str = '' + n;\n    var r = [str];\n    for (var i = str.length; i < l; i++) {\n        r.push(char);\n    }\n    return r.reverse().join('');\n}\nvar _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nfunction format(value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        var idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nfunction escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nfunction trim(haystack, needle) {\n    if (needle === void 0) { needle = ' '; }\n    var trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nfunction ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    var offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nfunction rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    var needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    var offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nfunction convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n/**\n * Determines if haystack starts with needle.\n */\nfunction startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    if (haystack === needle) {\n        return true;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nfunction endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.indexOf(needle, diff) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nfunction createRegExp(searchString, isRegex, options) {\n    if (options === void 0) { options = {}; }\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    var modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nfunction regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    var match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nfunction regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp.unicode ? 'u' : '');\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nfunction firstNonWhitespaceIndex(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nfunction getLeadingWhitespace(str, start, end) {\n    if (start === void 0) { start = 0; }\n    if (end === void 0) { end = str.length; }\n    for (var i = start; i < end; i++) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nfunction lastNonWhitespaceIndex(str, startIndex) {\n    if (startIndex === void 0) { startIndex = str.length - 1; }\n    for (var i = startIndex; i >= 0; i--) {\n        var chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nfunction isAsciiLetter(code) {\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\nfunction equalsIgnoreCase(a, b) {\n    var len1 = a ? a.length : 0;\n    var len2 = b ? b.length : 0;\n    if (len1 !== len2) {\n        return false;\n    }\n    return doEqualsIgnoreCase(a, b);\n}\nfunction doEqualsIgnoreCase(a, b, stopAt) {\n    if (stopAt === void 0) { stopAt = a.length; }\n    if (typeof a !== 'string' || typeof b !== 'string') {\n        return false;\n    }\n    for (var i = 0; i < stopAt; i++) {\n        var codeA = a.charCodeAt(i);\n        var codeB = b.charCodeAt(i);\n        if (codeA === codeB) {\n            continue;\n        }\n        // a-z A-Z\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n            var diff = Math.abs(codeA - codeB);\n            if (diff !== 0 && diff !== 32) {\n                return false;\n            }\n        }\n        // Any other charcode\n        else {\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction startsWithIgnoreCase(str, candidate) {\n    var candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nfunction commonPrefixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nfunction commonSuffixLength(a, b) {\n    var i, len = Math.min(a.length, b.length);\n    var aLastIndex = a.length - 1;\n    var bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n// --- unicode\n// http://en.wikipedia.org/wiki/Surrogate_pair\n// Returns the code point starting at a specified index in a string\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\n//export function getUnicodePoint(str:string, index:number, len:number):number {\n//\tlet chrCode = str.charCodeAt(index);\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n//\t\tlet nextChrCode = str.charCodeAt(index + 1);\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n//\t\t}\n//\t}\n//\treturn chrCode;\n//}\nfunction isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nfunction isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n */\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nfunction containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\n/**\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n */\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\nfunction containsEmoji(str) {\n    return CONTAINS_EMOJI.test(str);\n}\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nfunction isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nfunction containsFullWidthCharacter(str) {\n    for (var i = 0, len = str.length; i < len; i++) {\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 — 2EFF   CJK Radicals Supplement\n    //          2F00 — 2FDF   Kangxi Radicals\n    //          2FF0 — 2FFF   Ideographic Description Characters\n    //          3000 — 303F   CJK Symbols and Punctuation\n    //          3040 — 309F   Hiragana\n    //          30A0 — 30FF   Katakana\n    //          3100 — 312F   Bopomofo\n    //          3130 — 318F   Hangul Compatibility Jamo\n    //          3190 — 319F   Kanbun\n    //          31A0 — 31BF   Bopomofo Extended\n    //          31F0 — 31FF   Katakana Phonetic Extensions\n    //          3200 — 32FF   Enclosed CJK Letters and Months\n    //          3300 — 33FF   CJK Compatibility\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\n    //          4E00 — 9FFF   CJK Unified Ideographs\n    //          A000 — A48F   Yi Syllables\n    //          A490 — A4CF   Yi Radicals\n    //          AC00 — D7AF   Hangul Syllables\n    // [IGNORE] D800 — DB7F   High Surrogates\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 — DFFF   Low Surrogates\n    // [IGNORE] E000 — F8FF   Private Use Area\n    //          F900 — FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 — FE0F   Variation Selectors\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 — FE6F   Small Form Variants\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 — FFFF   Specials\n    charCode = +charCode; // @perf\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n// -- UTF-8 BOM\nvar UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nfunction startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nfunction safeBtoa(str) {\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/strings.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/types.js":
/*!*********************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/types.js ***!
  \*********************************************************************/
/*! exports provided: isArray, isString, isObject, isNumber, isBoolean, isUndefined, isUndefinedOrNull, isEmptyObject, isFunction, validateConstraints, validateConstraint, create, getAllPropertyNames */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArray\", function() { return isArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isString\", function() { return isString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return isObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNumber\", function() { return isNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isBoolean\", function() { return isBoolean; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUndefined\", function() { return isUndefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUndefinedOrNull\", function() { return isUndefinedOrNull; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEmptyObject\", function() { return isEmptyObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFunction\", function() { return isFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateConstraints\", function() { return validateConstraints; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"validateConstraint\", function() { return validateConstraint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAllPropertyNames\", function() { return getAllPropertyNames; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _typeof = {\n    number: 'number',\n    string: 'string',\n    undefined: 'undefined',\n    object: 'object',\n    function: 'function'\n};\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nfunction isArray(array) {\n    if (Array.isArray) {\n        return Array.isArray(array);\n    }\n    if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nfunction isString(str) {\n    if (typeof (str) === _typeof.string || str instanceof String) {\n        return true;\n    }\n    return false;\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nfunction isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === _typeof.object\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nfunction isNumber(obj) {\n    if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nfunction isBoolean(obj) {\n    return obj === true || obj === false;\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nfunction isUndefined(obj) {\n    return typeof (obj) === _typeof.undefined;\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nfunction isUndefinedOrNull(obj) {\n    return isUndefined(obj) || obj === null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nfunction isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return false;\n    }\n    for (var key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nfunction isFunction(obj) {\n    return typeof obj === _typeof.function;\n}\nfunction validateConstraints(args, constraints) {\n    var len = Math.min(args.length, constraints.length);\n    for (var i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nfunction validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(\"argument does not match constraint: typeof \" + constraint);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n    }\n}\n/**\n * Creates a new object of the provided class and will call the constructor with\n * any additional argument supplied.\n */\nfunction create(ctor) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var _a;\n    if (isNativeClass(ctor)) {\n        return new ((_a = ctor).bind.apply(_a, [void 0].concat(args)))();\n    }\n    else {\n        var obj = Object.create(ctor.prototype);\n        ctor.apply(obj, args);\n        return obj;\n    }\n}\n// https://stackoverflow.com/a/32235645/1499159\nfunction isNativeClass(thing) {\n    return typeof thing === 'function'\n        && thing.hasOwnProperty('prototype')\n        && !thing.hasOwnProperty('arguments');\n}\n/**\n *\n *\n */\nfunction getAllPropertyNames(obj) {\n    var res = [];\n    var proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/types.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/uri.js":
/*!*******************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/uri.js ***!
  \*******************************************************************/
/*! exports provided: URI */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"URI\", function() { return URI; });\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./platform */ \"./node_modules/monaco-editor-core/esm/vs/base/common/platform.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\n\nvar _schemePattern = /^\\w[\\w\\d+.-]*$/;\nvar _singleSlashStart = /^\\//;\nvar _doubleSlashStart = /^\\/\\//;\nvar _throwOnMissingSchema = true;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme) {\n        if (_strict || _throwOnMissingSchema) {\n            throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n        else {\n            console.warn(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n        }\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nvar _empty = '';\nvar _slash = '/';\nvar _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n */\nvar URI = /** @class */ (function () {\n    /**\n     * @internal\n     */\n    function URI(schemeOrData, authority, path, query, fragment, _strict) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = schemeOrData || _empty;\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    URI.isUri = function (thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'function'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    };\n    Object.defineProperty(URI.prototype, \"fsPath\", {\n        // ---- filesystem path -----------------------\n        /**\n         * Returns a string representing the corresponding file system path of this URI.\n         * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n         * platform specific path separator.\n         *\n         * * Will *not* validate the path for invalid characters and semantics.\n         * * Will *not* look at the scheme of this URI.\n         * * The result shall *not* be used for display purposes but for accessing a file on disk.\n         *\n         *\n         * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n         * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n         *\n         * ```ts\n            const u = URI.parse('file://server/c$/folder/file.txt')\n            u.authority === 'server'\n            u.path === '/shares/c$/file.txt'\n            u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n        ```\n         *\n         * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n         * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n         * with URIs that represent files on disk (`file` scheme).\n         */\n        get: function () {\n            // if (this.scheme !== 'file') {\n            // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n            // }\n            return _makeFsPath(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // ---- modify to new -------------------------\n    URI.prototype.with = function (change) {\n        if (!change) {\n            return this;\n        }\n        var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new _URI(scheme, authority, path, query, fragment);\n    };\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    URI.parse = function (value, _strict) {\n        if (_strict === void 0) { _strict = false; }\n        var match = _regexp.exec(value);\n        if (!match) {\n            return new _URI(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty), _strict);\n    };\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    URI.file = function (path) {\n        var authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (_platform__WEBPACK_IMPORTED_MODULE_0__[\"isWindows\"]) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            var idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new _URI('file', authority, path, _empty, _empty);\n    };\n    URI.from = function (components) {\n        return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n    };\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        return _asFormatted(this, skipEncoding);\n    };\n    URI.prototype.toJSON = function () {\n        return this;\n    };\n    URI.revive = function (data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            var result = new _URI(data);\n            result._fsPath = data.fsPath;\n            result._formatted = data.external;\n            return result;\n        }\n    };\n    return URI;\n}());\n\n// tslint:disable-next-line:class-name\nvar _URI = /** @class */ (function (_super) {\n    __extends(_URI, _super);\n    function _URI() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._formatted = null;\n        _this._fsPath = null;\n        return _this;\n    }\n    Object.defineProperty(_URI.prototype, \"fsPath\", {\n        get: function () {\n            if (!this._fsPath) {\n                this._fsPath = _makeFsPath(this);\n            }\n            return this._fsPath;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    _URI.prototype.toString = function (skipEncoding) {\n        if (skipEncoding === void 0) { skipEncoding = false; }\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    };\n    _URI.prototype.toJSON = function () {\n        var res = {\n            $mid: 1\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    };\n    return _URI;\n}(URI));\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nvar encodeTable = (_a = {},\n    _a[58 /* Colon */] = '%3A',\n    _a[47 /* Slash */] = '%2F',\n    _a[63 /* QuestionMark */] = '%3F',\n    _a[35 /* Hash */] = '%23',\n    _a[91 /* OpenSquareBracket */] = '%5B',\n    _a[93 /* CloseSquareBracket */] = '%5D',\n    _a[64 /* AtSign */] = '%40',\n    _a[33 /* ExclamationMark */] = '%21',\n    _a[36 /* DollarSign */] = '%24',\n    _a[38 /* Ampersand */] = '%26',\n    _a[39 /* SingleQuote */] = '%27',\n    _a[40 /* OpenParen */] = '%28',\n    _a[41 /* CloseParen */] = '%29',\n    _a[42 /* Asterisk */] = '%2A',\n    _a[43 /* Plus */] = '%2B',\n    _a[44 /* Comma */] = '%2C',\n    _a[59 /* Semicolon */] = '%3B',\n    _a[61 /* Equals */] = '%3D',\n    _a[32 /* Space */] = '%20',\n    _a);\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    var res = undefined;\n    var nativeEncodePos = -1;\n    for (var pos = 0; pos < uriComponent.length; pos++) {\n        var code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            var escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    var res = undefined;\n    for (var pos = 0; pos < path.length; pos++) {\n        var code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nfunction _makeFsPath(uri) {\n    var value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = \"//\" + uri.authority + uri.path;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        // windows drive letter: file:///c:/far/boo\n        value = uri.path[1].toLowerCase() + uri.path.substr(2);\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (_platform__WEBPACK_IMPORTED_MODULE_0__[\"isWindows\"]) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    var encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    var res = '';\n    var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        var idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            var userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            var code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            var code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/uri.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/base/common/worker/simpleWorker.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/base/common/worker/simpleWorker.js ***!
  \***********************************************************************************/
/*! exports provided: logOnceWebWorkerWarning, SimpleWorkerClient, SimpleWorkerServer, create */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"logOnceWebWorkerWarning\", function() { return logOnceWebWorkerWarning; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SimpleWorkerClient\", function() { return SimpleWorkerClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SimpleWorkerServer\", function() { return SimpleWorkerServer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors */ \"./node_modules/monaco-editor-core/esm/vs/base/common/errors.js\");\n/* harmony import */ var _lifecycle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lifecycle */ \"./node_modules/monaco-editor-core/esm/vs/base/common/lifecycle.js\");\n/* harmony import */ var _platform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../platform */ \"./node_modules/monaco-editor-core/esm/vs/base/common/platform.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../types */ \"./node_modules/monaco-editor-core/esm/vs/base/common/types.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\nvar INITIALIZE = '$initialize';\nvar webWorkerWarningLogged = false;\nfunction logOnceWebWorkerWarning(err) {\n    if (!_platform__WEBPACK_IMPORTED_MODULE_2__[\"isWeb\"]) {\n        // running tests\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar SimpleWorkerProtocol = /** @class */ (function () {\n    function SimpleWorkerProtocol(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n    }\n    SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n        this._workerId = workerId;\n    };\n    SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n        var _this = this;\n        var req = String(++this._lastSentReq);\n        return new Promise(function (resolve, reject) {\n            _this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            _this._send({\n                vsWorker: _this._workerId,\n                req: req,\n                method: method,\n                args: args\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n        var message;\n        try {\n            message = JSON.parse(serializedMessage);\n        }\n        catch (e) {\n            // nothing\n            return;\n        }\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    };\n    SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n        var _this = this;\n        if (msg.seq) {\n            var replyMessage = msg;\n            if (!this._pendingReplies[replyMessage.seq]) {\n                console.warn('Got reply to unknown seq');\n                return;\n            }\n            var reply = this._pendingReplies[replyMessage.seq];\n            delete this._pendingReplies[replyMessage.seq];\n            if (replyMessage.err) {\n                var err = replyMessage.err;\n                if (replyMessage.err.$isError) {\n                    err = new Error();\n                    err.name = replyMessage.err.name;\n                    err.message = replyMessage.err.message;\n                    err.stack = replyMessage.err.stack;\n                }\n                reply.reject(err);\n                return;\n            }\n            reply.resolve(replyMessage.res);\n            return;\n        }\n        var requestMessage = msg;\n        var req = requestMessage.req;\n        var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then(function (r) {\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: r,\n                err: undefined\n            });\n        }, function (e) {\n            if (e.detail instanceof Error) {\n                // Loading errors have a detail property that points to the actual error\n                e.detail = Object(_errors__WEBPACK_IMPORTED_MODULE_0__[\"transformErrorForSerialization\"])(e.detail);\n            }\n            _this._send({\n                vsWorker: _this._workerId,\n                seq: req,\n                res: undefined,\n                err: Object(_errors__WEBPACK_IMPORTED_MODULE_0__[\"transformErrorForSerialization\"])(e)\n            });\n        });\n    };\n    SimpleWorkerProtocol.prototype._send = function (msg) {\n        var strMsg = JSON.stringify(msg);\n        // console.log('SENDING: ' + strMsg);\n        this._handler.sendMessage(strMsg);\n    };\n    return SimpleWorkerProtocol;\n}());\n/**\n * Main thread side\n */\nvar SimpleWorkerClient = /** @class */ (function (_super) {\n    __extends(SimpleWorkerClient, _super);\n    function SimpleWorkerClient(workerFactory, moduleId) {\n        var _this = _super.call(this) || this;\n        var lazyProxyReject = null;\n        _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n            _this._protocol.handleMessage(msg);\n        }, function (err) {\n            // in Firefox, web workers fail lazily :(\n            // we will reject the proxy\n            if (lazyProxyReject) {\n                lazyProxyReject(err);\n            }\n        }));\n        _this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                _this._worker.postMessage(msg);\n            },\n            handleMessage: function (method, args) {\n                // Intentionally not supporting worker -> main requests\n                return Promise.resolve(null);\n            }\n        });\n        _this._protocol.setWorkerId(_this._worker.getId());\n        // Gather loader configuration\n        var loaderConfiguration = null;\n        if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n            // Get the configuration from the Monaco AMD Loader\n            loaderConfiguration = self.require.getConfig();\n        }\n        else if (typeof self.requirejs !== 'undefined') {\n            // Get the configuration from requirejs\n            loaderConfiguration = self.requirejs.s.contexts._.config;\n        }\n        // Send initialize message\n        _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\n            _this._worker.getId(),\n            moduleId,\n            loaderConfiguration\n        ]);\n        _this._lazyProxy = new Promise(function (resolve, reject) {\n            lazyProxyReject = reject;\n            _this._onModuleLoaded.then(function (availableMethods) {\n                var proxy = {};\n                for (var _i = 0, availableMethods_1 = availableMethods; _i < availableMethods_1.length; _i++) {\n                    var methodName = availableMethods_1[_i];\n                    proxy[methodName] = createProxyMethod(methodName, proxyMethodRequest);\n                }\n                resolve(proxy);\n            }, function (e) {\n                reject(e);\n                _this._onError('Worker failed to load ' + moduleId, e);\n            });\n        });\n        // Create proxy to loaded code\n        var proxyMethodRequest = function (method, args) {\n            return _this._request(method, args);\n        };\n        var createProxyMethod = function (method, proxyMethodRequest) {\n            return function () {\n                var args = Array.prototype.slice.call(arguments, 0);\n                return proxyMethodRequest(method, args);\n            };\n        };\n        return _this;\n    }\n    SimpleWorkerClient.prototype.getProxyObject = function () {\n        return this._lazyProxy;\n    };\n    SimpleWorkerClient.prototype._request = function (method, args) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._onModuleLoaded.then(function () {\n                _this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        });\n    };\n    SimpleWorkerClient.prototype._onError = function (message, error) {\n        console.error(message);\n        console.info(error);\n    };\n    return SimpleWorkerClient;\n}(_lifecycle__WEBPACK_IMPORTED_MODULE_1__[\"Disposable\"]));\n\n/**\n * Worker side\n */\nvar SimpleWorkerServer = /** @class */ (function () {\n    function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n        var _this = this;\n        this._requestHandler = requestHandler;\n        this._protocol = new SimpleWorkerProtocol({\n            sendMessage: function (msg) {\n                postSerializedMessage(msg);\n            },\n            handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n        });\n    }\n    SimpleWorkerServer.prototype.onmessage = function (msg) {\n        this._protocol.handleMessage(msg);\n    };\n    SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n        var _this = this;\n        this._protocol.setWorkerId(workerId);\n        if (this._requestHandler) {\n            // static request handler\n            var methods = [];\n            for (var _i = 0, _a = Object(_types__WEBPACK_IMPORTED_MODULE_3__[\"getAllPropertyNames\"])(this._requestHandler); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._requestHandler[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        if (loaderConfig) {\n            // Remove 'baseUrl', handling it is beyond scope for now\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            // Since this is in a web worker, enable catching errors\n            loaderConfig.catchError = true;\n            self.require.config(loaderConfig);\n        }\n        return new Promise(function (resolve, reject) {\n            // Use the global require to be sure to get the global config\n            self.require([moduleId], function () {\n                var result = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    result[_i] = arguments[_i];\n                }\n                var handlerModule = result[0];\n                _this._requestHandler = handlerModule.create();\n                if (!_this._requestHandler) {\n                    reject(new Error(\"No RequestHandler!\"));\n                    return;\n                }\n                var methods = [];\n                for (var _a = 0, _b = Object(_types__WEBPACK_IMPORTED_MODULE_3__[\"getAllPropertyNames\"])(_this._requestHandler); _a < _b.length; _a++) {\n                    var prop = _b[_a];\n                    if (typeof _this._requestHandler[prop] === 'function') {\n                        methods.push(prop);\n                    }\n                }\n                resolve(methods);\n            }, reject);\n        });\n    };\n    return SimpleWorkerServer;\n}());\n\n/**\n * Called on the worker side\n */\nfunction create(postMessage) {\n    return new SimpleWorkerServer(postMessage, null);\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/base/common/worker/simpleWorker.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/core/characterClassifier.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/core/characterClassifier.js ***!
  \******************************************************************************************/
/*! exports provided: CharacterClassifier, CharacterSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CharacterClassifier\", function() { return CharacterClassifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CharacterSet\", function() { return CharacterSet; });\n/* harmony import */ var _uint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uint */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/core/uint.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A fast character classifier that uses a compact array for ASCII values.\n */\nvar CharacterClassifier = /** @class */ (function () {\n    function CharacterClassifier(_defaultValue) {\n        var defaultValue = Object(_uint__WEBPACK_IMPORTED_MODULE_0__[\"toUint8\"])(_defaultValue);\n        this._defaultValue = defaultValue;\n        this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n        this._map = new Map();\n    }\n    CharacterClassifier._createAsciiMap = function (defaultValue) {\n        var asciiMap = new Uint8Array(256);\n        for (var i = 0; i < 256; i++) {\n            asciiMap[i] = defaultValue;\n        }\n        return asciiMap;\n    };\n    CharacterClassifier.prototype.set = function (charCode, _value) {\n        var value = Object(_uint__WEBPACK_IMPORTED_MODULE_0__[\"toUint8\"])(_value);\n        if (charCode >= 0 && charCode < 256) {\n            this._asciiMap[charCode] = value;\n        }\n        else {\n            this._map.set(charCode, value);\n        }\n    };\n    CharacterClassifier.prototype.get = function (charCode) {\n        if (charCode >= 0 && charCode < 256) {\n            return this._asciiMap[charCode];\n        }\n        else {\n            return (this._map.get(charCode) || this._defaultValue);\n        }\n    };\n    return CharacterClassifier;\n}());\n\nvar CharacterSet = /** @class */ (function () {\n    function CharacterSet() {\n        this._actual = new CharacterClassifier(0 /* False */);\n    }\n    CharacterSet.prototype.add = function (charCode) {\n        this._actual.set(charCode, 1 /* True */);\n    };\n    CharacterSet.prototype.has = function (charCode) {\n        return (this._actual.get(charCode) === 1 /* True */);\n    };\n    return CharacterSet;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/core/characterClassifier.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/core/position.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/core/position.js ***!
  \*******************************************************************************/
/*! exports provided: Position */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Position\", function() { return Position; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * A position in the editor.\n */\nvar Position = /** @class */ (function () {\n    function Position(lineNumber, column) {\n        this.lineNumber = lineNumber;\n        this.column = column;\n    }\n    /**\n     * Create a new postion from this position.\n     *\n     * @param newLineNumber new line number\n     * @param newColumn new column\n     */\n    Position.prototype.with = function (newLineNumber, newColumn) {\n        if (newLineNumber === void 0) { newLineNumber = this.lineNumber; }\n        if (newColumn === void 0) { newColumn = this.column; }\n        if (newLineNumber === this.lineNumber && newColumn === this.column) {\n            return this;\n        }\n        else {\n            return new Position(newLineNumber, newColumn);\n        }\n    };\n    /**\n     * Derive a new position from this position.\n     *\n     * @param deltaLineNumber line number delta\n     * @param deltaColumn column delta\n     */\n    Position.prototype.delta = function (deltaLineNumber, deltaColumn) {\n        if (deltaLineNumber === void 0) { deltaLineNumber = 0; }\n        if (deltaColumn === void 0) { deltaColumn = 0; }\n        return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n    };\n    /**\n     * Test if this position equals other position\n     */\n    Position.prototype.equals = function (other) {\n        return Position.equals(this, other);\n    };\n    /**\n     * Test if position `a` equals position `b`\n     */\n    Position.equals = function (a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        return (!!a &&\n            !!b &&\n            a.lineNumber === b.lineNumber &&\n            a.column === b.column);\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.prototype.isBefore = function (other) {\n        return Position.isBefore(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be false.\n     */\n    Position.isBefore = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column < b.column;\n    };\n    /**\n     * Test if this position is before other position.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.prototype.isBeforeOrEqual = function (other) {\n        return Position.isBeforeOrEqual(this, other);\n    };\n    /**\n     * Test if position `a` is before position `b`.\n     * If the two positions are equal, the result will be true.\n     */\n    Position.isBeforeOrEqual = function (a, b) {\n        if (a.lineNumber < b.lineNumber) {\n            return true;\n        }\n        if (b.lineNumber < a.lineNumber) {\n            return false;\n        }\n        return a.column <= b.column;\n    };\n    /**\n     * A function that compares positions, useful for sorting\n     */\n    Position.compare = function (a, b) {\n        var aLineNumber = a.lineNumber | 0;\n        var bLineNumber = b.lineNumber | 0;\n        if (aLineNumber === bLineNumber) {\n            var aColumn = a.column | 0;\n            var bColumn = b.column | 0;\n            return aColumn - bColumn;\n        }\n        return aLineNumber - bLineNumber;\n    };\n    /**\n     * Clone this position.\n     */\n    Position.prototype.clone = function () {\n        return new Position(this.lineNumber, this.column);\n    };\n    /**\n     * Convert to a human-readable representation.\n     */\n    Position.prototype.toString = function () {\n        return '(' + this.lineNumber + ',' + this.column + ')';\n    };\n    // ---\n    /**\n     * Create a `Position` from an `IPosition`.\n     */\n    Position.lift = function (pos) {\n        return new Position(pos.lineNumber, pos.column);\n    };\n    /**\n     * Test if `obj` is an `IPosition`.\n     */\n    Position.isIPosition = function (obj) {\n        return (obj\n            && (typeof obj.lineNumber === 'number')\n            && (typeof obj.column === 'number'));\n    };\n    return Position;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/core/position.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/core/range.js":
/*!****************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/core/range.js ***!
  \****************************************************************************/
/*! exports provided: Range */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return Range; });\n/* harmony import */ var _position__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./position */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/core/position.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n */\nvar Range = /** @class */ (function () {\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n        if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n            this.startLineNumber = endLineNumber;\n            this.startColumn = endColumn;\n            this.endLineNumber = startLineNumber;\n            this.endColumn = startColumn;\n        }\n        else {\n            this.startLineNumber = startLineNumber;\n            this.startColumn = startColumn;\n            this.endLineNumber = endLineNumber;\n            this.endColumn = endColumn;\n        }\n    }\n    /**\n     * Test if this range is empty.\n     */\n    Range.prototype.isEmpty = function () {\n        return Range.isEmpty(this);\n    };\n    /**\n     * Test if `range` is empty.\n     */\n    Range.isEmpty = function (range) {\n        return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n    };\n    /**\n     * Test if position is in this range. If the position is at the edges, will return true.\n     */\n    Range.prototype.containsPosition = function (position) {\n        return Range.containsPosition(this, position);\n    };\n    /**\n     * Test if `position` is in `range`. If the position is at the edges, will return true.\n     */\n    Range.containsPosition = function (range, position) {\n        if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n            return false;\n        }\n        if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Test if range is in this range. If the range is equal to this range, will return true.\n     */\n    Range.prototype.containsRange = function (range) {\n        return Range.containsRange(this, range);\n    };\n    /**\n     * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n     */\n    Range.containsRange = function (range, otherRange) {\n        if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n            return false;\n        }\n        if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n            return false;\n        }\n        if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.prototype.plusRange = function (range) {\n        return Range.plusRange(this, range);\n    };\n    /**\n     * A reunion of the two ranges.\n     * The smallest position will be used as the start point, and the largest one as the end point.\n     */\n    Range.plusRange = function (a, b) {\n        var startLineNumber;\n        var startColumn;\n        var endLineNumber;\n        var endColumn;\n        if (b.startLineNumber < a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = b.startColumn;\n        }\n        else if (b.startLineNumber === a.startLineNumber) {\n            startLineNumber = b.startLineNumber;\n            startColumn = Math.min(b.startColumn, a.startColumn);\n        }\n        else {\n            startLineNumber = a.startLineNumber;\n            startColumn = a.startColumn;\n        }\n        if (b.endLineNumber > a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = b.endColumn;\n        }\n        else if (b.endLineNumber === a.endLineNumber) {\n            endLineNumber = b.endLineNumber;\n            endColumn = Math.max(b.endColumn, a.endColumn);\n        }\n        else {\n            endLineNumber = a.endLineNumber;\n            endColumn = a.endColumn;\n        }\n        return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.prototype.intersectRanges = function (range) {\n        return Range.intersectRanges(this, range);\n    };\n    /**\n     * A intersection of the two ranges.\n     */\n    Range.intersectRanges = function (a, b) {\n        var resultStartLineNumber = a.startLineNumber;\n        var resultStartColumn = a.startColumn;\n        var resultEndLineNumber = a.endLineNumber;\n        var resultEndColumn = a.endColumn;\n        var otherStartLineNumber = b.startLineNumber;\n        var otherStartColumn = b.startColumn;\n        var otherEndLineNumber = b.endLineNumber;\n        var otherEndColumn = b.endColumn;\n        if (resultStartLineNumber < otherStartLineNumber) {\n            resultStartLineNumber = otherStartLineNumber;\n            resultStartColumn = otherStartColumn;\n        }\n        else if (resultStartLineNumber === otherStartLineNumber) {\n            resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n        }\n        if (resultEndLineNumber > otherEndLineNumber) {\n            resultEndLineNumber = otherEndLineNumber;\n            resultEndColumn = otherEndColumn;\n        }\n        else if (resultEndLineNumber === otherEndLineNumber) {\n            resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n        }\n        // Check if selection is now empty\n        if (resultStartLineNumber > resultEndLineNumber) {\n            return null;\n        }\n        if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n            return null;\n        }\n        return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    };\n    /**\n     * Test if this range equals other.\n     */\n    Range.prototype.equalsRange = function (other) {\n        return Range.equalsRange(this, other);\n    };\n    /**\n     * Test if range `a` equals `b`.\n     */\n    Range.equalsRange = function (a, b) {\n        return (!!a &&\n            !!b &&\n            a.startLineNumber === b.startLineNumber &&\n            a.startColumn === b.startColumn &&\n            a.endLineNumber === b.endLineNumber &&\n            a.endColumn === b.endColumn);\n    };\n    /**\n     * Return the end position (which will be after or equal to the start position)\n     */\n    Range.prototype.getEndPosition = function () {\n        return new _position__WEBPACK_IMPORTED_MODULE_0__[\"Position\"](this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Return the start position (which will be before or equal to the end position)\n     */\n    Range.prototype.getStartPosition = function () {\n        return new _position__WEBPACK_IMPORTED_MODULE_0__[\"Position\"](this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Transform to a user presentable string representation.\n     */\n    Range.prototype.toString = function () {\n        return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n    };\n    /**\n     * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n     */\n    Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n    };\n    /**\n     * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n     */\n    Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.prototype.collapseToStart = function () {\n        return Range.collapseToStart(this);\n    };\n    /**\n     * Create a new empty range using this range's start position.\n     */\n    Range.collapseToStart = function (range) {\n        return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    };\n    // ---\n    Range.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    Range.lift = function (range) {\n        if (!range) {\n            return null;\n        }\n        return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n    };\n    /**\n     * Test if `obj` is an `IRange`.\n     */\n    Range.isIRange = function (obj) {\n        return (obj\n            && (typeof obj.startLineNumber === 'number')\n            && (typeof obj.startColumn === 'number')\n            && (typeof obj.endLineNumber === 'number')\n            && (typeof obj.endColumn === 'number'));\n    };\n    /**\n     * Test if the two ranges are touching in any way.\n     */\n    Range.areIntersectingOrTouching = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n     */\n    Range.areIntersecting = function (a, b) {\n        // Check if `a` is before `b`\n        if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n            return false;\n        }\n        // Check if `b` is before `a`\n        if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n            return false;\n        }\n        // These ranges must intersect\n        return true;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the startPosition and then on the endPosition\n     */\n    Range.compareRangesUsingStarts = function (a, b) {\n        if (a && b) {\n            var aStartLineNumber = a.startLineNumber | 0;\n            var bStartLineNumber = b.startLineNumber | 0;\n            if (aStartLineNumber === bStartLineNumber) {\n                var aStartColumn = a.startColumn | 0;\n                var bStartColumn = b.startColumn | 0;\n                if (aStartColumn === bStartColumn) {\n                    var aEndLineNumber = a.endLineNumber | 0;\n                    var bEndLineNumber = b.endLineNumber | 0;\n                    if (aEndLineNumber === bEndLineNumber) {\n                        var aEndColumn = a.endColumn | 0;\n                        var bEndColumn = b.endColumn | 0;\n                        return aEndColumn - bEndColumn;\n                    }\n                    return aEndLineNumber - bEndLineNumber;\n                }\n                return aStartColumn - bStartColumn;\n            }\n            return aStartLineNumber - bStartLineNumber;\n        }\n        var aExists = (a ? 1 : 0);\n        var bExists = (b ? 1 : 0);\n        return aExists - bExists;\n    };\n    /**\n     * A function that compares ranges, useful for sorting ranges\n     * It will first compare ranges on the endPosition and then on the startPosition\n     */\n    Range.compareRangesUsingEnds = function (a, b) {\n        if (a.endLineNumber === b.endLineNumber) {\n            if (a.endColumn === b.endColumn) {\n                if (a.startLineNumber === b.startLineNumber) {\n                    return a.startColumn - b.startColumn;\n                }\n                return a.startLineNumber - b.startLineNumber;\n            }\n            return a.endColumn - b.endColumn;\n        }\n        return a.endLineNumber - b.endLineNumber;\n    };\n    /**\n     * Test if the range spans multiple lines.\n     */\n    Range.spansMultipleLines = function (range) {\n        return range.endLineNumber > range.startLineNumber;\n    };\n    return Range;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/core/range.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/core/selection.js":
/*!********************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/core/selection.js ***!
  \********************************************************************************/
/*! exports provided: Selection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Selection\", function() { return Selection; });\n/* harmony import */ var _position__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./position */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/core/position.js\");\n/* harmony import */ var _range__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./range */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/core/range.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n/**\n * A selection in the editor.\n * The selection is a range that has an orientation.\n */\nvar Selection = /** @class */ (function (_super) {\n    __extends(Selection, _super);\n    function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n        var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n        _this.selectionStartLineNumber = selectionStartLineNumber;\n        _this.selectionStartColumn = selectionStartColumn;\n        _this.positionLineNumber = positionLineNumber;\n        _this.positionColumn = positionColumn;\n        return _this;\n    }\n    /**\n     * Clone this selection.\n     */\n    Selection.prototype.clone = function () {\n        return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Transform to a human-readable representation.\n     */\n    Selection.prototype.toString = function () {\n        return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n    };\n    /**\n     * Test if equals other selection.\n     */\n    Selection.prototype.equalsSelection = function (other) {\n        return (Selection.selectionsEqual(this, other));\n    };\n    /**\n     * Test if the two selections are equal.\n     */\n    Selection.selectionsEqual = function (a, b) {\n        return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n            a.selectionStartColumn === b.selectionStartColumn &&\n            a.positionLineNumber === b.positionLineNumber &&\n            a.positionColumn === b.positionColumn);\n    };\n    /**\n     * Get directions (LTR or RTL).\n     */\n    Selection.prototype.getDirection = function () {\n        if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n            return 0 /* LTR */;\n        }\n        return 1 /* RTL */;\n    };\n    /**\n     * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n    };\n    /**\n     * Get the position at `positionLineNumber` and `positionColumn`.\n     */\n    Selection.prototype.getPosition = function () {\n        return new _position__WEBPACK_IMPORTED_MODULE_0__[\"Position\"](this.positionLineNumber, this.positionColumn);\n    };\n    /**\n     * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n     */\n    Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n        if (this.getDirection() === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        }\n        return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n    };\n    // ----\n    /**\n     * Create a `Selection` from one or two positions\n     */\n    Selection.fromPositions = function (start, end) {\n        if (end === void 0) { end = start; }\n        return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    /**\n     * Create a `Selection` from an `ISelection`.\n     */\n    Selection.liftSelection = function (sel) {\n        return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n    };\n    /**\n     * `a` equals `b`.\n     */\n    Selection.selectionsArrEqual = function (a, b) {\n        if (a && !b || !a && b) {\n            return false;\n        }\n        if (!a && !b) {\n            return true;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0, len = a.length; i < len; i++) {\n            if (!this.selectionsEqual(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Test if `obj` is an `ISelection`.\n     */\n    Selection.isISelection = function (obj) {\n        return (obj\n            && (typeof obj.selectionStartLineNumber === 'number')\n            && (typeof obj.selectionStartColumn === 'number')\n            && (typeof obj.positionLineNumber === 'number')\n            && (typeof obj.positionColumn === 'number'));\n    };\n    /**\n     * Create with a direction.\n     */\n    Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n        if (direction === 0 /* LTR */) {\n            return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n        }\n        return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n    };\n    return Selection;\n}(_range__WEBPACK_IMPORTED_MODULE_1__[\"Range\"]));\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/core/selection.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/core/token.js":
/*!****************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/core/token.js ***!
  \****************************************************************************/
/*! exports provided: Token, TokenizationResult, TokenizationResult2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Token\", function() { return Token; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TokenizationResult\", function() { return TokenizationResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TokenizationResult2\", function() { return TokenizationResult2; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Token = /** @class */ (function () {\n    function Token(offset, type, language) {\n        this.offset = offset | 0; // @perf\n        this.type = type;\n        this.language = language;\n    }\n    Token.prototype.toString = function () {\n        return '(' + this.offset + ', ' + this.type + ')';\n    };\n    return Token;\n}());\n\nvar TokenizationResult = /** @class */ (function () {\n    function TokenizationResult(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult;\n}());\n\nvar TokenizationResult2 = /** @class */ (function () {\n    function TokenizationResult2(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n    }\n    return TokenizationResult2;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/core/token.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/core/uint.js":
/*!***************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/core/uint.js ***!
  \***************************************************************************/
/*! exports provided: Uint8Matrix, toUint8, toUint32, toUint32Array */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Uint8Matrix\", function() { return Uint8Matrix; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toUint8\", function() { return toUint8; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toUint32\", function() { return toUint32; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toUint32Array\", function() { return toUint32Array; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Uint8Matrix = /** @class */ (function () {\n    function Uint8Matrix(rows, cols, defaultValue) {\n        var data = new Uint8Array(rows * cols);\n        for (var i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    Uint8Matrix.prototype.get = function (row, col) {\n        return this._data[row * this.cols + col];\n    };\n    Uint8Matrix.prototype.set = function (row, col, value) {\n        this._data[row * this.cols + col] = value;\n    };\n    return Uint8Matrix;\n}());\n\nfunction toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nfunction toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\nfunction toUint32Array(arr) {\n    var len = arr.length;\n    var r = new Uint32Array(len);\n    for (var i = 0; i < len; i++) {\n        r[i] = toUint32(arr[i]);\n    }\n    return r;\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/core/uint.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/diff/diffComputer.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/diff/diffComputer.js ***!
  \***********************************************************************************/
/*! exports provided: DiffComputer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiffComputer\", function() { return DiffComputer; });\n/* harmony import */ var _base_common_diff_diff__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../base/common/diff/diff */ \"./node_modules/monaco-editor-core/esm/vs/base/common/diff/diff.js\");\n/* harmony import */ var _base_common_strings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../base/common/strings */ \"./node_modules/monaco-editor-core/esm/vs/base/common/strings.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar MAXIMUM_RUN_TIME = 5000; // 5 seconds\nvar MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    var diffAlgo = new _base_common_diff_diff__WEBPACK_IMPORTED_MODULE_0__[\"LcsDiff\"](originalSequence, modifiedSequence, continueProcessingPredicate);\n    return diffAlgo.ComputeDiff(pretty);\n}\nvar LineMarkerSequence = /** @class */ (function () {\n    function LineMarkerSequence(lines) {\n        var startColumns = [];\n        var endColumns = [];\n        for (var i = 0, length_1 = lines.length; i < length_1; i++) {\n            startColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n        }\n        this._lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    LineMarkerSequence.prototype.getLength = function () {\n        return this._lines.length;\n    };\n    LineMarkerSequence.prototype.getElementAtIndex = function (i) {\n        return this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n    };\n    LineMarkerSequence.prototype.getStartLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence.prototype.getEndLineNumber = function (i) {\n        return i + 1;\n    };\n    LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n        var r = _base_common_strings__WEBPACK_IMPORTED_MODULE_1__[\"firstNonWhitespaceIndex\"](txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 1;\n    };\n    LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n        var r = _base_common_strings__WEBPACK_IMPORTED_MODULE_1__[\"lastNonWhitespaceIndex\"](txt);\n        if (r === -1) {\n            return defaultValue;\n        }\n        return r + 2;\n    };\n    LineMarkerSequence.prototype.getCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        var charCodes = [];\n        var lineNumbers = [];\n        var columns = [];\n        var len = 0;\n        for (var index = startIndex; index <= endIndex; index++) {\n            var lineContent = this._lines[index];\n            var startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            var endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (var col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n        }\n        return new CharSequence(charCodes, lineNumbers, columns);\n    };\n    return LineMarkerSequence;\n}());\nvar CharSequence = /** @class */ (function () {\n    function CharSequence(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    CharSequence.prototype.getLength = function () {\n        return this._charCodes.length;\n    };\n    CharSequence.prototype.getElementAtIndex = function (i) {\n        return this._charCodes[i];\n    };\n    CharSequence.prototype.getStartLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getStartColumn = function (i) {\n        return this._columns[i];\n    };\n    CharSequence.prototype.getEndLineNumber = function (i) {\n        return this._lineNumbers[i];\n    };\n    CharSequence.prototype.getEndColumn = function (i) {\n        return this._columns[i] + 1;\n    };\n    return CharSequence;\n}());\nvar CharChange = /** @class */ (function () {\n    function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n        var originalStartLineNumber;\n        var originalStartColumn;\n        var originalEndLineNumber;\n        var originalEndColumn;\n        var modifiedStartLineNumber;\n        var modifiedStartColumn;\n        var modifiedEndLineNumber;\n        var modifiedEndColumn;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = 0;\n            originalStartColumn = 0;\n            originalEndLineNumber = 0;\n            originalEndColumn = 0;\n        }\n        else {\n            originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n            originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n            originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = 0;\n            modifiedStartColumn = 0;\n            modifiedEndLineNumber = 0;\n            modifiedEndColumn = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n    };\n    return CharChange;\n}());\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    var result = [rawChanges[0]];\n    var prevChange = result[0];\n    for (var i = 1, len = rawChanges.length; i < len; i++) {\n        var currChange = rawChanges[i];\n        var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n        var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            // Merge the current change into the previous one\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            // Add the current change\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nvar LineChange = /** @class */ (function () {\n    function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        var originalStartLineNumber;\n        var originalEndLineNumber;\n        var modifiedStartLineNumber;\n        var modifiedEndLineNumber;\n        var charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n            var originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            var modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n            if (shouldPostProcessCharChanges) {\n                rawChanges = postProcessCharChanges(rawChanges);\n            }\n            charChanges = [];\n            for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n                charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n            }\n        }\n        return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n    };\n    return LineChange;\n}());\nvar DiffComputer = /** @class */ (function () {\n    function DiffComputer(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = new LineMarkerSequence(originalLines);\n        this.modified = new LineMarkerSequence(modifiedLines);\n    }\n    DiffComputer.prototype.computeDiff = function () {\n        if (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n            // empty original => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: 1,\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: this.modified.getLength(),\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        if (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n            // empty modified => fast path\n            return [{\n                    originalStartLineNumber: 1,\n                    originalEndLineNumber: this.original.getLength(),\n                    modifiedStartLineNumber: 1,\n                    modifiedEndLineNumber: 1,\n                    charChanges: [{\n                            modifiedEndColumn: 0,\n                            modifiedEndLineNumber: 0,\n                            modifiedStartColumn: 0,\n                            modifiedStartLineNumber: 0,\n                            originalEndColumn: 0,\n                            originalEndLineNumber: 0,\n                            originalStartColumn: 0,\n                            originalStartLineNumber: 0\n                        }]\n                }];\n        }\n        this.computationStartTime = (new Date()).getTime();\n        var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n        // The diff is always computed with ignoring trim whitespace\n        // This ensures we get the prettiest diff\n        if (this.shouldIgnoreTrimWhitespace) {\n            var lineChanges = [];\n            for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return lineChanges;\n        }\n        // Need to post-process and introduce changes where the trim whitespace is different\n        // Note that we are looping starting at -1 to also cover the lines before the first change\n        var result = [];\n        var originalLineIndex = 0;\n        var modifiedLineIndex = 0;\n        for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n            var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                var originalLine = this.originalLines[originalLineIndex];\n                var modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    // These lines differ only in trim whitespace\n                    // Check the leading whitespace\n                    {\n                        var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n                        var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    // Check the trailing whitespace\n                    {\n                        var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n                        var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n                        var originalMaxColumn = originalLine.length + 1;\n                        var modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                // Emit the actual change\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return result;\n    };\n    DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            // Merged into previous\n            return;\n        }\n        var charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n        }\n        result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n    };\n    DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        var len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        var prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            // Don't merge with inserts/deletes\n            return false;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges) {\n                prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n            }\n            return true;\n        }\n        return false;\n    };\n    DiffComputer.prototype._continueProcessingPredicate = function () {\n        if (this.maximumRunTimeMs === 0) {\n            return true;\n        }\n        var now = (new Date()).getTime();\n        return now - this.computationStartTime < this.maximumRunTimeMs;\n    };\n    return DiffComputer;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/diff/diffComputer.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/model/mirrorTextModel.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/model/mirrorTextModel.js ***!
  \***************************************************************************************/
/*! exports provided: MirrorTextModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MirrorTextModel\", function() { return MirrorTextModel; });\n/* harmony import */ var _core_position__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/position */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/core/position.js\");\n/* harmony import */ var _viewModel_prefixSumComputer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../viewModel/prefixSumComputer */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/viewModel/prefixSumComputer.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar MirrorTextModel = /** @class */ (function () {\n    function MirrorTextModel(uri, lines, eol, versionId) {\n        this._uri = uri;\n        this._lines = lines;\n        this._eol = eol;\n        this._versionId = versionId;\n        this._lineStarts = null;\n    }\n    MirrorTextModel.prototype.dispose = function () {\n        this._lines.length = 0;\n    };\n    MirrorTextModel.prototype.getText = function () {\n        return this._lines.join(this._eol);\n    };\n    MirrorTextModel.prototype.onEvents = function (e) {\n        if (e.eol && e.eol !== this._eol) {\n            this._eol = e.eol;\n            this._lineStarts = null;\n        }\n        // Update my lines\n        var changes = e.changes;\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var change = changes_1[_i];\n            this._acceptDeleteRange(change.range);\n            this._acceptInsertText(new _core_position__WEBPACK_IMPORTED_MODULE_0__[\"Position\"](change.range.startLineNumber, change.range.startColumn), change.text);\n        }\n        this._versionId = e.versionId;\n    };\n    MirrorTextModel.prototype._ensureLineStarts = function () {\n        if (!this._lineStarts) {\n            var eolLength = this._eol.length;\n            var linesLength = this._lines.length;\n            var lineStartValues = new Uint32Array(linesLength);\n            for (var i = 0; i < linesLength; i++) {\n                lineStartValues[i] = this._lines[i].length + eolLength;\n            }\n            this._lineStarts = new _viewModel_prefixSumComputer__WEBPACK_IMPORTED_MODULE_1__[\"PrefixSumComputer\"](lineStartValues);\n        }\n    };\n    /**\n     * All changes to a line's text go through this method\n     */\n    MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n        this._lines[lineIndex] = newValue;\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n        }\n    };\n    MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n        if (range.startLineNumber === range.endLineNumber) {\n            if (range.startColumn === range.endColumn) {\n                // Nothing to delete\n                return;\n            }\n            // Delete text on the affected line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n            return;\n        }\n        // Take remaining text on last line and append it to remaining text on first line\n        this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n            + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n        // Delete middle lines\n        this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n        }\n    };\n    MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n        if (insertText.length === 0) {\n            // Nothing to insert\n            return;\n        }\n        var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n        if (insertLines.length === 1) {\n            // Inserting text on one line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]\n                + this._lines[position.lineNumber - 1].substring(position.column - 1));\n            return;\n        }\n        // Append overflowing text from first line to the end of text to insert\n        insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n        // Delete overflowing text from first line and insert text on first line\n        this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n            + insertLines[0]);\n        // Insert new lines & store lengths\n        var newLengths = new Uint32Array(insertLines.length - 1);\n        for (var i = 1; i < insertLines.length; i++) {\n            this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n            newLengths[i - 1] = insertLines[i].length + this._eol.length;\n        }\n        if (this._lineStarts) {\n            // update prefix sum\n            this._lineStarts.insertValues(position.lineNumber, newLengths);\n        }\n    };\n    return MirrorTextModel;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/model/mirrorTextModel.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/model/wordHelper.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/model/wordHelper.js ***!
  \**********************************************************************************/
/*! exports provided: USUAL_WORD_SEPARATORS, DEFAULT_WORD_REGEXP, ensureValidWordDefinition, getWordAtText */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"USUAL_WORD_SEPARATORS\", function() { return USUAL_WORD_SEPARATORS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DEFAULT_WORD_REGEXP\", function() { return DEFAULT_WORD_REGEXP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ensureValidWordDefinition\", function() { return ensureValidWordDefinition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getWordAtText\", function() { return getWordAtText; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords) {\n    if (allowInWords === void 0) { allowInWords = ''; }\n    var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (var _i = 0, USUAL_WORD_SEPARATORS_1 = USUAL_WORD_SEPARATORS; _i < USUAL_WORD_SEPARATORS_1.length; _i++) {\n        var sep = USUAL_WORD_SEPARATORS_1[_i];\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nvar DEFAULT_WORD_REGEXP = createWordRegExp();\nfunction ensureValidWordDefinition(wordDefinition) {\n    var result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            var flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nfunction getWordAtPosFast(column, wordDefinition, text, textOffset) {\n    // find whitespace enclosed text around column and match from there\n    var pos = column - 1 - textOffset;\n    var start = text.lastIndexOf(' ', pos - 1) + 1;\n    wordDefinition.lastIndex = start;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n    // matches all words starting at the beginning\n    // of the input until it finds a match that encloses\n    // the desired column. slow but correct\n    var pos = column - 1 - textOffset;\n    wordDefinition.lastIndex = 0;\n    var match;\n    while (match = wordDefinition.exec(text)) {\n        var matchIndex = match.index || 0;\n        if (matchIndex > pos) {\n            // |nW -> matched only after the pos\n            return null;\n        }\n        else if (wordDefinition.lastIndex >= pos) {\n            // W|W -> match encloses pos\n            return {\n                word: match[0],\n                startColumn: textOffset + 1 + matchIndex,\n                endColumn: textOffset + 1 + wordDefinition.lastIndex\n            };\n        }\n    }\n    return null;\n}\nfunction getWordAtText(column, wordDefinition, text, textOffset) {\n    // if `words` can contain whitespace character we have to use the slow variant\n    // otherwise we use the fast variant of finding a word\n    wordDefinition.lastIndex = 0;\n    var match = wordDefinition.exec(text);\n    if (!match) {\n        return null;\n    }\n    // todo@joh the `match` could already be the (first) word\n    var ret = match[0].indexOf(' ') >= 0\n        // did match a word which contains a space character -> use slow word find\n        ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n        // sane word definition -> use fast word find\n        : getWordAtPosFast(column, wordDefinition, text, textOffset);\n    // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n    // in an undefined state and to not confuse other users of the wordDefinition\n    // we reset the lastIndex\n    wordDefinition.lastIndex = 0;\n    return ret;\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/model/wordHelper.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/modes/linkComputer.js":
/*!************************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/modes/linkComputer.js ***!
  \************************************************************************************/
/*! exports provided: StateMachine, LinkComputer, computeLinks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StateMachine\", function() { return StateMachine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LinkComputer\", function() { return LinkComputer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"computeLinks\", function() { return computeLinks; });\n/* harmony import */ var _core_characterClassifier__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/characterClassifier */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/core/characterClassifier.js\");\n/* harmony import */ var _core_uint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/uint */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/core/uint.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar StateMachine = /** @class */ (function () {\n    function StateMachine(edges) {\n        var maxCharCode = 0;\n        var maxState = 0 /* Invalid */;\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        var states = new _core_uint__WEBPACK_IMPORTED_MODULE_1__[\"Uint8Matrix\"](maxState, maxCharCode, 0 /* Invalid */);\n        for (var i = 0, len = edges.length; i < len; i++) {\n            var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    StateMachine.prototype.nextState = function (currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return 0 /* Invalid */;\n        }\n        return this._states.get(currentState, chCode);\n    };\n    return StateMachine;\n}());\n\n// State machine for http:// or https:// or file://\nvar _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = new StateMachine([\n            [1 /* Start */, 104 /* h */, 2 /* H */],\n            [1 /* Start */, 72 /* H */, 2 /* H */],\n            [1 /* Start */, 102 /* f */, 6 /* F */],\n            [1 /* Start */, 70 /* F */, 6 /* F */],\n            [2 /* H */, 116 /* t */, 3 /* HT */],\n            [2 /* H */, 84 /* T */, 3 /* HT */],\n            [3 /* HT */, 116 /* t */, 4 /* HTT */],\n            [3 /* HT */, 84 /* T */, 4 /* HTT */],\n            [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n            [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n            [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n            [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n            [6 /* F */, 105 /* i */, 7 /* FI */],\n            [6 /* F */, 73 /* I */, 7 /* FI */],\n            [7 /* FI */, 108 /* l */, 8 /* FIL */],\n            [7 /* FI */, 76 /* L */, 8 /* FIL */],\n            [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n            [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n            [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n            [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n            [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n        ]);\n    }\n    return _stateMachine;\n}\nvar _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = new _core_characterClassifier__WEBPACK_IMPORTED_MODULE_0__[\"CharacterClassifier\"](0 /* None */);\n        var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n        for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n        }\n        var CANNOT_END_WITH_CHARACTERS = '.,;';\n        for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n        }\n    }\n    return _classifier;\n}\nvar LinkComputer = /** @class */ (function () {\n    function LinkComputer() {\n    }\n    LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        // Do not allow to end link in certain characters...\n        var lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            var chCode = line.charCodeAt(lastIncludedCharIndex);\n            var chClass = classifier.get(chCode);\n            if (chClass !== 2 /* CannotEndIn */) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        // Handle links enclosed in parens, square brackets and curlys.\n        if (linkBeginIndex > 0) {\n            var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                // Do not end in ) if ( is before the link start\n                // Do not end in ] if [ is before the link start\n                // Do not end in } if { is before the link start\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    };\n    LinkComputer.computeLinks = function (model, stateMachine) {\n        if (stateMachine === void 0) { stateMachine = getStateMachine(); }\n        var classifier = getClassifier();\n        var result = [];\n        for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            var line = model.getLineContent(i);\n            var len = line.length;\n            var j = 0;\n            var linkBeginIndex = 0;\n            var linkBeginChCode = 0;\n            var state = 1 /* Start */;\n            var hasOpenParens = false;\n            var hasOpenSquareBracket = false;\n            var hasOpenCurlyBracket = false;\n            while (j < len) {\n                var resetStateMachine = false;\n                var chCode = line.charCodeAt(j);\n                if (state === 13 /* Accept */) {\n                    var chClass = void 0;\n                    switch (chCode) {\n                        case 40 /* OpenParen */:\n                            hasOpenParens = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 41 /* CloseParen */:\n                            chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 91 /* OpenSquareBracket */:\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 93 /* CloseSquareBracket */:\n                            chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        case 123 /* OpenCurlyBrace */:\n                            hasOpenCurlyBracket = true;\n                            chClass = 0 /* None */;\n                            break;\n                        case 125 /* CloseCurlyBrace */:\n                            chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                            break;\n                        /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                        case 39 /* SingleQuote */:\n                            chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 34 /* DoubleQuote */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        case 96 /* BackTick */:\n                            chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === 12 /* End */) {\n                    var chClass = void 0;\n                    if (chCode === 91 /* OpenSquareBracket */) {\n                        // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                        hasOpenSquareBracket = true;\n                        chClass = 0 /* None */;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    // Check if character terminates link\n                    if (chClass === 1 /* ForceTermination */) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = 13 /* Accept */;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === 0 /* Invalid */) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = 1 /* Start */;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    // Record where the link started\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === 13 /* Accept */) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    };\n    return LinkComputer;\n}());\n\n/**\n * Returns an array of all links contains in the provided\n * document. *Note* that this operation is computational\n * expensive and should not run in the UI thread.\n */\nfunction computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        // Unknown caller!\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/modes/linkComputer.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js ***!
  \******************************************************************************************************/
/*! exports provided: BasicInplaceReplace */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BasicInplaceReplace\", function() { return BasicInplaceReplace; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar BasicInplaceReplace = /** @class */ (function () {\n    function BasicInplaceReplace() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            var result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            var result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n        var numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    };\n    BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n        var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        var n1 = Number(value);\n        var n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null; // don't do negative\n                //\t\t\t} else if(n1 === 9 && up) {\n                //\t\t\t\treturn null; // don't insert 10 into a number\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    };\n    BasicInplaceReplace.prototype.textReplace = function (value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    };\n    BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n        var result = null;\n        for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    };\n    BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n        var idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    };\n    BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n    return BasicInplaceReplace;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/services/editorSimpleWorker.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/services/editorSimpleWorker.js ***!
  \*********************************************************************************************/
/*! exports provided: BaseEditorSimpleWorker, EditorSimpleWorkerImpl, create */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BaseEditorSimpleWorker\", function() { return BaseEditorSimpleWorker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EditorSimpleWorkerImpl\", function() { return EditorSimpleWorkerImpl; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"create\", function() { return create; });\n/* harmony import */ var _base_common_arrays__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../base/common/arrays */ \"./node_modules/monaco-editor-core/esm/vs/base/common/arrays.js\");\n/* harmony import */ var _base_common_diff_diff__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../base/common/diff/diff */ \"./node_modules/monaco-editor-core/esm/vs/base/common/diff/diff.js\");\n/* harmony import */ var _base_common_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../base/common/iterator */ \"./node_modules/monaco-editor-core/esm/vs/base/common/iterator.js\");\n/* harmony import */ var _base_common_platform__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../base/common/platform */ \"./node_modules/monaco-editor-core/esm/vs/base/common/platform.js\");\n/* harmony import */ var _base_common_uri__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../base/common/uri */ \"./node_modules/monaco-editor-core/esm/vs/base/common/uri.js\");\n/* harmony import */ var _core_position__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/position */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/core/position.js\");\n/* harmony import */ var _core_range__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/range */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/core/range.js\");\n/* harmony import */ var _diff_diffComputer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../diff/diffComputer */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/diff/diffComputer.js\");\n/* harmony import */ var _model_mirrorTextModel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../model/mirrorTextModel */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/model/mirrorTextModel.js\");\n/* harmony import */ var _model_wordHelper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../model/wordHelper */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/model/wordHelper.js\");\n/* harmony import */ var _modes_linkComputer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../modes/linkComputer */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/modes/linkComputer.js\");\n/* harmony import */ var _modes_supports_inplaceReplaceSupport__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../modes/supports/inplaceReplaceSupport */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/modes/supports/inplaceReplaceSupport.js\");\n/* harmony import */ var _standalone_standaloneBase__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../standalone/standaloneBase */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/standalone/standaloneBase.js\");\n/* harmony import */ var _base_common_types__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../base/common/types */ \"./node_modules/monaco-editor-core/esm/vs/base/common/types.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @internal\n */\nvar MirrorModel = /** @class */ (function (_super) {\n    __extends(MirrorModel, _super);\n    function MirrorModel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MirrorModel.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"version\", {\n        get: function () {\n            return this._versionId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MirrorModel.prototype, \"eol\", {\n        get: function () {\n            return this._eol;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MirrorModel.prototype.getValue = function () {\n        return this.getText();\n    };\n    MirrorModel.prototype.getLinesContent = function () {\n        return this._lines.slice(0);\n    };\n    MirrorModel.prototype.getLineCount = function () {\n        return this._lines.length;\n    };\n    MirrorModel.prototype.getLineContent = function (lineNumber) {\n        return this._lines[lineNumber - 1];\n    };\n    MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n        var wordAtText = Object(_model_wordHelper__WEBPACK_IMPORTED_MODULE_9__[\"getWordAtText\"])(position.column, Object(_model_wordHelper__WEBPACK_IMPORTED_MODULE_9__[\"ensureValidWordDefinition\"])(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return new _core_range__WEBPACK_IMPORTED_MODULE_6__[\"Range\"](position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n        }\n        return null;\n    };\n    MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n        var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    };\n    MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n        var _this = this;\n        var obj;\n        var lineNumber = 0;\n        var lineText;\n        var wordRangesIdx = 0;\n        var wordRanges = [];\n        var next = function () {\n            if (wordRangesIdx < wordRanges.length) {\n                var value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                wordRangesIdx += 1;\n                if (!obj) {\n                    obj = { done: false, value: value };\n                }\n                else {\n                    obj.value = value;\n                }\n                return obj;\n            }\n            else if (lineNumber >= _this._lines.length) {\n                return _base_common_iterator__WEBPACK_IMPORTED_MODULE_2__[\"FIN\"];\n            }\n            else {\n                lineText = _this._lines[lineNumber];\n                wordRanges = _this._wordenize(lineText, wordDefinition);\n                wordRangesIdx = 0;\n                lineNumber += 1;\n                return next();\n            }\n        };\n        return { next: next };\n    };\n    MirrorModel.prototype.getLineWords = function (lineNumber, wordDefinition) {\n        var content = this._lines[lineNumber - 1];\n        var ranges = this._wordenize(content, wordDefinition);\n        var words = [];\n        for (var _i = 0, ranges_1 = ranges; _i < ranges_1.length; _i++) {\n            var range = ranges_1[_i];\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    };\n    MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n        var result = [];\n        var match;\n        wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                // it did match the empty string\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    };\n    MirrorModel.prototype.getValueInRange = function (range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        var lineEnding = this._eol;\n        var startLineIndex = range.startLineNumber - 1;\n        var endLineIndex = range.endLineNumber - 1;\n        var resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    };\n    MirrorModel.prototype.offsetAt = function (position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n    };\n    MirrorModel.prototype.positionAt = function (offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        var out = this._lineStarts.getIndexOf(offset);\n        var lineLength = this._lines[out.index].length;\n        // Ensure we return a valid position\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    };\n    MirrorModel.prototype._validateRange = function (range) {\n        var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    };\n    MirrorModel.prototype._validatePosition = function (position) {\n        if (!_core_position__WEBPACK_IMPORTED_MODULE_5__[\"Position\"].isIPosition(position)) {\n            throw new Error('bad position');\n        }\n        var lineNumber = position.lineNumber, column = position.column;\n        var hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            var maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber: lineNumber, column: column };\n        }\n    };\n    return MirrorModel;\n}(_model_mirrorTextModel__WEBPACK_IMPORTED_MODULE_8__[\"MirrorTextModel\"]));\n/**\n * @internal\n */\nvar BaseEditorSimpleWorker = /** @class */ (function () {\n    function BaseEditorSimpleWorker(foreignModuleFactory) {\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    // ---- BEGIN diff --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        var original = this._getModel(originalUrl);\n        var modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return Promise.resolve(null);\n        }\n        var originalLines = original.getLinesContent();\n        var modifiedLines = modified.getLinesContent();\n        var diffComputer = new _diff_diffComputer__WEBPACK_IMPORTED_MODULE_7__[\"DiffComputer\"](originalLines, modifiedLines, {\n            shouldComputeCharChanges: true,\n            shouldPostProcessCharChanges: true,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true\n        });\n        var changes = diffComputer.computeDiff();\n        var identical = (changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n        return Promise.resolve({\n            identical: identical,\n            changes: changes\n        });\n    };\n    BaseEditorSimpleWorker.prototype._modelsAreIdentical = function (original, modified) {\n        var originalLineCount = original.getLineCount();\n        var modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (var line = 1; line <= originalLineCount; line++) {\n            var originalLine = original.getLineContent(line);\n            var modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    };\n    BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(edits);\n        }\n        var result = [];\n        var lastEol = undefined;\n        edits = Object(_base_common_arrays__WEBPACK_IMPORTED_MODULE_0__[\"mergeSort\"])(edits, function (a, b) {\n            if (a.range && b.range) {\n                return _core_range__WEBPACK_IMPORTED_MODULE_6__[\"Range\"].compareRangesUsingStarts(a.range, b.range);\n            }\n            // eol only changes should go to the end\n            var aRng = a.range ? 0 : 1;\n            var bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n            var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (_core_range__WEBPACK_IMPORTED_MODULE_6__[\"Range\"].isEmpty(range) && !text) {\n                // empty change\n                continue;\n            }\n            var original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                // noop\n                continue;\n            }\n            // make sure diff won't take too long\n            if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n                result.push({ range: range, text: text });\n                continue;\n            }\n            // compute diff between original and edit.text\n            var changes = Object(_base_common_diff_diff__WEBPACK_IMPORTED_MODULE_1__[\"stringDiff\"])(original, text, false);\n            var editOffset = model.offsetAt(_core_range__WEBPACK_IMPORTED_MODULE_6__[\"Range\"].lift(range).getStartPosition());\n            for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n                var change = changes_1[_b];\n                var start = model.positionAt(editOffset + change.originalStart);\n                var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                var newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return Promise.resolve(result);\n    };\n    // ---- END minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        return Promise.resolve(Object(_modes_linkComputer__WEBPACK_IMPORTED_MODULE_10__[\"computeLinks\"])(model));\n    };\n    BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var suggestions = [];\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var currentWord = model.getWordUntilPosition(position, wordDefRegExp);\n        var seen = Object.create(null);\n        seen[currentWord.word] = true;\n        for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n            var word = e.value;\n            if (seen[word]) {\n                continue;\n            }\n            seen[word] = true;\n            if (!isNaN(Number(word))) {\n                continue;\n            }\n            suggestions.push({\n                kind: 18 /* Text */,\n                label: word,\n                insertText: word,\n                range: { startLineNumber: position.lineNumber, startColumn: currentWord.startColumn, endLineNumber: position.lineNumber, endColumn: currentWord.endColumn }\n            });\n        }\n        return Promise.resolve({ suggestions: suggestions });\n    };\n    // ---- END suggest --------------------------------------------------------------------------\n    //#region -- word ranges --\n    BaseEditorSimpleWorker.prototype.computeWordRanges = function (modelUrl, range, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(Object.create(null));\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        var result = Object.create(null);\n        for (var line = range.startLineNumber; line < range.endLineNumber; line++) {\n            var words = model.getLineWords(line, wordDefRegExp);\n            for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\n                var word = words_1[_i];\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                var array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return Promise.resolve(result);\n    };\n    //#endregion\n    BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n        var model = this._getModel(modelUrl);\n        if (!model) {\n            return Promise.resolve(null);\n        }\n        var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        var selectionText = model.getValueInRange(range);\n        var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return Promise.resolve(null);\n        }\n        var word = model.getValueInRange(wordRange);\n        var result = _modes_supports_inplaceReplaceSupport__WEBPACK_IMPORTED_MODULE_11__[\"BasicInplaceReplace\"].INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return Promise.resolve(result);\n    };\n    // ---- BEGIN foreign module support --------------------------------------------------------------------------\n    BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n        var _this = this;\n        var ctx = {\n            getMirrorModels: function () {\n                return _this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            // static foreing module\n            var methods = [];\n            for (var _i = 0, _a = Object(_base_common_types__WEBPACK_IMPORTED_MODULE_13__[\"getAllPropertyNames\"])(this._foreignModule); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (typeof this._foreignModule[prop] === 'function') {\n                    methods.push(prop);\n                }\n            }\n            return Promise.resolve(methods);\n        }\n        // ESM-comment-begin\n        // \t\treturn new Promise<any>((resolve, reject) => {\n        // \t\t\trequire([moduleId], (foreignModule: { create: IForeignModuleFactory }) => {\n        // \t\t\t\tthis._foreignModule = foreignModule.create(ctx, createData);\n        // \n        // \t\t\t\tlet methods: string[] = [];\n        // \t\t\t\tfor (const prop of getAllPropertyNames(this._foreignModule)) {\n        // \t\t\t\t\tif (typeof this._foreignModule[prop] === 'function') {\n        // \t\t\t\t\t\tmethods.push(prop);\n        // \t\t\t\t\t}\n        // \t\t\t\t}\n        // \n        // \t\t\t\tresolve(methods);\n        // \n        // \t\t\t}, reject);\n        // \t\t});\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        return Promise.reject(new Error(\"Unexpected usage\"));\n        // ESM-uncomment-end\n    };\n    // foreign method request\n    BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    };\n    // ---- END diff --------------------------------------------------------------------------\n    // ---- BEGIN minimal edits ---------------------------------------------------------------\n    BaseEditorSimpleWorker._diffLimit = 10000;\n    // ---- BEGIN suggest --------------------------------------------------------------------------\n    BaseEditorSimpleWorker._suggestionsLimit = 10000;\n    return BaseEditorSimpleWorker;\n}());\n\n/**\n * @internal\n */\nvar EditorSimpleWorkerImpl = /** @class */ (function (_super) {\n    __extends(EditorSimpleWorkerImpl, _super);\n    function EditorSimpleWorkerImpl(foreignModuleFactory) {\n        var _this = _super.call(this, foreignModuleFactory) || this;\n        _this._models = Object.create(null);\n        return _this;\n    }\n    EditorSimpleWorkerImpl.prototype.dispose = function () {\n        this._models = Object.create(null);\n    };\n    EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n        return this._models[uri];\n    };\n    EditorSimpleWorkerImpl.prototype._getModels = function () {\n        var _this = this;\n        var all = [];\n        Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n        return all;\n    };\n    EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n        this._models[data.url] = new MirrorModel(_base_common_uri__WEBPACK_IMPORTED_MODULE_4__[\"URI\"].parse(data.url), data.lines, data.EOL, data.versionId);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        var model = this._models[strURL];\n        model.onEvents(e);\n    };\n    EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    };\n    return EditorSimpleWorkerImpl;\n}(BaseEditorSimpleWorker));\n\n/**\n * Called on the worker side\n * @internal\n */\nfunction create() {\n    return new EditorSimpleWorkerImpl(null);\n}\nif (typeof importScripts === 'function') {\n    // Running in a web worker\n    _base_common_platform__WEBPACK_IMPORTED_MODULE_3__[\"globals\"].monaco = Object(_standalone_standaloneBase__WEBPACK_IMPORTED_MODULE_12__[\"createMonacoBaseAPI\"])();\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/services/editorSimpleWorker.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\t true ? factory() :\n\t\tundefined;\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/standalone/standaloneBase.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/standalone/standaloneBase.js ***!
  \*******************************************************************************************/
/*! exports provided: KeyMod, createMonacoBaseAPI */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyMod\", function() { return KeyMod; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createMonacoBaseAPI\", function() { return createMonacoBaseAPI; });\n/* harmony import */ var _promise_polyfill_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./promise-polyfill/polyfill */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js\");\n/* harmony import */ var _promise_polyfill_polyfill__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_promise_polyfill_polyfill__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _base_common_cancellation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../base/common/cancellation */ \"./node_modules/monaco-editor-core/esm/vs/base/common/cancellation.js\");\n/* harmony import */ var _base_common_event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../base/common/event */ \"./node_modules/monaco-editor-core/esm/vs/base/common/event.js\");\n/* harmony import */ var _base_common_keyCodes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../base/common/keyCodes */ \"./node_modules/monaco-editor-core/esm/vs/base/common/keyCodes.js\");\n/* harmony import */ var _base_common_uri__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../base/common/uri */ \"./node_modules/monaco-editor-core/esm/vs/base/common/uri.js\");\n/* harmony import */ var _core_position__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/position */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/core/position.js\");\n/* harmony import */ var _core_range__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/range */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/core/range.js\");\n/* harmony import */ var _core_selection__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/selection */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/core/selection.js\");\n/* harmony import */ var _core_token__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/token */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/core/token.js\");\n/* harmony import */ var _standaloneEnums__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./standaloneEnums */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/standalone/standaloneEnums.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\n\nvar KeyMod = /** @class */ (function () {\n    function KeyMod() {\n    }\n    KeyMod.chord = function (firstPart, secondPart) {\n        return Object(_base_common_keyCodes__WEBPACK_IMPORTED_MODULE_3__[\"KeyChord\"])(firstPart, secondPart);\n    };\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n    KeyMod.Shift = 1024 /* Shift */;\n    KeyMod.Alt = 512 /* Alt */;\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\n    return KeyMod;\n}());\n\nfunction createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: _base_common_cancellation__WEBPACK_IMPORTED_MODULE_1__[\"CancellationTokenSource\"],\n        Emitter: _base_common_event__WEBPACK_IMPORTED_MODULE_2__[\"Emitter\"],\n        KeyCode: _standaloneEnums__WEBPACK_IMPORTED_MODULE_9__[\"KeyCode\"],\n        KeyMod: KeyMod,\n        Position: _core_position__WEBPACK_IMPORTED_MODULE_5__[\"Position\"],\n        Range: _core_range__WEBPACK_IMPORTED_MODULE_6__[\"Range\"],\n        Selection: _core_selection__WEBPACK_IMPORTED_MODULE_7__[\"Selection\"],\n        SelectionDirection: _standaloneEnums__WEBPACK_IMPORTED_MODULE_9__[\"SelectionDirection\"],\n        MarkerSeverity: _standaloneEnums__WEBPACK_IMPORTED_MODULE_9__[\"MarkerSeverity\"],\n        MarkerTag: _standaloneEnums__WEBPACK_IMPORTED_MODULE_9__[\"MarkerTag\"],\n        Uri: _base_common_uri__WEBPACK_IMPORTED_MODULE_4__[\"URI\"],\n        Token: _core_token__WEBPACK_IMPORTED_MODULE_8__[\"Token\"]\n    };\n}\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/standalone/standaloneBase.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/standalone/standaloneEnums.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/standalone/standaloneEnums.js ***!
  \********************************************************************************************/
/*! exports provided: MarkerTag, MarkerSeverity, KeyCode, SelectionDirection, ScrollbarVisibility, OverviewRulerLane, EndOfLinePreference, DefaultEndOfLine, EndOfLineSequence, TrackedRangeStickiness, ScrollType, CursorChangeReason, RenderMinimap, WrappingIndent, TextEditorCursorBlinkingStyle, TextEditorCursorStyle, RenderLineNumbersType, ContentWidgetPositionPreference, OverlayWidgetPositionPreference, MouseTargetType, IndentAction, CompletionItemKind, CompletionItemInsertTextRule, CompletionTriggerKind, SignatureHelpTriggerKind, DocumentHighlightKind, SymbolKind */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkerTag\", function() { return MarkerTag; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkerSeverity\", function() { return MarkerSeverity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KeyCode\", function() { return KeyCode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SelectionDirection\", function() { return SelectionDirection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScrollbarVisibility\", function() { return ScrollbarVisibility; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OverviewRulerLane\", function() { return OverviewRulerLane; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EndOfLinePreference\", function() { return EndOfLinePreference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DefaultEndOfLine\", function() { return DefaultEndOfLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EndOfLineSequence\", function() { return EndOfLineSequence; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TrackedRangeStickiness\", function() { return TrackedRangeStickiness; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScrollType\", function() { return ScrollType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CursorChangeReason\", function() { return CursorChangeReason; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderMinimap\", function() { return RenderMinimap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WrappingIndent\", function() { return WrappingIndent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextEditorCursorBlinkingStyle\", function() { return TextEditorCursorBlinkingStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextEditorCursorStyle\", function() { return TextEditorCursorStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenderLineNumbersType\", function() { return RenderLineNumbersType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ContentWidgetPositionPreference\", function() { return ContentWidgetPositionPreference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OverlayWidgetPositionPreference\", function() { return OverlayWidgetPositionPreference; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MouseTargetType\", function() { return MouseTargetType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"IndentAction\", function() { return IndentAction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionItemKind\", function() { return CompletionItemKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionItemInsertTextRule\", function() { return CompletionItemInsertTextRule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionTriggerKind\", function() { return CompletionTriggerKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SignatureHelpTriggerKind\", function() { return SignatureHelpTriggerKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlightKind\", function() { return DocumentHighlightKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SymbolKind\", function() { return SymbolKind; });\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\nvar MarkerTag;\n(function (MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n})(MarkerTag || (MarkerTag = {}));\nvar MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nvar KeyCode;\n(function (KeyCode) {\n    /**\n     * Placed first to cover the 0 value of the enum.\n     */\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ';:' key\n     */\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n    /**\n     * For any country/region, the '+' key\n     * For the US standard keyboard, the '=+' key\n     */\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n    /**\n     * For any country/region, the ',' key\n     * For the US standard keyboard, the ',<' key\n     */\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n    /**\n     * For any country/region, the '-' key\n     * For the US standard keyboard, the '-_' key\n     */\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n    /**\n     * For any country/region, the '.' key\n     * For the US standard keyboard, the '.>' key\n     */\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '/?' key\n     */\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '`~' key\n     */\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '[{' key\n     */\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the '\\|' key\n     */\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ']}' key\n     */\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     * For the US standard keyboard, the ''\"' key\n     */\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n    /**\n     * Used for miscellaneous characters; it can vary by keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n    /**\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n     */\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n    /**\n     * Cover all key codes when IME is processing input.\n     */\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n    /**\n     * Placed last to cover the length of the enum.\n     * Please do not depend on this value!\n     */\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {}));\n/**\n * The direction of a selection.\n */\nvar SelectionDirection;\n(function (SelectionDirection) {\n    /**\n     * The selection starts above where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    /**\n     * The selection starts below where it ends.\n     */\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {}));\nvar ScrollbarVisibility;\n(function (ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\n/**\n * Vertical Lane in the overview ruler of the editor.\n */\nvar OverviewRulerLane;\n(function (OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {}));\n/**\n * End of line character preference.\n */\nvar EndOfLinePreference;\n(function (EndOfLinePreference) {\n    /**\n     * Use the end of line character identified in the text buffer.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {}));\n/**\n * The default end of line to use when instantiating models.\n */\nvar DefaultEndOfLine;\n(function (DefaultEndOfLine) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\n/**\n * End of line character preference.\n */\nvar EndOfLineSequence;\n(function (EndOfLineSequence) {\n    /**\n     * Use line feed (\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    /**\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\n     */\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {}));\n/**\n * Describes the behavior of decorations when typing/editing near their edges.\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n */\nvar TrackedRangeStickiness;\n(function (TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\nvar ScrollType;\n(function (ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {}));\n/**\n * Describes the reason the cursor has changed its position.\n */\nvar CursorChangeReason;\n(function (CursorChangeReason) {\n    /**\n     * Unknown or not set.\n     */\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    /**\n     * A `model.setValue()` was called.\n     */\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    /**\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n     */\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    /**\n     * There was an explicit user gesture.\n     */\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    /**\n     * There was a Paste.\n     */\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    /**\n     * There was an Undo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    /**\n     * There was a Redo.\n     */\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {}));\nvar RenderMinimap;\n(function (RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Small\"] = 1] = \"Small\";\n    RenderMinimap[RenderMinimap[\"Large\"] = 2] = \"Large\";\n    RenderMinimap[RenderMinimap[\"SmallBlocks\"] = 3] = \"SmallBlocks\";\n    RenderMinimap[RenderMinimap[\"LargeBlocks\"] = 4] = \"LargeBlocks\";\n})(RenderMinimap || (RenderMinimap = {}));\n/**\n * Describes how to indent wrapped lines.\n */\nvar WrappingIndent;\n(function (WrappingIndent) {\n    /**\n     * No indentation => wrapped lines begin at column 1.\n     */\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    /**\n     * Same => wrapped lines get the same indentation as the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    /**\n     * Indent => wrapped lines get +1 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    /**\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\n     */\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {}));\n/**\n * The kind of animation in which the editor's cursor should be rendered.\n */\nvar TextEditorCursorBlinkingStyle;\n(function (TextEditorCursorBlinkingStyle) {\n    /**\n     * Hidden\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    /**\n     * Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    /**\n     * Blinking with smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    /**\n     * Blinking with prolonged filled state and smooth fading\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    /**\n     * Expand collapse animation on the y axis\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    /**\n     * No-Blinking\n     */\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\n/**\n * The style in which the editor's cursor should be rendered.\n */\nvar TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\nvar RenderLineNumbersType;\n(function (RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\n/**\n * A positioning preference for rendering content widgets.\n */\nvar ContentWidgetPositionPreference;\n(function (ContentWidgetPositionPreference) {\n    /**\n     * Place the content widget exactly at a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    /**\n     * Place the content widget above a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    /**\n     * Place the content widget below a position\n     */\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\n/**\n * A positioning preference for rendering overlay widgets.\n */\nvar OverlayWidgetPositionPreference;\n(function (OverlayWidgetPositionPreference) {\n    /**\n     * Position the overlay widget in the top right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the bottom right corner\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    /**\n     * Position the overlay widget in the top center\n     */\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\n/**\n * Type of hit element with the mouse in the editor.\n */\nvar MouseTargetType;\n(function (MouseTargetType) {\n    /**\n     * Mouse is on top of an unknown element.\n     */\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /**\n     * Mouse is on top of the textarea used for input.\n     */\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    /**\n     * Mouse is on top of the glyph margin\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    /**\n     * Mouse is on top of the line numbers\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    /**\n     * Mouse is on top of the line decorations\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    /**\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\n     */\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    /**\n     * Mouse is on top of text in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    /**\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    /**\n     * Mouse is on top of a view zone in the content.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    /**\n     * Mouse is on top of a content widget.\n     */\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    /**\n     * Mouse is on top of the decorations overview ruler.\n     */\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    /**\n     * Mouse is on top of a scrollbar.\n     */\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    /**\n     * Mouse is on top of an overlay widget.\n     */\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    /**\n     * Mouse is outside of the editor.\n     */\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {}));\n/**\n * Describes what to do with the indentation when pressing Enter.\n */\nvar IndentAction;\n(function (IndentAction) {\n    /**\n     * Insert new line and copy the previous line's indentation.\n     */\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    /**\n     * Insert new line and indent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    /**\n     * Insert two new lines:\n     *  - the first one indented which will hold the cursor\n     *  - the second one at the same indentation level\n     */\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    /**\n     * Insert new line and outdent once (relative to the previous line's indentation).\n     */\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nvar CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 25] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}));\nvar CompletionItemInsertTextRule;\n(function (CompletionItemInsertTextRule) {\n    /**\n     * Adjust whitespace/indentation of multiline insert texts to\n     * match the current line indentation.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    /**\n     * `insertText` is a snippet.\n     */\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\n/**\n * How a suggest provider was triggered.\n */\nvar CompletionTriggerKind;\n(function (CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\nvar SignatureHelpTriggerKind;\n(function (SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\n/**\n * A document highlight kind.\n */\nvar DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * A symbol kind.\n */\nvar SymbolKind;\n(function (SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}));\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/standalone/standaloneEnums.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/common/viewModel/prefixSumComputer.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/common/viewModel/prefixSumComputer.js ***!
  \*********************************************************************************************/
/*! exports provided: PrefixSumIndexOfResult, PrefixSumComputer, PrefixSumComputerWithCache */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PrefixSumIndexOfResult\", function() { return PrefixSumIndexOfResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PrefixSumComputer\", function() { return PrefixSumComputer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PrefixSumComputerWithCache\", function() { return PrefixSumComputerWithCache; });\n/* harmony import */ var _core_uint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/uint */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/core/uint.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nvar PrefixSumIndexOfResult = /** @class */ (function () {\n    function PrefixSumIndexOfResult(index, remainder) {\n        this.index = index;\n        this.remainder = remainder;\n    }\n    return PrefixSumIndexOfResult;\n}());\n\nvar PrefixSumComputer = /** @class */ (function () {\n    function PrefixSumComputer(values) {\n        this.values = values;\n        this.prefixSum = new Uint32Array(values.length);\n        this.prefixSumValidIndex = new Int32Array(1);\n        this.prefixSumValidIndex[0] = -1;\n    }\n    PrefixSumComputer.prototype.getCount = function () {\n        return this.values.length;\n    };\n    PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n        insertIndex = Object(_core_uint__WEBPACK_IMPORTED_MODULE_0__[\"toUint32\"])(insertIndex);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        var insertValuesLen = insertValues.length;\n        if (insertValuesLen === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length + insertValuesLen);\n        this.values.set(oldValues.subarray(0, insertIndex), 0);\n        this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n        this.values.set(insertValues, insertIndex);\n        if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = insertIndex - 1;\n        }\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.changeValue = function (index, value) {\n        index = Object(_core_uint__WEBPACK_IMPORTED_MODULE_0__[\"toUint32\"])(index);\n        value = Object(_core_uint__WEBPACK_IMPORTED_MODULE_0__[\"toUint32\"])(value);\n        if (this.values[index] === value) {\n            return false;\n        }\n        this.values[index] = value;\n        if (index - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = index - 1;\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n        startIndex = Object(_core_uint__WEBPACK_IMPORTED_MODULE_0__[\"toUint32\"])(startIndex);\n        cnt = Object(_core_uint__WEBPACK_IMPORTED_MODULE_0__[\"toUint32\"])(cnt);\n        var oldValues = this.values;\n        var oldPrefixSum = this.prefixSum;\n        if (startIndex >= oldValues.length) {\n            return false;\n        }\n        var maxCnt = oldValues.length - startIndex;\n        if (cnt >= maxCnt) {\n            cnt = maxCnt;\n        }\n        if (cnt === 0) {\n            return false;\n        }\n        this.values = new Uint32Array(oldValues.length - cnt);\n        this.values.set(oldValues.subarray(0, startIndex), 0);\n        this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n        this.prefixSum = new Uint32Array(this.values.length);\n        if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n            this.prefixSumValidIndex[0] = startIndex - 1;\n        }\n        if (this.prefixSumValidIndex[0] >= 0) {\n            this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n        }\n        return true;\n    };\n    PrefixSumComputer.prototype.getTotalValue = function () {\n        if (this.values.length === 0) {\n            return 0;\n        }\n        return this._getAccumulatedValue(this.values.length - 1);\n    };\n    PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n        if (index < 0) {\n            return 0;\n        }\n        index = Object(_core_uint__WEBPACK_IMPORTED_MODULE_0__[\"toUint32\"])(index);\n        return this._getAccumulatedValue(index);\n    };\n    PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n        if (index <= this.prefixSumValidIndex[0]) {\n            return this.prefixSum[index];\n        }\n        var startIndex = this.prefixSumValidIndex[0] + 1;\n        if (startIndex === 0) {\n            this.prefixSum[0] = this.values[0];\n            startIndex++;\n        }\n        if (index >= this.values.length) {\n            index = this.values.length - 1;\n        }\n        for (var i = startIndex; i <= index; i++) {\n            this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n        }\n        this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n        return this.prefixSum[index];\n    };\n    PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        // Compute all sums (to get a fully valid prefixSum)\n        this.getTotalValue();\n        var low = 0;\n        var high = this.values.length - 1;\n        var mid = 0;\n        var midStop = 0;\n        var midStart = 0;\n        while (low <= high) {\n            mid = low + ((high - low) / 2) | 0;\n            midStop = this.prefixSum[mid];\n            midStart = midStop - this.values[mid];\n            if (accumulatedValue < midStart) {\n                high = mid - 1;\n            }\n            else if (accumulatedValue >= midStop) {\n                low = mid + 1;\n            }\n            else {\n                break;\n            }\n        }\n        return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n    };\n    return PrefixSumComputer;\n}());\n\nvar PrefixSumComputerWithCache = /** @class */ (function () {\n    function PrefixSumComputerWithCache(values) {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n        this._actual = new PrefixSumComputer(values);\n        this._bustCache();\n    }\n    PrefixSumComputerWithCache.prototype._bustCache = function () {\n        this._cacheAccumulatedValueStart = 0;\n        this._cache = null;\n    };\n    PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n        if (this._actual.insertValues(insertIndex, insertValues)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n        if (this._actual.changeValue(index, value)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n        if (this._actual.removeValues(startIndex, cnt)) {\n            this._bustCache();\n        }\n    };\n    PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n        return this._actual.getTotalValue();\n    };\n    PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n        return this._actual.getAccumulatedValue(index);\n    };\n    PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n        accumulatedValue = Math.floor(accumulatedValue); //@perf\n        if (this._cache !== null) {\n            var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n            if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n                // Cache hit!\n                return this._cache[cacheIndex];\n            }\n        }\n        // Cache miss!\n        return this._actual.getIndexOf(accumulatedValue);\n    };\n    /**\n     * Gives a hint that a lot of requests are about to come in for these accumulated values.\n     */\n    PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n        var newCache = [];\n        for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n            newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n        }\n        this._cache = newCache;\n        this._cacheAccumulatedValueStart = accumulatedValueStart;\n    };\n    return PrefixSumComputerWithCache;\n}());\n\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/common/viewModel/prefixSumComputer.js?");

/***/ }),

/***/ "./node_modules/monaco-editor-core/esm/vs/editor/editor.worker.js":
/*!************************************************************************!*\
  !*** ./node_modules/monaco-editor-core/esm/vs/editor/editor.worker.js ***!
  \************************************************************************/
/*! exports provided: initialize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initialize\", function() { return initialize; });\n/* harmony import */ var _base_common_worker_simpleWorker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base/common/worker/simpleWorker */ \"./node_modules/monaco-editor-core/esm/vs/base/common/worker/simpleWorker.js\");\n/* harmony import */ var _common_services_editorSimpleWorker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/services/editorSimpleWorker */ \"./node_modules/monaco-editor-core/esm/vs/editor/common/services/editorSimpleWorker.js\");\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nvar initialized = false;\nfunction initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var editorWorker = new _common_services_editorSimpleWorker__WEBPACK_IMPORTED_MODULE_1__[\"EditorSimpleWorkerImpl\"](foreignModule);\n    var simpleWorker = new _base_common_worker_simpleWorker__WEBPACK_IMPORTED_MODULE_0__[\"SimpleWorkerServer\"](function (msg) {\n        self.postMessage(msg);\n    }, editorWorker);\n    self.onmessage = function (e) {\n        simpleWorker.onmessage(e.data);\n    };\n}\nself.onmessage = function (e) {\n    // Ignore first message in this case and initialize if not yet initialized\n    if (!initialized) {\n        initialize(null);\n    }\n};\n\n\n//# sourceURL=webpack:///./node_modules/monaco-editor-core/esm/vs/editor/editor.worker.js?");

/***/ }),

/***/ "./node_modules/vscode-languageserver-types/lib/esm/main.js":
/*!******************************************************************!*\
  !*** ./node_modules/vscode-languageserver-types/lib/esm/main.js ***!
  \******************************************************************/
/*! exports provided: Position, Range, Location, LocationLink, Color, ColorInformation, ColorPresentation, FoldingRangeKind, FoldingRange, DiagnosticRelatedInformation, DiagnosticSeverity, Diagnostic, Command, TextEdit, TextDocumentEdit, CreateFile, RenameFile, DeleteFile, WorkspaceEdit, WorkspaceChange, TextDocumentIdentifier, VersionedTextDocumentIdentifier, TextDocumentItem, MarkupKind, MarkupContent, CompletionItemKind, InsertTextFormat, CompletionItem, CompletionList, MarkedString, Hover, ParameterInformation, SignatureInformation, DocumentHighlightKind, DocumentHighlight, SymbolKind, SymbolInformation, DocumentSymbol, CodeActionKind, CodeActionContext, CodeAction, CodeLens, FormattingOptions, DocumentLink, EOL, TextDocument, TextDocumentSaveReason */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Position\", function() { return Position; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return Range; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Location\", function() { return Location; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LocationLink\", function() { return LocationLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Color\", function() { return Color; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColorInformation\", function() { return ColorInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ColorPresentation\", function() { return ColorPresentation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FoldingRangeKind\", function() { return FoldingRangeKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FoldingRange\", function() { return FoldingRange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticRelatedInformation\", function() { return DiagnosticRelatedInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DiagnosticSeverity\", function() { return DiagnosticSeverity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Diagnostic\", function() { return Diagnostic; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Command\", function() { return Command; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextEdit\", function() { return TextEdit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentEdit\", function() { return TextDocumentEdit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CreateFile\", function() { return CreateFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RenameFile\", function() { return RenameFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DeleteFile\", function() { return DeleteFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceEdit\", function() { return WorkspaceEdit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceChange\", function() { return WorkspaceChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentIdentifier\", function() { return TextDocumentIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VersionedTextDocumentIdentifier\", function() { return VersionedTextDocumentIdentifier; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentItem\", function() { return TextDocumentItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkupKind\", function() { return MarkupKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkupContent\", function() { return MarkupContent; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionItemKind\", function() { return CompletionItemKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InsertTextFormat\", function() { return InsertTextFormat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionItem\", function() { return CompletionItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CompletionList\", function() { return CompletionList; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MarkedString\", function() { return MarkedString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Hover\", function() { return Hover; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParameterInformation\", function() { return ParameterInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SignatureInformation\", function() { return SignatureInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlightKind\", function() { return DocumentHighlightKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentHighlight\", function() { return DocumentHighlight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SymbolKind\", function() { return SymbolKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SymbolInformation\", function() { return SymbolInformation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentSymbol\", function() { return DocumentSymbol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeActionKind\", function() { return CodeActionKind; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeActionContext\", function() { return CodeActionContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeAction\", function() { return CodeAction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CodeLens\", function() { return CodeLens; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FormattingOptions\", function() { return FormattingOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DocumentLink\", function() { return DocumentLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EOL\", function() { return EOL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocument\", function() { return TextDocument; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TextDocumentSaveReason\", function() { return TextDocumentSaveReason; });\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nvar Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nvar Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nvar Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nvar LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nvar Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nvar ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nvar ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nvar FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nvar DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nvar DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nvar Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nvar Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nvar TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nvar TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nvar CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nvar RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nvar DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nvar WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\n\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nvar TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nvar VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nvar TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nvar MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nvar MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nvar CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nvar InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nvar CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nvar CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nvar MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nvar Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nvar ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n    ;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nvar SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nvar DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nvar DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nvar SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nvar SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\n/**\r\n * Represents programming constructs like variables, classes, interfaces etc.\r\n * that appear in a document. Document symbols can be hierarchical and they\r\n * have two ranges: one that encloses its definition and one that points to\r\n * its most interesting range, e.g. the range of an identifier.\r\n */\r\nvar DocumentSymbol = /** @class */ (function () {\r\n    function DocumentSymbol() {\r\n    }\r\n    return DocumentSymbol;\r\n}());\r\n\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nvar CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nvar CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nvar CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void null) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nvar CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data))\r\n            result.data = data;\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nvar FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * A document link is a range in a text document that links to an internal or external resource, like another\r\n * text document or a web site.\r\n */\r\nvar DocumentLink = /** @class */ (function () {\r\n    function DocumentLink() {\r\n    }\r\n    return DocumentLink;\r\n}());\r\n\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nvar EOL = ['\\n', '\\r\\n', '\\r'];\r\nvar TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nvar TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = null;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = null;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === null) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\n\n//# sourceURL=webpack:///./node_modules/vscode-languageserver-types/lib/esm/main.js?");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"fs\");\n\n//# sourceURL=webpack:///external_%22fs%22?");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"path\");\n\n//# sourceURL=webpack:///external_%22path%22?");

/***/ })

/******/ });
});